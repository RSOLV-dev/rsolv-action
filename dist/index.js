import{createRequire as l8}from"node:module";var y8=Object.create;var{getPrototypeOf:g8,defineProperty:d1,getOwnPropertyNames:u8}=Object;var d8=Object.prototype.hasOwnProperty;var c8=($,J,X)=>{X=$!=null?y8(g8($)):{};let Q=J||!$||!$.__esModule?d1(X,"default",{value:$,enumerable:!0}):X;for(let Y of u8($))if(!d8.call(Q,Y))d1(Q,Y,{get:()=>$[Y],enumerable:!0});return Q};var c1=($,J)=>{for(var X in J)d1($,X,{get:J[X],enumerable:!0,configurable:!0,set:(Q)=>J[X]=()=>Q})};var D1=($,J)=>()=>($&&(J=$($=0)),J);var p8=l8(import.meta.url);class u0{minLevel;defaultOptions;constructor($={}){this.minLevel=process.env.LOG_LEVEL?.toLowerCase()||"info",this.defaultOptions={timestamp:!0,...$}}debug($,J){this.log("debug",$,J)}info($,J){this.log("info",$,J)}warn($,J){this.log("warn",$,J)}error($,J){let X;if(J)X={error:J instanceof Error?{message:J.message,stack:J.stack}:J};this.log("error",$,X)}log($,J,X){if(!this.shouldLog($))return;let Q=this.formatLogEntry($,J,X);switch($){case"debug":console.debug(Q);break;case"info":console.info(Q);break;case"warn":console.warn(Q);break;case"error":console.error(Q);break}}shouldLog($){let J=["debug","info","warn","error"],X=J.indexOf(this.minLevel);return J.indexOf($)>=X}formatLogEntry($,J,X){let Q=this.defaultOptions.timestamp?`[${new Date().toISOString()}]`:"",Y=`[${$.toUpperCase()}]`,G=`${Q}${Y} ${J}`;if(X)try{let W=JSON.stringify(X,null,2);G+=`
${W}`}catch(W){G+=`
[Error serializing metadata]`}return G}setMinLevel($){this.minLevel=$}getMinLevel(){return this.minLevel}}var q;var v=D1(()=>{q=new u0});var S6={};c1(S6,{RSOLVCredentialManager:()=>x1});class x1{credentials=new Map;apiKey="";rsolvApiUrl;refreshTimers=new Map;constructor(){this.rsolvApiUrl=process.env.RSOLV_API_URL||"https://api.rsolv.dev"}async initialize($){this.apiKey=$,q.info("Initializing RSOLV credential manager");try{let J={api_key:$,providers:["anthropic","openai","openrouter"],ttl_minutes:60};q.info(`Requesting credential exchange from ${this.rsolvApiUrl}/api/v1/credentials/exchange`);let X=await fetch(`${this.rsolvApiUrl}/api/v1/credentials/exchange`,{method:"POST",headers:{Authorization:`Bearer ${$}`,"Content-Type":"application/json","X-GitHub-Job":process.env.GITHUB_JOB||"","X-GitHub-Run":process.env.GITHUB_RUN_ID||""},body:JSON.stringify(J),signal:AbortSignal.timeout(15000)});if(!X.ok){let Y=await X.json();throw q.error(`Credential exchange failed - Status: ${X.status}, Body:`,Y),new Error(`Failed to exchange credentials: ${Y.error||X.statusText}`)}let Q=await X.json();if(!Q||!Q.credentials)throw q.error("Invalid credential exchange response:",Q),new Error("Invalid response from credential exchange API");if(Object.entries(Q.credentials).forEach(([Y,G])=>{this.credentials.set(Y,G)}),Q.usage)q.info(`Credentials initialized. Remaining fixes: ${Q.usage.remaining_fixes}`);else q.info("Credentials initialized");this.scheduleRefresh(Q.credentials)}catch(J){throw q.error("Failed to initialize credentials",J),J}}getCredential($){let J=this.credentials.get($);if(!J)throw new Error(`No valid credential for ${$}`);if(new Date(J.expires_at)<new Date)throw new Error(`No valid credential for ${$}`);return J.api_key}async reportUsage($,J){try{let X=await fetch(`${this.rsolvApiUrl}/api/v1/usage/report`,{method:"POST",headers:{Authorization:`Bearer ${this.apiKey}`,"Content-Type":"application/json"},body:JSON.stringify({provider:$,tokens_used:J.tokensUsed,request_count:J.requestCount,job_id:process.env.GITHUB_JOB}),signal:AbortSignal.timeout(5000)});if(!X.ok){let Q=await X.json();throw new Error(`Failed to report usage: ${Q.error||X.statusText}`)}}catch(X){q.warn("Failed to report usage",X)}}cleanup(){this.credentials.clear(),this.refreshTimers.forEach(($)=>clearTimeout($)),this.refreshTimers.clear(),q.info("Credential manager cleaned up")}scheduleRefresh($){Object.entries($).forEach(([J,X])=>{let Q=new Date(X.expires_at),Y=new Date,W=Q.getTime()-Y.getTime()-300000;if(W>0){let H=setTimeout(()=>{this.refreshCredentials(J).catch((z)=>{q.error("Failed to refresh credentials",z)})},W);this.refreshTimers.set(J,H),q.debug(`Scheduled refresh for ${J} in ${W}ms`)}})}async refreshCredentials($){if(!this.credentials.get($)){q.warn(`No credential found for ${$} during refresh`);return}q.info(`Refreshing credentials for ${$}`);try{let X=await fetch(`${this.rsolvApiUrl}/api/v1/credentials/refresh`,{method:"POST",headers:{Authorization:`Bearer ${this.apiKey}`,"Content-Type":"application/json"},body:JSON.stringify({api_key:this.apiKey,credential_id:$}),signal:AbortSignal.timeout(1e4)});if(!X.ok){let G=await X.json();throw new Error(`Failed to refresh credentials: ${G.error||X.statusText}`)}let Y=(await X.json()).credentials[$];if(Y)this.credentials.set($,Y),q.info(`Successfully refreshed credentials for ${$}`),this.scheduleRefresh({[$]:Y})}catch(X){throw q.error(`Failed to refresh credentials for ${$}`,X),X}}}var h1=D1(()=>{v()});function n($){let J=$;J=J.replace(/https?:\/\/api\.[a-zA-Z0-9.-]+\.(com|ai|dev|io)(\/[a-zA-Z0-9/\-._~:/?#[\]@!$&'()*+,;=]*)?/gi,"API endpoint"),J=J.replace(/\b(sk-proj-|sk-|ant_|key[:\s]+)[a-zA-Z0-9_\-]{8,}/gi,"API credential"),J=J.replace(/\b(api[_-]?key|token|secret|credential)([:\s]+)[a-zA-Z0-9_\-]{8,}/gi,"$1$2[REDACTED]"),J=J.replace(/\b[A-Z][A-Z0-9_]*_API_KEY\b/g,"API_KEY"),J=J.replace(/\b(claude-[0-9a-z\-\.]+|gpt-[0-9a-z\-\.]+|text-davinci-[0-9]+)\b/gi,"AI model");let Q=new RegExp(`\\b(${["anthropic","claude","openai","gpt","mistral","ollama","gemini","bard"].join("|")})\\b`,"gi");if(J=J.replace(Q,"AI provider"),J.includes("Failed to connect to"))J=J.replace(/Failed to connect to .+ API/g,"Failed to connect to AI provider API");return J=J.replace(/\/v\d+\/[a-zA-Z]+/g,"/api/endpoint"),J=J.replace(/\/chat\/completions/g,"/api/endpoint"),J=J.replace(/\s+/g," ").trim(),J=J.replace(/AI provider provider/gi,"AI provider"),J=J.replace(/API credential credential/gi,"API credential"),J}async function a$($){if($.useVendedCredentials&&!R$)try{R$=new x1,await R$.initialize(process.env.RSOLV_API_KEY||"")}catch(J){q.warn("Failed to initialize credential vending",J),R$=null}switch($.provider.toLowerCase()){case"openai":return new _8($,R$);case"anthropic":case"claude-code":return new N8($,R$);case"mistral":return new S8($,R$);case"ollama":return new j8($,R$);default:throw new Error(`Unsupported AI provider: ${$.provider}`)}}class _8{config;credentialManager;constructor($,J){if(this.config=$,this.credentialManager=J,!$.useVendedCredentials&&!$.apiKey)throw new Error("AI provider API key is required")}async complete($,J={}){try{return q.debug("Sending request to AI provider",{prompt:$.substring(0,100)+"..."}),await this.makeApiCall($,J)}catch(X){throw q.error("AI provider API error",X),new Error(n(`AI provider error: ${X instanceof Error?X.message:String(X)}`))}}async makeApiCall($,J){try{let X=this.config.baseUrl||"https://api.openai.com/v1",Q=J.model||this.config.model||"gpt-4",Y=J.temperature??this.config.temperature??0.2,G=J.maxTokens??this.config.maxTokens??2000,W={model:Q,messages:[{role:"user",content:$}],temperature:Y,max_tokens:G,top_p:J.topP??1,frequency_penalty:J.frequencyPenalty??0,presence_penalty:J.presencePenalty??0},H;try{H=this.config.useVendedCredentials?this.credentialManager?.getCredential("openai"):this.config.apiKey}catch(M){throw new Error("Failed to retrieve API key")}if(!H)throw new Error("Failed to retrieve API key");let z=await fetch(`${X}/chat/completions`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${H}`},body:JSON.stringify(W)});if(!z.ok){let M=await z.json().catch(()=>({}));throw new Error(n(`AI provider error (${z.status}): ${M.error?.message||z.statusText}`))}let B=await z.json(),U=B.choices[0]?.message?.content||"";if(this.config.useVendedCredentials&&this.credentialManager){let M=B.usage?.total_tokens||0;await this.credentialManager.reportUsage("openai",{tokensUsed:M,requestCount:1})}return U}catch(X){throw q.error("Error calling AI provider API",X),X}}getMockResponse($){return`Analysis of the issue:

This appears to be a bug in the authentication system where token validation is failing for valid tokens that contain special characters. The issue is likely in the token parsing logic.

Files to modify:
- \`src/auth/tokenValidator.js\`
- \`src/utils/stringEscaping.js\`

Suggested Approach:
The token validator is not properly handling URL-encoded characters. We need to update the validation function to properly decode tokens before validation, and ensure that special characters are correctly handled throughout the authentication flow.`}}class N8{config;credentialManager;constructor($,J){if(this.config=$,this.credentialManager=J,!$.useVendedCredentials&&!$.apiKey)throw new Error("AI provider API key is required")}async complete($,J={}){try{return q.debug("Sending request to AI provider",{prompt:$.substring(0,100)+"..."}),await this.makeApiCall($,J)}catch(X){throw q.error("AI provider API error",X),new Error(n(`AI provider error: ${X instanceof Error?X.message:String(X)}`))}}async makeApiCall($,J){try{let X=this.config.baseUrl||"https://api.anthropic.com",Q=J.model||this.config.model||"claude-3-sonnet-20240229",Y=J.temperature??this.config.temperature??0.2,G=J.maxTokens??this.config.maxTokens??2000,W={model:Q,messages:[{role:"user",content:$}],temperature:Y,max_tokens:G,top_p:J.topP??1},H;try{H=this.config.useVendedCredentials?this.credentialManager?.getCredential("anthropic"):this.config.apiKey}catch(M){throw new Error("Failed to retrieve API key")}if(!H)throw new Error("Failed to retrieve API key");let z=await fetch(`${X}/v1/messages`,{method:"POST",headers:{"Content-Type":"application/json","X-API-Key":H,"anthropic-version":"2023-06-01"},body:JSON.stringify(W)});if(!z.ok){let M=await z.json().catch(()=>({}));throw new Error(n(`AI provider error (${z.status}): ${M.error?.message||z.statusText}`))}let B=await z.json(),U=B.content?.[0]?.text||"";if(this.config.useVendedCredentials&&this.credentialManager){let M=B.usage?.total_tokens||0;await this.credentialManager.reportUsage("anthropic",{tokensUsed:M,requestCount:1})}return U}catch(X){throw q.error("Error calling AI provider API",X),X}}getMockResponse($){return`Based on my analysis, this is a performance issue in the data processing pipeline.

The main bottleneck appears to be in the file processing function that's not properly streaming large files, leading to excessive memory usage.

Files that need modification:
- \`src/services/fileProcessor.js\`
- \`src/utils/streamHandler.js\`

This is a medium complexity issue that will require implementing proper stream processing instead of loading the entire file into memory. The fix should significantly reduce memory usage and improve processing speed.`}}class S8{config;credentialManager;constructor($,J){if(this.config=$,this.credentialManager=J,!$.useVendedCredentials&&!$.apiKey)throw new Error("AI provider API key is required")}async complete($,J={}){try{return q.debug("Sending request to AI provider",{prompt:$.substring(0,100)+"..."}),await this.simulateApiCall($,J)}catch(X){throw q.error("AI provider API error",X),new Error(n(`AI provider error: ${X instanceof Error?X.message:String(X)}`))}}async simulateApiCall($,J){return await new Promise((X)=>setTimeout(X,550)),`This is a documentation issue where the installation instructions are unclear for Windows users.

The documentation needs to be updated to include Windows-specific commands and requirements.

Files to modify:
- \`docs/installation.md\`
- \`README.md\`

This is a simple fix that involves adding a new section for Windows installation instructions, including how to set up the environment variables correctly and handle path differences.`}}class j8{config;credentialManager;constructor($,J){this.config=$,this.credentialManager=J}async complete($,J={}){try{return q.debug("Sending request to AI provider",{prompt:$.substring(0,100)+"..."}),await this.simulateApiCall($,J)}catch(X){throw q.error("AI provider API error",X),new Error(n(`AI provider error: ${X instanceof Error?X.message:String(X)}`))}}async simulateApiCall($,J){return await new Promise((X)=>setTimeout(X,1000)),`I've analyzed the feature request for adding pagination to the API endpoints.

This is a medium complexity task that will require modifying multiple files:
- \`src/controllers/userController.js\`
- \`src/services/queryService.js\`
- \`src/middleware/pagination.js\` (new file needed)

The approach should be to create a reusable pagination middleware that can be applied to all list endpoints. This will require updating the query service to support limit and offset parameters, and updating the controllers to use the new middleware.`}}var R$=null;var m1=D1(()=>{v();h1()});function E8($){return`I need you to analyze the following software issue and provide a technical assessment.

Issue Title: ${$.title}

Issue Description:
${$.body}

Repository: ${$.repository.fullName}
Primary Language: ${$.repository.language||"Unknown"}

Please provide:
1. A determination of what type of issue this is (bug, feature request, refactoring, etc.)
2. Which files are likely to need modification
3. An estimate of the complexity (simple, medium, complex)
4. A suggested approach to solve the issue

Focus on technical details and be specific about the implementation approach. If the issue description lacks critical information, note what additional context would be needed.`}function I8($,J,X){let Q=`I need you to generate a solution for the following software issue:

Issue Title: ${$.title}

Issue Description:
${$.body}

Repository: ${$.repository.fullName}
Primary Language: ${$.repository.language||"Unknown"}

Based on my analysis, this is a ${J.issueType} issue with ${J.estimatedComplexity} complexity.

The suggested approach is: ${J.suggestedApproach}

I need you to generate specific code changes to resolve this issue. Here are the relevant files with their current content:
`;for(let[Y,G]of Object.entries(X))Q+=`
--- ${Y} ---
\`\`\`
${G}
\`\`\`
`;return Q+=`
IMPORTANT: Format your response EXACTLY as shown below for proper parsing:

For each file that needs to be modified, use one of these formats:

Option 1 (preferred):
filename.ext:
\`\`\`language
[complete file content]
\`\`\`

Option 2:
--- filename.ext ---
\`\`\`language
[complete file content]
\`\`\`

Example:
src/auth/login.js:
\`\`\`javascript
function authenticateUser(username, password) {
  // secure implementation here
}
\`\`\`

CRITICAL: The parser requires EXACT formatting. Use one of the above formats or the solution will fail.

After all file changes, add:
1. Brief explanation of changes
2. How this fixes the issue
3. Any assumptions made

Provide complete, working code following existing patterns.`,Q}function P8($,J,X){let Q=Object.keys(X).join(", ");return`I need you to generate a clear, professional pull request description for the following changes.

Issue: ${$.title} (#${$.number})

Issue Type: ${J.issueType}
Complexity: ${J.estimatedComplexity}

Files modified: ${Q}

Approach taken: ${J.suggestedApproach}

Please generate a pull request description with:
1. A clear, concise title that summarizes the change
2. A detailed description explaining what was changed and why
3. Any testing instructions or considerations for reviewers
4. References to the original issue

Keep the tone professional but friendly, and focus on the technical details that would be relevant to code reviewers.`}function C8($){switch($){case"bug":return"For this bug fix, focus on identifying the root cause first before implementing a solution. Consider edge cases and ensure your fix doesn't introduce regressions. Include tests that verify the fix works as expected.";case"feature":return"For this feature implementation, ensure the solution is well-integrated with the existing architecture. Consider backward compatibility, error handling, and appropriate documentation. Include tests for the new functionality.";case"refactoring":return"For this refactoring task, maintain identical functionality while improving the code structure. Focus on readability, maintainability, and adherence to design principles. Ensure tests pass before and after your changes.";case"performance":return"For this performance improvement, focus on identifying bottlenecks and optimizing critical paths. Consider time and space complexity, and measure before/after metrics where possible. Be careful not to sacrifice code readability for marginal gains.";case"security":return"For this security issue, approach with extra caution. Ensure the fix addresses the root vulnerability completely without introducing new attack vectors. Consider all possible exploit scenarios and follow security best practices.";case"documentation":return"For this documentation task, focus on clarity, completeness, and accuracy. Ensure examples are working and up-to-date. Consider both beginner and advanced users, and follow any documentation style guidelines present in the project.";case"dependency":return"For this dependency update, carefully check for breaking changes and necessary adjustments to the codebase. Update any affected tests and documentation. Consider whether the update brings security fixes that should be highlighted.";case"test":return"For this testing task, ensure comprehensive coverage of edge cases and typical usage patterns. Follow existing testing patterns and naming conventions. Consider both unit and integration tests as appropriate for the code being tested.";default:return"For this task, ensure your solution is well-integrated with the existing codebase and follows the project's coding conventions. Include appropriate error handling, documentation, and tests."}}var Z8={};c1(Z8,{analyzeIssue:()=>E6});async function E6($,J,X){q.info(`Analyzing issue #${$.number} with AI`);let Q=X||await a$(J.aiProvider),Y=E8($);try{let G=await Q.complete(Y,{temperature:J.aiProvider.temperature||0.2,maxTokens:J.aiProvider.maxTokens||2000,model:J.aiProvider.model});return q.debug("AI analysis response received",{response:G}),P7(G,$)}catch(G){throw q.error("Error analyzing issue with AI",G),new Error(`AI analysis failed: ${G instanceof Error?G.message:String(G)}`)}}function P7($,J){try{q.info(`AI analysis response for issue #${J.number}:`,$.substring(0,500));let X=C7(J),Q=[],Y="medium",G=/`([\w\-./]+\.[\w]+)`|"([\w\-./]+\.[\w]+)"|'([\w\-./]+\.[\w]+)'|([\w\-./]*\/[\w\-./]*\.(?:js|ts|py|java|rb|php|go|rs|cpp|c|h))/g,W;while((W=G.exec($))!==null){let U=W[1]||W[2]||W[3]||W[4];if(U&&!Q.includes(U))Q.push(U)}let H=["login.js","auth.js","login.ts","auth.ts","authentication.js","authentication.ts","security.js","security.ts"];for(let U of H)if($.toLowerCase().includes(U.toLowerCase())&&!Q.includes(U))Q.push(U);if($.toLowerCase().includes("simple")||$.toLowerCase().includes("straightforward"))Y="simple";else if($.toLowerCase().includes("complex")||$.toLowerCase().includes("challenging"))Y="complex";let z="",B=["Suggested Approach:","Approach:","Solution:","Fix:","Recommendation:","To fix this"];for(let U of B)if($.includes(U)){if(z=$.split(U)[1]?.split(`

`)[0]?.trim()||"",z)break}if(!z&&$.length>50)if($.length>500)z=$.trim();else z=$.split(`

`).filter((M)=>M.trim().length>20)[0]?.trim()||"";return q.info(`Parsed analysis for issue #${J.number}:`,{filesToModify:Q,suggestedApproach:z.substring(0,100),canBeFixed:Q.length>0&&z.length>0}),{issueType:X,filesToModify:Q,estimatedComplexity:Y,requiredContext:[],suggestedApproach:z,confidenceScore:0.7,canBeFixed:(Q.length>0||z.length>50)&&z.length>0}}catch(X){return q.error("Error parsing AI analysis response",X),{issueType:"other",filesToModify:[],estimatedComplexity:"medium",requiredContext:[],suggestedApproach:"Unable to determine approach from AI analysis.",canBeFixed:!1}}}function C7($){let J=$.title.toLowerCase(),X=$.body.toLowerCase(),Q=`${J} ${X}`;for(let Y of $.labels){if(Y.toLowerCase().includes("bug"))return"bug";if(Y.toLowerCase().includes("feature"))return"feature";if(Y.toLowerCase().includes("refactor"))return"refactoring";if(Y.toLowerCase().includes("performance"))return"performance";if(Y.toLowerCase().includes("security"))return"security";if(Y.toLowerCase().includes("documentation"))return"documentation";if(Y.toLowerCase().includes("dependency"))return"dependency";if(Y.toLowerCase().includes("test"))return"test"}if(Q.includes("fix")||Q.includes("bug")||Q.includes("issue")||Q.includes("crash")||Q.includes("error"))return"bug";else if(Q.includes("add")||Q.includes("new")||Q.includes("feature")||Q.includes("implement"))return"feature";else if(Q.includes("refactor")||Q.includes("clean")||Q.includes("improve code"))return"refactoring";else if(Q.includes("performance")||Q.includes("slow")||Q.includes("optimize")||Q.includes("speed"))return"performance";else if(Q.includes("secur")||Q.includes("vulnerab")||Q.includes("hack")||Q.includes("attack"))return"security";else if(Q.includes("document")||Q.includes("readme")||Q.includes("wiki")||Q.includes("comment"))return"documentation";else if(Q.includes("dependency")||Q.includes("upgrade")||Q.includes("update")||Q.includes("package"))return"dependency";else if(Q.includes("test")||Q.includes("spec")||Q.includes("unit test")||Q.includes("coverage"))return"test";return"other"}var I6=D1(()=>{v();m1()});import*as k1 from"fs";/*! js-yaml 4.1.0 https://github.com/nodeca/js-yaml @license MIT */function Q0($){return typeof $==="undefined"||$===null}function n8($){return typeof $==="object"&&$!==null}function r8($){if(Array.isArray($))return $;else if(Q0($))return[];return[$]}function o8($,J){var X,Q,Y,G;if(J){G=Object.keys(J);for(X=0,Q=G.length;X<Q;X+=1)Y=G[X],$[Y]=J[Y]}return $}function i8($,J){var X="",Q;for(Q=0;Q<J;Q+=1)X+=$;return X}function a8($){return $===0&&Number.NEGATIVE_INFINITY===1/$}var s8=Q0,t8=n8,e8=r8,$9=i8,J9=a8,X9=o8,h={isNothing:s8,isObject:t8,toArray:e8,repeat:$9,isNegativeZero:J9,extend:X9};function Y0($,J){var X="",Q=$.reason||"(unknown reason)";if(!$.mark)return Q;if($.mark.name)X+='in "'+$.mark.name+'" ';if(X+="("+($.mark.line+1)+":"+($.mark.column+1)+")",!J&&$.mark.snippet)X+=`

`+$.mark.snippet;return Q+" "+X}function t$($,J){if(Error.call(this),this.name="YAMLException",this.reason=$,this.mark=J,this.message=Y0(this,!1),Error.captureStackTrace)Error.captureStackTrace(this,this.constructor);else this.stack=new Error().stack||""}t$.prototype=Object.create(Error.prototype);t$.prototype.constructor=t$;t$.prototype.toString=function $(J){return this.name+": "+Y0(this,J)};var d=t$;function l1($,J,X,Q,Y){var G="",W="",H=Math.floor(Y/2)-1;if(Q-J>H)G=" ... ",J=Q-H+G.length;if(X-Q>H)W=" ...",X=Q+H-W.length;return{str:G+$.slice(J,X).replace(/\t/g,"→")+W,pos:Q-J+G.length}}function p1($,J){return h.repeat(" ",J-$.length)+$}function Q9($,J){if(J=Object.create(J||null),!$.buffer)return null;if(!J.maxLength)J.maxLength=79;if(typeof J.indent!=="number")J.indent=1;if(typeof J.linesBefore!=="number")J.linesBefore=3;if(typeof J.linesAfter!=="number")J.linesAfter=2;var X=/\r?\n|\r|\0/g,Q=[0],Y=[],G,W=-1;while(G=X.exec($.buffer))if(Y.push(G.index),Q.push(G.index+G[0].length),$.position<=G.index&&W<0)W=Q.length-2;if(W<0)W=Q.length-1;var H="",z,B,U=Math.min($.line+J.linesAfter,Y.length).toString().length,M=J.maxLength-(J.indent+U+3);for(z=1;z<=J.linesBefore;z++){if(W-z<0)break;B=l1($.buffer,Q[W-z],Y[W-z],$.position-(Q[W]-Q[W-z]),M),H=h.repeat(" ",J.indent)+p1(($.line-z+1).toString(),U)+" | "+B.str+`
`+H}B=l1($.buffer,Q[W],Y[W],$.position,M),H+=h.repeat(" ",J.indent)+p1(($.line+1).toString(),U)+" | "+B.str+`
`,H+=h.repeat("-",J.indent+U+3+B.pos)+`^
`;for(z=1;z<=J.linesAfter;z++){if(W+z>=Y.length)break;B=l1($.buffer,Q[W+z],Y[W+z],$.position-(Q[W]-Q[W+z]),M),H+=h.repeat(" ",J.indent)+p1(($.line+z+1).toString(),U)+" | "+B.str+`
`}return H.replace(/\n$/,"")}var Y9=Q9,W9=["kind","multi","resolve","construct","instanceOf","predicate","represent","representName","defaultStyle","styleAliases"],G9=["scalar","sequence","mapping"];function H9($){var J={};if($!==null)Object.keys($).forEach(function(X){$[X].forEach(function(Q){J[String(Q)]=X})});return J}function z9($,J){if(J=J||{},Object.keys(J).forEach(function(X){if(W9.indexOf(X)===-1)throw new d('Unknown option "'+X+'" is met in definition of "'+$+'" YAML type.')}),this.options=J,this.tag=$,this.kind=J.kind||null,this.resolve=J.resolve||function(){return!0},this.construct=J.construct||function(X){return X},this.instanceOf=J.instanceOf||null,this.predicate=J.predicate||null,this.represent=J.represent||null,this.representName=J.representName||null,this.defaultStyle=J.defaultStyle||null,this.multi=J.multi||!1,this.styleAliases=H9(J.styleAliases||null),G9.indexOf(this.kind)===-1)throw new d('Unknown kind "'+this.kind+'" is specified for "'+$+'" YAML type.')}var y=z9;function d6($,J){var X=[];return $[J].forEach(function(Q){var Y=X.length;X.forEach(function(G,W){if(G.tag===Q.tag&&G.kind===Q.kind&&G.multi===Q.multi)Y=W}),X[Y]=Q}),X}function q9(){var $={scalar:{},sequence:{},mapping:{},fallback:{},multi:{scalar:[],sequence:[],mapping:[],fallback:[]}},J,X;function Q(Y){if(Y.multi)$.multi[Y.kind].push(Y),$.multi.fallback.push(Y);else $[Y.kind][Y.tag]=$.fallback[Y.tag]=Y}for(J=0,X=arguments.length;J<X;J+=1)arguments[J].forEach(Q);return $}function r1($){return this.extend($)}r1.prototype.extend=function $(J){var X=[],Q=[];if(J instanceof y)Q.push(J);else if(Array.isArray(J))Q=Q.concat(J);else if(J&&(Array.isArray(J.implicit)||Array.isArray(J.explicit))){if(J.implicit)X=X.concat(J.implicit);if(J.explicit)Q=Q.concat(J.explicit)}else throw new d("Schema.extend argument should be a Type, [ Type ], or a schema definition ({ implicit: [...], explicit: [...] })");X.forEach(function(G){if(!(G instanceof y))throw new d("Specified list of YAML types (or a single Type object) contains a non-Type object.");if(G.loadKind&&G.loadKind!=="scalar")throw new d("There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.");if(G.multi)throw new d("There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.")}),Q.forEach(function(G){if(!(G instanceof y))throw new d("Specified list of YAML types (or a single Type object) contains a non-Type object.")});var Y=Object.create(r1.prototype);return Y.implicit=(this.implicit||[]).concat(X),Y.explicit=(this.explicit||[]).concat(Q),Y.compiledImplicit=d6(Y,"implicit"),Y.compiledExplicit=d6(Y,"explicit"),Y.compiledTypeMap=q9(Y.compiledImplicit,Y.compiledExplicit),Y};var B9=r1,U9=new y("tag:yaml.org,2002:str",{kind:"scalar",construct:function($){return $!==null?$:""}}),M9=new y("tag:yaml.org,2002:seq",{kind:"sequence",construct:function($){return $!==null?$:[]}}),V9=new y("tag:yaml.org,2002:map",{kind:"mapping",construct:function($){return $!==null?$:{}}}),F9=new B9({explicit:[U9,M9,V9]});function K9($){if($===null)return!0;var J=$.length;return J===1&&$==="~"||J===4&&($==="null"||$==="Null"||$==="NULL")}function w9(){return null}function R9($){return $===null}var O9=new y("tag:yaml.org,2002:null",{kind:"scalar",resolve:K9,construct:w9,predicate:R9,represent:{canonical:function(){return"~"},lowercase:function(){return"null"},uppercase:function(){return"NULL"},camelcase:function(){return"Null"},empty:function(){return""}},defaultStyle:"lowercase"});function D9($){if($===null)return!1;var J=$.length;return J===4&&($==="true"||$==="True"||$==="TRUE")||J===5&&($==="false"||$==="False"||$==="FALSE")}function A9($){return $==="true"||$==="True"||$==="TRUE"}function L9($){return Object.prototype.toString.call($)==="[object Boolean]"}var _9=new y("tag:yaml.org,2002:bool",{kind:"scalar",resolve:D9,construct:A9,predicate:L9,represent:{lowercase:function($){return $?"true":"false"},uppercase:function($){return $?"TRUE":"FALSE"},camelcase:function($){return $?"True":"False"}},defaultStyle:"lowercase"});function N9($){return 48<=$&&$<=57||65<=$&&$<=70||97<=$&&$<=102}function S9($){return 48<=$&&$<=55}function j9($){return 48<=$&&$<=57}function E9($){if($===null)return!1;var J=$.length,X=0,Q=!1,Y;if(!J)return!1;if(Y=$[X],Y==="-"||Y==="+")Y=$[++X];if(Y==="0"){if(X+1===J)return!0;if(Y=$[++X],Y==="b"){X++;for(;X<J;X++){if(Y=$[X],Y==="_")continue;if(Y!=="0"&&Y!=="1")return!1;Q=!0}return Q&&Y!=="_"}if(Y==="x"){X++;for(;X<J;X++){if(Y=$[X],Y==="_")continue;if(!N9($.charCodeAt(X)))return!1;Q=!0}return Q&&Y!=="_"}if(Y==="o"){X++;for(;X<J;X++){if(Y=$[X],Y==="_")continue;if(!S9($.charCodeAt(X)))return!1;Q=!0}return Q&&Y!=="_"}}if(Y==="_")return!1;for(;X<J;X++){if(Y=$[X],Y==="_")continue;if(!j9($.charCodeAt(X)))return!1;Q=!0}if(!Q||Y==="_")return!1;return!0}function I9($){var J=$,X=1,Q;if(J.indexOf("_")!==-1)J=J.replace(/_/g,"");if(Q=J[0],Q==="-"||Q==="+"){if(Q==="-")X=-1;J=J.slice(1),Q=J[0]}if(J==="0")return 0;if(Q==="0"){if(J[1]==="b")return X*parseInt(J.slice(2),2);if(J[1]==="x")return X*parseInt(J.slice(2),16);if(J[1]==="o")return X*parseInt(J.slice(2),8)}return X*parseInt(J,10)}function P9($){return Object.prototype.toString.call($)==="[object Number]"&&($%1===0&&!h.isNegativeZero($))}var C9=new y("tag:yaml.org,2002:int",{kind:"scalar",resolve:E9,construct:I9,predicate:P9,represent:{binary:function($){return $>=0?"0b"+$.toString(2):"-0b"+$.toString(2).slice(1)},octal:function($){return $>=0?"0o"+$.toString(8):"-0o"+$.toString(8).slice(1)},decimal:function($){return $.toString(10)},hexadecimal:function($){return $>=0?"0x"+$.toString(16).toUpperCase():"-0x"+$.toString(16).toUpperCase().slice(1)}},defaultStyle:"decimal",styleAliases:{binary:[2,"bin"],octal:[8,"oct"],decimal:[10,"dec"],hexadecimal:[16,"hex"]}}),Z9=new RegExp("^(?:[-+]?(?:[0-9][0-9_]*)(?:\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?|\\.[0-9_]+(?:[eE][-+]?[0-9]+)?|[-+]?\\.(?:inf|Inf|INF)|\\.(?:nan|NaN|NAN))$");function k9($){if($===null)return!1;if(!Z9.test($)||$[$.length-1]==="_")return!1;return!0}function T9($){var J,X;if(J=$.replace(/_/g,"").toLowerCase(),X=J[0]==="-"?-1:1,"+-".indexOf(J[0])>=0)J=J.slice(1);if(J===".inf")return X===1?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY;else if(J===".nan")return NaN;return X*parseFloat(J,10)}var v9=/^[-+]?[0-9]+e/;function b9($,J){var X;if(isNaN($))switch(J){case"lowercase":return".nan";case"uppercase":return".NAN";case"camelcase":return".NaN"}else if(Number.POSITIVE_INFINITY===$)switch(J){case"lowercase":return".inf";case"uppercase":return".INF";case"camelcase":return".Inf"}else if(Number.NEGATIVE_INFINITY===$)switch(J){case"lowercase":return"-.inf";case"uppercase":return"-.INF";case"camelcase":return"-.Inf"}else if(h.isNegativeZero($))return"-0.0";return X=$.toString(10),v9.test(X)?X.replace("e",".e"):X}function f9($){return Object.prototype.toString.call($)==="[object Number]"&&($%1!==0||h.isNegativeZero($))}var x9=new y("tag:yaml.org,2002:float",{kind:"scalar",resolve:k9,construct:T9,predicate:f9,represent:b9,defaultStyle:"lowercase"}),h9=F9.extend({implicit:[O9,_9,C9,x9]}),m9=h9,W0=new RegExp("^([0-9][0-9][0-9][0-9])-([0-9][0-9])-([0-9][0-9])$"),G0=new RegExp("^([0-9][0-9][0-9][0-9])-([0-9][0-9]?)-([0-9][0-9]?)(?:[Tt]|[ \\t]+)([0-9][0-9]?):([0-9][0-9]):([0-9][0-9])(?:\\.([0-9]*))?(?:[ \\t]*(Z|([-+])([0-9][0-9]?)(?::([0-9][0-9]))?))?$");function y9($){if($===null)return!1;if(W0.exec($)!==null)return!0;if(G0.exec($)!==null)return!0;return!1}function g9($){var J,X,Q,Y,G,W,H,z=0,B=null,U,M,F;if(J=W0.exec($),J===null)J=G0.exec($);if(J===null)throw new Error("Date resolve error");if(X=+J[1],Q=+J[2]-1,Y=+J[3],!J[4])return new Date(Date.UTC(X,Q,Y));if(G=+J[4],W=+J[5],H=+J[6],J[7]){z=J[7].slice(0,3);while(z.length<3)z+="0";z=+z}if(J[9]){if(U=+J[10],M=+(J[11]||0),B=(U*60+M)*60000,J[9]==="-")B=-B}if(F=new Date(Date.UTC(X,Q,Y,G,W,H,z)),B)F.setTime(F.getTime()-B);return F}function u9($){return $.toISOString()}var d9=new y("tag:yaml.org,2002:timestamp",{kind:"scalar",resolve:y9,construct:g9,instanceOf:Date,represent:u9});function c9($){return $==="<<"||$===null}var l9=new y("tag:yaml.org,2002:merge",{kind:"scalar",resolve:c9}),t1=`ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=
\r`;function p9($){if($===null)return!1;var J,X,Q=0,Y=$.length,G=t1;for(X=0;X<Y;X++){if(J=G.indexOf($.charAt(X)),J>64)continue;if(J<0)return!1;Q+=6}return Q%8===0}function n9($){var J,X,Q=$.replace(/[\r\n=]/g,""),Y=Q.length,G=t1,W=0,H=[];for(J=0;J<Y;J++){if(J%4===0&&J)H.push(W>>16&255),H.push(W>>8&255),H.push(W&255);W=W<<6|G.indexOf(Q.charAt(J))}if(X=Y%4*6,X===0)H.push(W>>16&255),H.push(W>>8&255),H.push(W&255);else if(X===18)H.push(W>>10&255),H.push(W>>2&255);else if(X===12)H.push(W>>4&255);return new Uint8Array(H)}function r9($){var J="",X=0,Q,Y,G=$.length,W=t1;for(Q=0;Q<G;Q++){if(Q%3===0&&Q)J+=W[X>>18&63],J+=W[X>>12&63],J+=W[X>>6&63],J+=W[X&63];X=(X<<8)+$[Q]}if(Y=G%3,Y===0)J+=W[X>>18&63],J+=W[X>>12&63],J+=W[X>>6&63],J+=W[X&63];else if(Y===2)J+=W[X>>10&63],J+=W[X>>4&63],J+=W[X<<2&63],J+=W[64];else if(Y===1)J+=W[X>>2&63],J+=W[X<<4&63],J+=W[64],J+=W[64];return J}function o9($){return Object.prototype.toString.call($)==="[object Uint8Array]"}var i9=new y("tag:yaml.org,2002:binary",{kind:"scalar",resolve:p9,construct:n9,predicate:o9,represent:r9}),a9=Object.prototype.hasOwnProperty,s9=Object.prototype.toString;function t9($){if($===null)return!0;var J=[],X,Q,Y,G,W,H=$;for(X=0,Q=H.length;X<Q;X+=1){if(Y=H[X],W=!1,s9.call(Y)!=="[object Object]")return!1;for(G in Y)if(a9.call(Y,G))if(!W)W=!0;else return!1;if(!W)return!1;if(J.indexOf(G)===-1)J.push(G);else return!1}return!0}function e9($){return $!==null?$:[]}var $J=new y("tag:yaml.org,2002:omap",{kind:"sequence",resolve:t9,construct:e9}),JJ=Object.prototype.toString;function XJ($){if($===null)return!0;var J,X,Q,Y,G,W=$;G=new Array(W.length);for(J=0,X=W.length;J<X;J+=1){if(Q=W[J],JJ.call(Q)!=="[object Object]")return!1;if(Y=Object.keys(Q),Y.length!==1)return!1;G[J]=[Y[0],Q[Y[0]]]}return!0}function QJ($){if($===null)return[];var J,X,Q,Y,G,W=$;G=new Array(W.length);for(J=0,X=W.length;J<X;J+=1)Q=W[J],Y=Object.keys(Q),G[J]=[Y[0],Q[Y[0]]];return G}var YJ=new y("tag:yaml.org,2002:pairs",{kind:"sequence",resolve:XJ,construct:QJ}),WJ=Object.prototype.hasOwnProperty;function GJ($){if($===null)return!0;var J,X=$;for(J in X)if(WJ.call(X,J)){if(X[J]!==null)return!1}return!0}function HJ($){return $!==null?$:{}}var zJ=new y("tag:yaml.org,2002:set",{kind:"mapping",resolve:GJ,construct:HJ}),H0=m9.extend({implicit:[d9,l9],explicit:[i9,$J,YJ,zJ]}),B$=Object.prototype.hasOwnProperty,A1=1,z0=2,q0=3,L1=4,n1=1,qJ=2,c6=3,BJ=/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F-\x84\x86-\x9F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,UJ=/[\x85\u2028\u2029]/,MJ=/[,\[\]\{\}]/,B0=/^(?:!|!!|![a-z\-]+!)$/i,U0=/^(?:!|[^,\[\]\{\}])(?:%[0-9a-f]{2}|[0-9a-z\-#;\/\?:@&=\+\$,_\.!~\*'\(\)\[\]])*$/i;function l6($){return Object.prototype.toString.call($)}function t($){return $===10||$===13}function D$($){return $===9||$===32}function c($){return $===9||$===32||$===10||$===13}function P$($){return $===44||$===91||$===93||$===123||$===125}function VJ($){var J;if(48<=$&&$<=57)return $-48;if(J=$|32,97<=J&&J<=102)return J-97+10;return-1}function FJ($){if($===120)return 2;if($===117)return 4;if($===85)return 8;return 0}function KJ($){if(48<=$&&$<=57)return $-48;return-1}function p6($){return $===48?"\x00":$===97?"\x07":$===98?"\b":$===116?"\t":$===9?"\t":$===110?`
`:$===118?"\v":$===102?"\f":$===114?"\r":$===101?"\x1B":$===32?" ":$===34?'"':$===47?"/":$===92?"\\":$===78?"":$===95?" ":$===76?"\u2028":$===80?"\u2029":""}function wJ($){if($<=65535)return String.fromCharCode($);return String.fromCharCode(($-65536>>10)+55296,($-65536&1023)+56320)}var M0=new Array(256),V0=new Array(256);for(z$=0;z$<256;z$++)M0[z$]=p6(z$)?1:0,V0[z$]=p6(z$);var z$;function RJ($,J){this.input=$,this.filename=J.filename||null,this.schema=J.schema||H0,this.onWarning=J.onWarning||null,this.legacy=J.legacy||!1,this.json=J.json||!1,this.listener=J.listener||null,this.implicitTypes=this.schema.compiledImplicit,this.typeMap=this.schema.compiledTypeMap,this.length=$.length,this.position=0,this.line=0,this.lineStart=0,this.lineIndent=0,this.firstTabInLine=-1,this.documents=[]}function F0($,J){var X={name:$.filename,buffer:$.input.slice(0,-1),position:$.position,line:$.line,column:$.position-$.lineStart};return X.snippet=Y9(X),new d(J,X)}function L($,J){throw F0($,J)}function _1($,J){if($.onWarning)$.onWarning.call(null,F0($,J))}var n6={YAML:function $(J,X,Q){var Y,G,W;if(J.version!==null)L(J,"duplication of %YAML directive");if(Q.length!==1)L(J,"YAML directive accepts exactly one argument");if(Y=/^([0-9]+)\.([0-9]+)$/.exec(Q[0]),Y===null)L(J,"ill-formed argument of the YAML directive");if(G=parseInt(Y[1],10),W=parseInt(Y[2],10),G!==1)L(J,"unacceptable YAML version of the document");if(J.version=Q[0],J.checkLineBreaks=W<2,W!==1&&W!==2)_1(J,"unsupported YAML version of the document")},TAG:function $(J,X,Q){var Y,G;if(Q.length!==2)L(J,"TAG directive accepts exactly two arguments");if(Y=Q[0],G=Q[1],!B0.test(Y))L(J,"ill-formed tag handle (first argument) of the TAG directive");if(B$.call(J.tagMap,Y))L(J,'there is a previously declared suffix for "'+Y+'" tag handle');if(!U0.test(G))L(J,"ill-formed tag prefix (second argument) of the TAG directive");try{G=decodeURIComponent(G)}catch(W){L(J,"tag prefix is malformed: "+G)}J.tagMap[Y]=G}};function q$($,J,X,Q){var Y,G,W,H;if(J<X){if(H=$.input.slice(J,X),Q){for(Y=0,G=H.length;Y<G;Y+=1)if(W=H.charCodeAt(Y),!(W===9||32<=W&&W<=1114111))L($,"expected valid JSON character")}else if(BJ.test(H))L($,"the stream contains non-printable characters");$.result+=H}}function r6($,J,X,Q){var Y,G,W,H;if(!h.isObject(X))L($,"cannot merge mappings; the provided source object is unacceptable");Y=Object.keys(X);for(W=0,H=Y.length;W<H;W+=1)if(G=Y[W],!B$.call(J,G))J[G]=X[G],Q[G]=!0}function C$($,J,X,Q,Y,G,W,H,z){var B,U;if(Array.isArray(Y)){Y=Array.prototype.slice.call(Y);for(B=0,U=Y.length;B<U;B+=1){if(Array.isArray(Y[B]))L($,"nested arrays are not supported inside keys");if(typeof Y==="object"&&l6(Y[B])==="[object Object]")Y[B]="[object Object]"}}if(typeof Y==="object"&&l6(Y)==="[object Object]")Y="[object Object]";if(Y=String(Y),J===null)J={};if(Q==="tag:yaml.org,2002:merge")if(Array.isArray(G))for(B=0,U=G.length;B<U;B+=1)r6($,J,G[B],X);else r6($,J,G,X);else{if(!$.json&&!B$.call(X,Y)&&B$.call(J,Y))$.line=W||$.line,$.lineStart=H||$.lineStart,$.position=z||$.position,L($,"duplicated mapping key");if(Y==="__proto__")Object.defineProperty(J,Y,{configurable:!0,enumerable:!0,writable:!0,value:G});else J[Y]=G;delete X[Y]}return J}function e1($){var J=$.input.charCodeAt($.position);if(J===10)$.position++;else if(J===13){if($.position++,$.input.charCodeAt($.position)===10)$.position++}else L($,"a line break is expected");$.line+=1,$.lineStart=$.position,$.firstTabInLine=-1}function f($,J,X){var Q=0,Y=$.input.charCodeAt($.position);while(Y!==0){while(D$(Y)){if(Y===9&&$.firstTabInLine===-1)$.firstTabInLine=$.position;Y=$.input.charCodeAt(++$.position)}if(J&&Y===35)do Y=$.input.charCodeAt(++$.position);while(Y!==10&&Y!==13&&Y!==0);if(t(Y)){e1($),Y=$.input.charCodeAt($.position),Q++,$.lineIndent=0;while(Y===32)$.lineIndent++,Y=$.input.charCodeAt(++$.position)}else break}if(X!==-1&&Q!==0&&$.lineIndent<X)_1($,"deficient indentation");return Q}function j1($){var J=$.position,X;if(X=$.input.charCodeAt(J),(X===45||X===46)&&X===$.input.charCodeAt(J+1)&&X===$.input.charCodeAt(J+2)){if(J+=3,X=$.input.charCodeAt(J),X===0||c(X))return!0}return!1}function $6($,J){if(J===1)$.result+=" ";else if(J>1)$.result+=h.repeat(`
`,J-1)}function OJ($,J,X){var Q,Y,G,W,H,z,B,U,M=$.kind,F=$.result,O;if(O=$.input.charCodeAt($.position),c(O)||P$(O)||O===35||O===38||O===42||O===33||O===124||O===62||O===39||O===34||O===37||O===64||O===96)return!1;if(O===63||O===45){if(Y=$.input.charCodeAt($.position+1),c(Y)||X&&P$(Y))return!1}$.kind="scalar",$.result="",G=W=$.position,H=!1;while(O!==0){if(O===58){if(Y=$.input.charCodeAt($.position+1),c(Y)||X&&P$(Y))break}else if(O===35){if(Q=$.input.charCodeAt($.position-1),c(Q))break}else if($.position===$.lineStart&&j1($)||X&&P$(O))break;else if(t(O))if(z=$.line,B=$.lineStart,U=$.lineIndent,f($,!1,-1),$.lineIndent>=J){H=!0,O=$.input.charCodeAt($.position);continue}else{$.position=W,$.line=z,$.lineStart=B,$.lineIndent=U;break}if(H)q$($,G,W,!1),$6($,$.line-z),G=W=$.position,H=!1;if(!D$(O))W=$.position+1;O=$.input.charCodeAt(++$.position)}if(q$($,G,W,!1),$.result)return!0;return $.kind=M,$.result=F,!1}function DJ($,J){var X,Q,Y;if(X=$.input.charCodeAt($.position),X!==39)return!1;$.kind="scalar",$.result="",$.position++,Q=Y=$.position;while((X=$.input.charCodeAt($.position))!==0)if(X===39)if(q$($,Q,$.position,!0),X=$.input.charCodeAt(++$.position),X===39)Q=$.position,$.position++,Y=$.position;else return!0;else if(t(X))q$($,Q,Y,!0),$6($,f($,!1,J)),Q=Y=$.position;else if($.position===$.lineStart&&j1($))L($,"unexpected end of the document within a single quoted scalar");else $.position++,Y=$.position;L($,"unexpected end of the stream within a single quoted scalar")}function AJ($,J){var X,Q,Y,G,W,H;if(H=$.input.charCodeAt($.position),H!==34)return!1;$.kind="scalar",$.result="",$.position++,X=Q=$.position;while((H=$.input.charCodeAt($.position))!==0)if(H===34)return q$($,X,$.position,!0),$.position++,!0;else if(H===92){if(q$($,X,$.position,!0),H=$.input.charCodeAt(++$.position),t(H))f($,!1,J);else if(H<256&&M0[H])$.result+=V0[H],$.position++;else if((W=FJ(H))>0){Y=W,G=0;for(;Y>0;Y--)if(H=$.input.charCodeAt(++$.position),(W=VJ(H))>=0)G=(G<<4)+W;else L($,"expected hexadecimal character");$.result+=wJ(G),$.position++}else L($,"unknown escape sequence");X=Q=$.position}else if(t(H))q$($,X,Q,!0),$6($,f($,!1,J)),X=Q=$.position;else if($.position===$.lineStart&&j1($))L($,"unexpected end of the document within a double quoted scalar");else $.position++,Q=$.position;L($,"unexpected end of the stream within a double quoted scalar")}function LJ($,J){var X=!0,Q,Y,G,W=$.tag,H,z=$.anchor,B,U,M,F,O,A=Object.create(null),S,P,x,Z;if(Z=$.input.charCodeAt($.position),Z===91)U=93,O=!1,H=[];else if(Z===123)U=125,O=!0,H={};else return!1;if($.anchor!==null)$.anchorMap[$.anchor]=H;Z=$.input.charCodeAt(++$.position);while(Z!==0){if(f($,!0,J),Z=$.input.charCodeAt($.position),Z===U)return $.position++,$.tag=W,$.anchor=z,$.kind=O?"mapping":"sequence",$.result=H,!0;else if(!X)L($,"missed comma between flow collection entries");else if(Z===44)L($,"expected the node content, but found ','");if(P=S=x=null,M=F=!1,Z===63){if(B=$.input.charCodeAt($.position+1),c(B))M=F=!0,$.position++,f($,!0,J)}if(Q=$.line,Y=$.lineStart,G=$.position,Z$($,J,A1,!1,!0),P=$.tag,S=$.result,f($,!0,J),Z=$.input.charCodeAt($.position),(F||$.line===Q)&&Z===58)M=!0,Z=$.input.charCodeAt(++$.position),f($,!0,J),Z$($,J,A1,!1,!0),x=$.result;if(O)C$($,H,A,P,S,x,Q,Y,G);else if(M)H.push(C$($,null,A,P,S,x,Q,Y,G));else H.push(S);if(f($,!0,J),Z=$.input.charCodeAt($.position),Z===44)X=!0,Z=$.input.charCodeAt(++$.position);else X=!1}L($,"unexpected end of the stream within a flow collection")}function _J($,J){var X,Q,Y=n1,G=!1,W=!1,H=J,z=0,B=!1,U,M;if(M=$.input.charCodeAt($.position),M===124)Q=!1;else if(M===62)Q=!0;else return!1;$.kind="scalar",$.result="";while(M!==0)if(M=$.input.charCodeAt(++$.position),M===43||M===45)if(n1===Y)Y=M===43?c6:qJ;else L($,"repeat of a chomping mode identifier");else if((U=KJ(M))>=0)if(U===0)L($,"bad explicit indentation width of a block scalar; it cannot be less than one");else if(!W)H=J+U-1,W=!0;else L($,"repeat of an indentation width identifier");else break;if(D$(M)){do M=$.input.charCodeAt(++$.position);while(D$(M));if(M===35)do M=$.input.charCodeAt(++$.position);while(!t(M)&&M!==0)}while(M!==0){e1($),$.lineIndent=0,M=$.input.charCodeAt($.position);while((!W||$.lineIndent<H)&&M===32)$.lineIndent++,M=$.input.charCodeAt(++$.position);if(!W&&$.lineIndent>H)H=$.lineIndent;if(t(M)){z++;continue}if($.lineIndent<H){if(Y===c6)$.result+=h.repeat(`
`,G?1+z:z);else if(Y===n1){if(G)$.result+=`
`}break}if(Q)if(D$(M))B=!0,$.result+=h.repeat(`
`,G?1+z:z);else if(B)B=!1,$.result+=h.repeat(`
`,z+1);else if(z===0){if(G)$.result+=" "}else $.result+=h.repeat(`
`,z);else $.result+=h.repeat(`
`,G?1+z:z);G=!0,W=!0,z=0,X=$.position;while(!t(M)&&M!==0)M=$.input.charCodeAt(++$.position);q$($,X,$.position,!1)}return!0}function o6($,J){var X,Q=$.tag,Y=$.anchor,G=[],W,H=!1,z;if($.firstTabInLine!==-1)return!1;if($.anchor!==null)$.anchorMap[$.anchor]=G;z=$.input.charCodeAt($.position);while(z!==0){if($.firstTabInLine!==-1)$.position=$.firstTabInLine,L($,"tab characters must not be used in indentation");if(z!==45)break;if(W=$.input.charCodeAt($.position+1),!c(W))break;if(H=!0,$.position++,f($,!0,-1)){if($.lineIndent<=J){G.push(null),z=$.input.charCodeAt($.position);continue}}if(X=$.line,Z$($,J,q0,!1,!0),G.push($.result),f($,!0,-1),z=$.input.charCodeAt($.position),($.line===X||$.lineIndent>J)&&z!==0)L($,"bad indentation of a sequence entry");else if($.lineIndent<J)break}if(H)return $.tag=Q,$.anchor=Y,$.kind="sequence",$.result=G,!0;return!1}function NJ($,J,X){var Q,Y,G,W,H,z,B=$.tag,U=$.anchor,M={},F=Object.create(null),O=null,A=null,S=null,P=!1,x=!1,Z;if($.firstTabInLine!==-1)return!1;if($.anchor!==null)$.anchorMap[$.anchor]=M;Z=$.input.charCodeAt($.position);while(Z!==0){if(!P&&$.firstTabInLine!==-1)$.position=$.firstTabInLine,L($,"tab characters must not be used in indentation");if(Q=$.input.charCodeAt($.position+1),G=$.line,(Z===63||Z===58)&&c(Q)){if(Z===63){if(P)C$($,M,F,O,A,null,W,H,z),O=A=S=null;x=!0,P=!0,Y=!0}else if(P)P=!1,Y=!0;else L($,"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line");$.position+=1,Z=Q}else{if(W=$.line,H=$.lineStart,z=$.position,!Z$($,X,z0,!1,!0))break;if($.line===G){Z=$.input.charCodeAt($.position);while(D$(Z))Z=$.input.charCodeAt(++$.position);if(Z===58){if(Z=$.input.charCodeAt(++$.position),!c(Z))L($,"a whitespace character is expected after the key-value separator within a block mapping");if(P)C$($,M,F,O,A,null,W,H,z),O=A=S=null;x=!0,P=!1,Y=!1,O=$.tag,A=$.result}else if(x)L($,"can not read an implicit mapping pair; a colon is missed");else return $.tag=B,$.anchor=U,!0}else if(x)L($,"can not read a block mapping entry; a multiline key may not be an implicit key");else return $.tag=B,$.anchor=U,!0}if($.line===G||$.lineIndent>J){if(P)W=$.line,H=$.lineStart,z=$.position;if(Z$($,J,L1,!0,Y))if(P)A=$.result;else S=$.result;if(!P)C$($,M,F,O,A,S,W,H,z),O=A=S=null;f($,!0,-1),Z=$.input.charCodeAt($.position)}if(($.line===G||$.lineIndent>J)&&Z!==0)L($,"bad indentation of a mapping entry");else if($.lineIndent<J)break}if(P)C$($,M,F,O,A,null,W,H,z);if(x)$.tag=B,$.anchor=U,$.kind="mapping",$.result=M;return x}function SJ($){var J,X=!1,Q=!1,Y,G,W;if(W=$.input.charCodeAt($.position),W!==33)return!1;if($.tag!==null)L($,"duplication of a tag property");if(W=$.input.charCodeAt(++$.position),W===60)X=!0,W=$.input.charCodeAt(++$.position);else if(W===33)Q=!0,Y="!!",W=$.input.charCodeAt(++$.position);else Y="!";if(J=$.position,X){do W=$.input.charCodeAt(++$.position);while(W!==0&&W!==62);if($.position<$.length)G=$.input.slice(J,$.position),W=$.input.charCodeAt(++$.position);else L($,"unexpected end of the stream within a verbatim tag")}else{while(W!==0&&!c(W)){if(W===33)if(!Q){if(Y=$.input.slice(J-1,$.position+1),!B0.test(Y))L($,"named tag handle cannot contain such characters");Q=!0,J=$.position+1}else L($,"tag suffix cannot contain exclamation marks");W=$.input.charCodeAt(++$.position)}if(G=$.input.slice(J,$.position),MJ.test(G))L($,"tag suffix cannot contain flow indicator characters")}if(G&&!U0.test(G))L($,"tag name cannot contain such characters: "+G);try{G=decodeURIComponent(G)}catch(H){L($,"tag name is malformed: "+G)}if(X)$.tag=G;else if(B$.call($.tagMap,Y))$.tag=$.tagMap[Y]+G;else if(Y==="!")$.tag="!"+G;else if(Y==="!!")$.tag="tag:yaml.org,2002:"+G;else L($,'undeclared tag handle "'+Y+'"');return!0}function jJ($){var J,X;if(X=$.input.charCodeAt($.position),X!==38)return!1;if($.anchor!==null)L($,"duplication of an anchor property");X=$.input.charCodeAt(++$.position),J=$.position;while(X!==0&&!c(X)&&!P$(X))X=$.input.charCodeAt(++$.position);if($.position===J)L($,"name of an anchor node must contain at least one character");return $.anchor=$.input.slice(J,$.position),!0}function EJ($){var J,X,Q;if(Q=$.input.charCodeAt($.position),Q!==42)return!1;Q=$.input.charCodeAt(++$.position),J=$.position;while(Q!==0&&!c(Q)&&!P$(Q))Q=$.input.charCodeAt(++$.position);if($.position===J)L($,"name of an alias node must contain at least one character");if(X=$.input.slice(J,$.position),!B$.call($.anchorMap,X))L($,'unidentified alias "'+X+'"');return $.result=$.anchorMap[X],f($,!0,-1),!0}function Z$($,J,X,Q,Y){var G,W,H,z=1,B=!1,U=!1,M,F,O,A,S,P;if($.listener!==null)$.listener("open",$);if($.tag=null,$.anchor=null,$.kind=null,$.result=null,G=W=H=L1===X||q0===X,Q){if(f($,!0,-1)){if(B=!0,$.lineIndent>J)z=1;else if($.lineIndent===J)z=0;else if($.lineIndent<J)z=-1}}if(z===1)while(SJ($)||jJ($))if(f($,!0,-1)){if(B=!0,H=G,$.lineIndent>J)z=1;else if($.lineIndent===J)z=0;else if($.lineIndent<J)z=-1}else H=!1;if(H)H=B||Y;if(z===1||L1===X){if(A1===X||z0===X)S=J;else S=J+1;if(P=$.position-$.lineStart,z===1)if(H&&(o6($,P)||NJ($,P,S))||LJ($,S))U=!0;else{if(W&&_J($,S)||DJ($,S)||AJ($,S))U=!0;else if(EJ($)){if(U=!0,$.tag!==null||$.anchor!==null)L($,"alias node should not have any properties")}else if(OJ($,S,A1===X)){if(U=!0,$.tag===null)$.tag="?"}if($.anchor!==null)$.anchorMap[$.anchor]=$.result}else if(z===0)U=H&&o6($,P)}if($.tag===null){if($.anchor!==null)$.anchorMap[$.anchor]=$.result}else if($.tag==="?"){if($.result!==null&&$.kind!=="scalar")L($,'unacceptable node kind for !<?> tag; it should be "scalar", not "'+$.kind+'"');for(M=0,F=$.implicitTypes.length;M<F;M+=1)if(A=$.implicitTypes[M],A.resolve($.result)){if($.result=A.construct($.result),$.tag=A.tag,$.anchor!==null)$.anchorMap[$.anchor]=$.result;break}}else if($.tag!=="!"){if(B$.call($.typeMap[$.kind||"fallback"],$.tag))A=$.typeMap[$.kind||"fallback"][$.tag];else{A=null,O=$.typeMap.multi[$.kind||"fallback"];for(M=0,F=O.length;M<F;M+=1)if($.tag.slice(0,O[M].tag.length)===O[M].tag){A=O[M];break}}if(!A)L($,"unknown tag !<"+$.tag+">");if($.result!==null&&A.kind!==$.kind)L($,"unacceptable node kind for !<"+$.tag+'> tag; it should be "'+A.kind+'", not "'+$.kind+'"');if(!A.resolve($.result,$.tag))L($,"cannot resolve a node with !<"+$.tag+"> explicit tag");else if($.result=A.construct($.result,$.tag),$.anchor!==null)$.anchorMap[$.anchor]=$.result}if($.listener!==null)$.listener("close",$);return $.tag!==null||$.anchor!==null||U}function IJ($){var J=$.position,X,Q,Y,G=!1,W;$.version=null,$.checkLineBreaks=$.legacy,$.tagMap=Object.create(null),$.anchorMap=Object.create(null);while((W=$.input.charCodeAt($.position))!==0){if(f($,!0,-1),W=$.input.charCodeAt($.position),$.lineIndent>0||W!==37)break;G=!0,W=$.input.charCodeAt(++$.position),X=$.position;while(W!==0&&!c(W))W=$.input.charCodeAt(++$.position);if(Q=$.input.slice(X,$.position),Y=[],Q.length<1)L($,"directive name must not be less than one character in length");while(W!==0){while(D$(W))W=$.input.charCodeAt(++$.position);if(W===35){do W=$.input.charCodeAt(++$.position);while(W!==0&&!t(W));break}if(t(W))break;X=$.position;while(W!==0&&!c(W))W=$.input.charCodeAt(++$.position);Y.push($.input.slice(X,$.position))}if(W!==0)e1($);if(B$.call(n6,Q))n6[Q]($,Q,Y);else _1($,'unknown document directive "'+Q+'"')}if(f($,!0,-1),$.lineIndent===0&&$.input.charCodeAt($.position)===45&&$.input.charCodeAt($.position+1)===45&&$.input.charCodeAt($.position+2)===45)$.position+=3,f($,!0,-1);else if(G)L($,"directives end mark is expected");if(Z$($,$.lineIndent-1,L1,!1,!0),f($,!0,-1),$.checkLineBreaks&&UJ.test($.input.slice(J,$.position)))_1($,"non-ASCII line breaks are interpreted as content");if($.documents.push($.result),$.position===$.lineStart&&j1($)){if($.input.charCodeAt($.position)===46)$.position+=3,f($,!0,-1);return}if($.position<$.length-1)L($,"end of the stream or a document separator is expected");else return}function K0($,J){if($=String($),J=J||{},$.length!==0){if($.charCodeAt($.length-1)!==10&&$.charCodeAt($.length-1)!==13)$+=`
`;if($.charCodeAt(0)===65279)$=$.slice(1)}var X=new RJ($,J),Q=$.indexOf("\x00");if(Q!==-1)X.position=Q,L(X,"null byte is not allowed in input");X.input+="\x00";while(X.input.charCodeAt(X.position)===32)X.lineIndent+=1,X.position+=1;while(X.position<X.length-1)IJ(X);return X.documents}function PJ($,J,X){if(J!==null&&typeof J==="object"&&typeof X==="undefined")X=J,J=null;var Q=K0($,X);if(typeof J!=="function")return Q;for(var Y=0,G=Q.length;Y<G;Y+=1)J(Q[Y])}function CJ($,J){var X=K0($,J);if(X.length===0)return;else if(X.length===1)return X[0];throw new d("expected a single document in the stream, but found more")}var ZJ=PJ,kJ=CJ,w0={loadAll:ZJ,load:kJ},R0=Object.prototype.toString,O0=Object.prototype.hasOwnProperty,J6=65279,TJ=9,e$=10,vJ=13,bJ=32,fJ=33,xJ=34,o1=35,hJ=37,mJ=38,yJ=39,gJ=42,D0=44,uJ=45,N1=58,dJ=61,cJ=62,lJ=63,pJ=64,A0=91,L0=93,nJ=96,_0=123,rJ=124,N0=125,g={};g[0]="\\0";g[7]="\\a";g[8]="\\b";g[9]="\\t";g[10]="\\n";g[11]="\\v";g[12]="\\f";g[13]="\\r";g[27]="\\e";g[34]="\\\"";g[92]="\\\\";g[133]="\\N";g[160]="\\_";g[8232]="\\L";g[8233]="\\P";var oJ=["y","Y","yes","Yes","YES","on","On","ON","n","N","no","No","NO","off","Off","OFF"],iJ=/^[-+]?[0-9_]+(?::[0-9_]+)+(?:\.[0-9_]*)?$/;function aJ($,J){var X,Q,Y,G,W,H,z;if(J===null)return{};X={},Q=Object.keys(J);for(Y=0,G=Q.length;Y<G;Y+=1){if(W=Q[Y],H=String(J[W]),W.slice(0,2)==="!!")W="tag:yaml.org,2002:"+W.slice(2);if(z=$.compiledTypeMap.fallback[W],z&&O0.call(z.styleAliases,H))H=z.styleAliases[H];X[W]=H}return X}function sJ($){var J,X,Q;if(J=$.toString(16).toUpperCase(),$<=255)X="x",Q=2;else if($<=65535)X="u",Q=4;else if($<=4294967295)X="U",Q=8;else throw new d("code point within a string may not be greater than 0xFFFFFFFF");return"\\"+X+h.repeat("0",Q-J.length)+J}var tJ=1,$1=2;function eJ($){this.schema=$.schema||H0,this.indent=Math.max(1,$.indent||2),this.noArrayIndent=$.noArrayIndent||!1,this.skipInvalid=$.skipInvalid||!1,this.flowLevel=h.isNothing($.flowLevel)?-1:$.flowLevel,this.styleMap=aJ(this.schema,$.styles||null),this.sortKeys=$.sortKeys||!1,this.lineWidth=$.lineWidth||80,this.noRefs=$.noRefs||!1,this.noCompatMode=$.noCompatMode||!1,this.condenseFlow=$.condenseFlow||!1,this.quotingType=$.quotingType==='"'?$1:tJ,this.forceQuotes=$.forceQuotes||!1,this.replacer=typeof $.replacer==="function"?$.replacer:null,this.implicitTypes=this.schema.compiledImplicit,this.explicitTypes=this.schema.compiledExplicit,this.tag=null,this.result="",this.duplicates=[],this.usedDuplicates=null}function i6($,J){var X=h.repeat(" ",J),Q=0,Y=-1,G="",W,H=$.length;while(Q<H){if(Y=$.indexOf(`
`,Q),Y===-1)W=$.slice(Q),Q=H;else W=$.slice(Q,Y+1),Q=Y+1;if(W.length&&W!==`
`)G+=X;G+=W}return G}function i1($,J){return`
`+h.repeat(" ",$.indent*J)}function $4($,J){var X,Q,Y;for(X=0,Q=$.implicitTypes.length;X<Q;X+=1)if(Y=$.implicitTypes[X],Y.resolve(J))return!0;return!1}function S1($){return $===bJ||$===TJ}function J1($){return 32<=$&&$<=126||161<=$&&$<=55295&&$!==8232&&$!==8233||57344<=$&&$<=65533&&$!==J6||65536<=$&&$<=1114111}function a6($){return J1($)&&$!==J6&&$!==vJ&&$!==e$}function s6($,J,X){var Q=a6($),Y=Q&&!S1($);return(X?Q:Q&&$!==D0&&$!==A0&&$!==L0&&$!==_0&&$!==N0)&&$!==o1&&!(J===N1&&!Y)||a6(J)&&!S1(J)&&$===o1||J===N1&&Y}function J4($){return J1($)&&$!==J6&&!S1($)&&$!==uJ&&$!==lJ&&$!==N1&&$!==D0&&$!==A0&&$!==L0&&$!==_0&&$!==N0&&$!==o1&&$!==mJ&&$!==gJ&&$!==fJ&&$!==rJ&&$!==dJ&&$!==cJ&&$!==yJ&&$!==xJ&&$!==hJ&&$!==pJ&&$!==nJ}function X4($){return!S1($)&&$!==N1}function s$($,J){var X=$.charCodeAt(J),Q;if(X>=55296&&X<=56319&&J+1<$.length){if(Q=$.charCodeAt(J+1),Q>=56320&&Q<=57343)return(X-55296)*1024+Q-56320+65536}return X}function S0($){var J=/^\n* /;return J.test($)}var j0=1,a1=2,E0=3,I0=4,I$=5;function Q4($,J,X,Q,Y,G,W,H){var z,B=0,U=null,M=!1,F=!1,O=Q!==-1,A=-1,S=J4(s$($,0))&&X4(s$($,$.length-1));if(J||W)for(z=0;z<$.length;B>=65536?z+=2:z++){if(B=s$($,z),!J1(B))return I$;S=S&&s6(B,U,H),U=B}else{for(z=0;z<$.length;B>=65536?z+=2:z++){if(B=s$($,z),B===e$){if(M=!0,O)F=F||z-A-1>Q&&$[A+1]!==" ",A=z}else if(!J1(B))return I$;S=S&&s6(B,U,H),U=B}F=F||O&&(z-A-1>Q&&$[A+1]!==" ")}if(!M&&!F){if(S&&!W&&!Y($))return j0;return G===$1?I$:a1}if(X>9&&S0($))return I$;if(!W)return F?I0:E0;return G===$1?I$:a1}function Y4($,J,X,Q,Y){$.dump=function(){if(J.length===0)return $.quotingType===$1?'""':"''";if(!$.noCompatMode){if(oJ.indexOf(J)!==-1||iJ.test(J))return $.quotingType===$1?'"'+J+'"':"'"+J+"'"}var G=$.indent*Math.max(1,X),W=$.lineWidth===-1?-1:Math.max(Math.min($.lineWidth,40),$.lineWidth-G),H=Q||$.flowLevel>-1&&X>=$.flowLevel;function z(B){return $4($,B)}switch(Q4(J,H,$.indent,W,z,$.quotingType,$.forceQuotes&&!Q,Y)){case j0:return J;case a1:return"'"+J.replace(/'/g,"''")+"'";case E0:return"|"+t6(J,$.indent)+e6(i6(J,G));case I0:return">"+t6(J,$.indent)+e6(i6(W4(J,W),G));case I$:return'"'+G4(J)+'"';default:throw new d("impossible error: invalid scalar style")}}()}function t6($,J){var X=S0($)?String(J):"",Q=$[$.length-1]===`
`,Y=Q&&($[$.length-2]===`
`||$===`
`),G=Y?"+":Q?"":"-";return X+G+`
`}function e6($){return $[$.length-1]===`
`?$.slice(0,-1):$}function W4($,J){var X=/(\n+)([^\n]*)/g,Q=function(){var B=$.indexOf(`
`);return B=B!==-1?B:$.length,X.lastIndex=B,$0($.slice(0,B),J)}(),Y=$[0]===`
`||$[0]===" ",G,W;while(W=X.exec($)){var H=W[1],z=W[2];G=z[0]===" ",Q+=H+(!Y&&!G&&z!==""?`
`:"")+$0(z,J),Y=G}return Q}function $0($,J){if($===""||$[0]===" ")return $;var X=/ [^ ]/g,Q,Y=0,G,W=0,H=0,z="";while(Q=X.exec($)){if(H=Q.index,H-Y>J)G=W>Y?W:H,z+=`
`+$.slice(Y,G),Y=G+1;W=H}if(z+=`
`,$.length-Y>J&&W>Y)z+=$.slice(Y,W)+`
`+$.slice(W+1);else z+=$.slice(Y);return z.slice(1)}function G4($){var J="",X=0,Q;for(var Y=0;Y<$.length;X>=65536?Y+=2:Y++)if(X=s$($,Y),Q=g[X],!Q&&J1(X)){if(J+=$[Y],X>=65536)J+=$[Y+1]}else J+=Q||sJ(X);return J}function H4($,J,X){var Q="",Y=$.tag,G,W,H;for(G=0,W=X.length;G<W;G+=1){if(H=X[G],$.replacer)H=$.replacer.call(X,String(G),H);if(Q$($,J,H,!1,!1)||typeof H==="undefined"&&Q$($,J,null,!1,!1)){if(Q!=="")Q+=","+(!$.condenseFlow?" ":"");Q+=$.dump}}$.tag=Y,$.dump="["+Q+"]"}function J0($,J,X,Q){var Y="",G=$.tag,W,H,z;for(W=0,H=X.length;W<H;W+=1){if(z=X[W],$.replacer)z=$.replacer.call(X,String(W),z);if(Q$($,J+1,z,!0,!0,!1,!0)||typeof z==="undefined"&&Q$($,J+1,null,!0,!0,!1,!0)){if(!Q||Y!=="")Y+=i1($,J);if($.dump&&e$===$.dump.charCodeAt(0))Y+="-";else Y+="- ";Y+=$.dump}}$.tag=G,$.dump=Y||"[]"}function z4($,J,X){var Q="",Y=$.tag,G=Object.keys(X),W,H,z,B,U;for(W=0,H=G.length;W<H;W+=1){if(U="",Q!=="")U+=", ";if($.condenseFlow)U+='"';if(z=G[W],B=X[z],$.replacer)B=$.replacer.call(X,z,B);if(!Q$($,J,z,!1,!1))continue;if($.dump.length>1024)U+="? ";if(U+=$.dump+($.condenseFlow?'"':"")+":"+($.condenseFlow?"":" "),!Q$($,J,B,!1,!1))continue;U+=$.dump,Q+=U}$.tag=Y,$.dump="{"+Q+"}"}function q4($,J,X,Q){var Y="",G=$.tag,W=Object.keys(X),H,z,B,U,M,F;if($.sortKeys===!0)W.sort();else if(typeof $.sortKeys==="function")W.sort($.sortKeys);else if($.sortKeys)throw new d("sortKeys must be a boolean or a function");for(H=0,z=W.length;H<z;H+=1){if(F="",!Q||Y!=="")F+=i1($,J);if(B=W[H],U=X[B],$.replacer)U=$.replacer.call(X,B,U);if(!Q$($,J+1,B,!0,!0,!0))continue;if(M=$.tag!==null&&$.tag!=="?"||$.dump&&$.dump.length>1024,M)if($.dump&&e$===$.dump.charCodeAt(0))F+="?";else F+="? ";if(F+=$.dump,M)F+=i1($,J);if(!Q$($,J+1,U,!0,M))continue;if($.dump&&e$===$.dump.charCodeAt(0))F+=":";else F+=": ";F+=$.dump,Y+=F}$.tag=G,$.dump=Y||"{}"}function X0($,J,X){var Q,Y,G,W,H,z;Y=X?$.explicitTypes:$.implicitTypes;for(G=0,W=Y.length;G<W;G+=1)if(H=Y[G],(H.instanceOf||H.predicate)&&(!H.instanceOf||typeof J==="object"&&J instanceof H.instanceOf)&&(!H.predicate||H.predicate(J))){if(X)if(H.multi&&H.representName)$.tag=H.representName(J);else $.tag=H.tag;else $.tag="?";if(H.represent){if(z=$.styleMap[H.tag]||H.defaultStyle,R0.call(H.represent)==="[object Function]")Q=H.represent(J,z);else if(O0.call(H.represent,z))Q=H.represent[z](J,z);else throw new d("!<"+H.tag+'> tag resolver accepts not "'+z+'" style');$.dump=Q}return!0}return!1}function Q$($,J,X,Q,Y,G,W){if($.tag=null,$.dump=X,!X0($,X,!1))X0($,X,!0);var H=R0.call($.dump),z=Q,B;if(Q)Q=$.flowLevel<0||$.flowLevel>J;var U=H==="[object Object]"||H==="[object Array]",M,F;if(U)M=$.duplicates.indexOf(X),F=M!==-1;if($.tag!==null&&$.tag!=="?"||F||$.indent!==2&&J>0)Y=!1;if(F&&$.usedDuplicates[M])$.dump="*ref_"+M;else{if(U&&F&&!$.usedDuplicates[M])$.usedDuplicates[M]=!0;if(H==="[object Object]"){if(Q&&Object.keys($.dump).length!==0){if(q4($,J,$.dump,Y),F)$.dump="&ref_"+M+$.dump}else if(z4($,J,$.dump),F)$.dump="&ref_"+M+" "+$.dump}else if(H==="[object Array]"){if(Q&&$.dump.length!==0){if($.noArrayIndent&&!W&&J>0)J0($,J-1,$.dump,Y);else J0($,J,$.dump,Y);if(F)$.dump="&ref_"+M+$.dump}else if(H4($,J,$.dump),F)$.dump="&ref_"+M+" "+$.dump}else if(H==="[object String]"){if($.tag!=="?")Y4($,$.dump,J,G,z)}else if(H==="[object Undefined]")return!1;else{if($.skipInvalid)return!1;throw new d("unacceptable kind of an object to dump "+H)}if($.tag!==null&&$.tag!=="?"){if(B=encodeURI($.tag[0]==="!"?$.tag.slice(1):$.tag).replace(/!/g,"%21"),$.tag[0]==="!")B="!"+B;else if(B.slice(0,18)==="tag:yaml.org,2002:")B="!!"+B.slice(18);else B="!<"+B+">";$.dump=B+" "+$.dump}}return!0}function B4($,J){var X=[],Q=[],Y,G;s1($,X,Q);for(Y=0,G=Q.length;Y<G;Y+=1)J.duplicates.push(X[Q[Y]]);J.usedDuplicates=new Array(G)}function s1($,J,X){var Q,Y,G;if($!==null&&typeof $==="object")if(Y=J.indexOf($),Y!==-1){if(X.indexOf(Y)===-1)X.push(Y)}else if(J.push($),Array.isArray($))for(Y=0,G=$.length;Y<G;Y+=1)s1($[Y],J,X);else{Q=Object.keys($);for(Y=0,G=Q.length;Y<G;Y+=1)s1($[Q[Y]],J,X)}}function U4($,J){J=J||{};var X=new eJ(J);if(!X.noRefs)B4($,X);var Q=$;if(X.replacer)Q=X.replacer.call({"":Q},"",Q);if(Q$(X,0,Q,!0,!0))return X.dump+`
`;return""}var M4=U4,V4={dump:M4};function X6($,J){return function(){throw new Error("Function yaml."+$+" is removed in js-yaml 4. Use yaml."+J+" instead, which is now safe by default.")}}var{load:P0,loadAll:i7}=w0,a7=V4.dump;var s7=X6("safeLoad","load"),t7=X6("safeLoadAll","loadAll"),e7=X6("safeDump","dump");var E={};c1(E,{void:()=>t4,util:()=>C,unknown:()=>a4,union:()=>X5,undefined:()=>r4,tuple:()=>W5,transformer:()=>K5,symbol:()=>n4,string:()=>m0,strictObject:()=>J5,setErrorMap:()=>R4,set:()=>z5,record:()=>G5,quotelessJson:()=>K4,promise:()=>F5,preprocess:()=>O5,pipeline:()=>D5,ostring:()=>A5,optional:()=>w5,onumber:()=>L5,oboolean:()=>_5,objectUtil:()=>Q6,object:()=>$5,number:()=>y0,nullable:()=>R5,null:()=>o4,never:()=>s4,nativeEnum:()=>V5,nan:()=>c4,map:()=>H5,makeIssue:()=>X1,literal:()=>U5,lazy:()=>B5,late:()=>u4,isValid:()=>U$,isDirty:()=>I1,isAsync:()=>T$,isAborted:()=>E1,intersection:()=>Y5,instanceof:()=>d4,getParsedType:()=>e,getErrorMap:()=>k$,function:()=>q5,enum:()=>M5,effect:()=>K5,discriminatedUnion:()=>Q5,defaultErrorMap:()=>Y$,datetimeRegex:()=>f0,date:()=>p4,custom:()=>h0,coerce:()=>N5,boolean:()=>g0,bigint:()=>l4,array:()=>e4,any:()=>i4,addIssueToContext:()=>R,ZodVoid:()=>G1,ZodUnknown:()=>M$,ZodUnion:()=>m$,ZodUndefined:()=>x$,ZodType:()=>I,ZodTuple:()=>J$,ZodTransformer:()=>s,ZodSymbol:()=>W1,ZodString:()=>r,ZodSet:()=>N$,ZodSchema:()=>I,ZodRecord:()=>H1,ZodReadonly:()=>p$,ZodPromise:()=>S$,ZodPipeline:()=>B1,ZodParsedType:()=>w,ZodOptional:()=>i,ZodObject:()=>b,ZodNumber:()=>V$,ZodNullable:()=>G$,ZodNull:()=>h$,ZodNever:()=>$$,ZodNativeEnum:()=>d$,ZodNaN:()=>q1,ZodMap:()=>z1,ZodLiteral:()=>u$,ZodLazy:()=>g$,ZodIssueCode:()=>K,ZodIntersection:()=>y$,ZodFunction:()=>b$,ZodFirstPartyTypeKind:()=>N,ZodError:()=>l,ZodEnum:()=>K$,ZodEffects:()=>s,ZodDiscriminatedUnion:()=>C1,ZodDefault:()=>c$,ZodDate:()=>L$,ZodCatch:()=>l$,ZodBranded:()=>Z1,ZodBoolean:()=>f$,ZodBigInt:()=>F$,ZodArray:()=>o,ZodAny:()=>_$,Schema:()=>I,ParseStatus:()=>m,OK:()=>u,NEVER:()=>S5,INVALID:()=>_,EMPTY_PATH:()=>O4,DIRTY:()=>A$,BRAND:()=>g4});var C;(function($){$.assertEqual=(Y)=>{};function J(Y){}$.assertIs=J;function X(Y){throw new Error}$.assertNever=X,$.arrayToEnum=(Y)=>{let G={};for(let W of Y)G[W]=W;return G},$.getValidEnumValues=(Y)=>{let G=$.objectKeys(Y).filter((H)=>typeof Y[Y[H]]!=="number"),W={};for(let H of G)W[H]=Y[H];return $.objectValues(W)},$.objectValues=(Y)=>{return $.objectKeys(Y).map(function(G){return Y[G]})},$.objectKeys=typeof Object.keys==="function"?(Y)=>Object.keys(Y):(Y)=>{let G=[];for(let W in Y)if(Object.prototype.hasOwnProperty.call(Y,W))G.push(W);return G},$.find=(Y,G)=>{for(let W of Y)if(G(W))return W;return},$.isInteger=typeof Number.isInteger==="function"?(Y)=>Number.isInteger(Y):(Y)=>typeof Y==="number"&&Number.isFinite(Y)&&Math.floor(Y)===Y;function Q(Y,G=" | "){return Y.map((W)=>typeof W==="string"?`'${W}'`:W).join(G)}$.joinValues=Q,$.jsonStringifyReplacer=(Y,G)=>{if(typeof G==="bigint")return G.toString();return G}})(C||(C={}));var Q6;(function($){$.mergeShapes=(J,X)=>{return{...J,...X}}})(Q6||(Q6={}));var w=C.arrayToEnum(["string","nan","number","integer","float","boolean","date","bigint","symbol","function","undefined","null","array","object","unknown","promise","void","never","map","set"]),e=($)=>{switch(typeof $){case"undefined":return w.undefined;case"string":return w.string;case"number":return Number.isNaN($)?w.nan:w.number;case"boolean":return w.boolean;case"function":return w.function;case"bigint":return w.bigint;case"symbol":return w.symbol;case"object":if(Array.isArray($))return w.array;if($===null)return w.null;if($.then&&typeof $.then==="function"&&$.catch&&typeof $.catch==="function")return w.promise;if(typeof Map!=="undefined"&&$ instanceof Map)return w.map;if(typeof Set!=="undefined"&&$ instanceof Set)return w.set;if(typeof Date!=="undefined"&&$ instanceof Date)return w.date;return w.object;default:return w.unknown}};var K=C.arrayToEnum(["invalid_type","invalid_literal","custom","invalid_union","invalid_union_discriminator","invalid_enum_value","unrecognized_keys","invalid_arguments","invalid_return_type","invalid_date","invalid_string","too_small","too_big","invalid_intersection_types","not_multiple_of","not_finite"]),K4=($)=>{return JSON.stringify($,null,2).replace(/"([^"]+)":/g,"$1:")};class l extends Error{get errors(){return this.issues}constructor($){super();this.issues=[],this.addIssue=(X)=>{this.issues=[...this.issues,X]},this.addIssues=(X=[])=>{this.issues=[...this.issues,...X]};let J=new.target.prototype;if(Object.setPrototypeOf)Object.setPrototypeOf(this,J);else this.__proto__=J;this.name="ZodError",this.issues=$}format($){let J=$||function(Y){return Y.message},X={_errors:[]},Q=(Y)=>{for(let G of Y.issues)if(G.code==="invalid_union")G.unionErrors.map(Q);else if(G.code==="invalid_return_type")Q(G.returnTypeError);else if(G.code==="invalid_arguments")Q(G.argumentsError);else if(G.path.length===0)X._errors.push(J(G));else{let W=X,H=0;while(H<G.path.length){let z=G.path[H];if(H!==G.path.length-1)W[z]=W[z]||{_errors:[]};else W[z]=W[z]||{_errors:[]},W[z]._errors.push(J(G));W=W[z],H++}}};return Q(this),X}static assert($){if(!($ instanceof l))throw new Error(`Not a ZodError: ${$}`)}toString(){return this.message}get message(){return JSON.stringify(this.issues,C.jsonStringifyReplacer,2)}get isEmpty(){return this.issues.length===0}flatten($=(J)=>J.message){let J={},X=[];for(let Q of this.issues)if(Q.path.length>0)J[Q.path[0]]=J[Q.path[0]]||[],J[Q.path[0]].push($(Q));else X.push($(Q));return{formErrors:X,fieldErrors:J}}get formErrors(){return this.flatten()}}l.create=($)=>{return new l($)};var w4=($,J)=>{let X;switch($.code){case K.invalid_type:if($.received===w.undefined)X="Required";else X=`Expected ${$.expected}, received ${$.received}`;break;case K.invalid_literal:X=`Invalid literal value, expected ${JSON.stringify($.expected,C.jsonStringifyReplacer)}`;break;case K.unrecognized_keys:X=`Unrecognized key(s) in object: ${C.joinValues($.keys,", ")}`;break;case K.invalid_union:X="Invalid input";break;case K.invalid_union_discriminator:X=`Invalid discriminator value. Expected ${C.joinValues($.options)}`;break;case K.invalid_enum_value:X=`Invalid enum value. Expected ${C.joinValues($.options)}, received '${$.received}'`;break;case K.invalid_arguments:X="Invalid function arguments";break;case K.invalid_return_type:X="Invalid function return type";break;case K.invalid_date:X="Invalid date";break;case K.invalid_string:if(typeof $.validation==="object")if("includes"in $.validation){if(X=`Invalid input: must include "${$.validation.includes}"`,typeof $.validation.position==="number")X=`${X} at one or more positions greater than or equal to ${$.validation.position}`}else if("startsWith"in $.validation)X=`Invalid input: must start with "${$.validation.startsWith}"`;else if("endsWith"in $.validation)X=`Invalid input: must end with "${$.validation.endsWith}"`;else C.assertNever($.validation);else if($.validation!=="regex")X=`Invalid ${$.validation}`;else X="Invalid";break;case K.too_small:if($.type==="array")X=`Array must contain ${$.exact?"exactly":$.inclusive?"at least":"more than"} ${$.minimum} element(s)`;else if($.type==="string")X=`String must contain ${$.exact?"exactly":$.inclusive?"at least":"over"} ${$.minimum} character(s)`;else if($.type==="number")X=`Number must be ${$.exact?"exactly equal to ":$.inclusive?"greater than or equal to ":"greater than "}${$.minimum}`;else if($.type==="date")X=`Date must be ${$.exact?"exactly equal to ":$.inclusive?"greater than or equal to ":"greater than "}${new Date(Number($.minimum))}`;else X="Invalid input";break;case K.too_big:if($.type==="array")X=`Array must contain ${$.exact?"exactly":$.inclusive?"at most":"less than"} ${$.maximum} element(s)`;else if($.type==="string")X=`String must contain ${$.exact?"exactly":$.inclusive?"at most":"under"} ${$.maximum} character(s)`;else if($.type==="number")X=`Number must be ${$.exact?"exactly":$.inclusive?"less than or equal to":"less than"} ${$.maximum}`;else if($.type==="bigint")X=`BigInt must be ${$.exact?"exactly":$.inclusive?"less than or equal to":"less than"} ${$.maximum}`;else if($.type==="date")X=`Date must be ${$.exact?"exactly":$.inclusive?"smaller than or equal to":"smaller than"} ${new Date(Number($.maximum))}`;else X="Invalid input";break;case K.custom:X="Invalid input";break;case K.invalid_intersection_types:X="Intersection results could not be merged";break;case K.not_multiple_of:X=`Number must be a multiple of ${$.multipleOf}`;break;case K.not_finite:X="Number must be finite";break;default:X=J.defaultError,C.assertNever($)}return{message:X}},Y$=w4;var C0=Y$;function R4($){C0=$}function k$(){return C0}var X1=($)=>{let{data:J,path:X,errorMaps:Q,issueData:Y}=$,G=[...X,...Y.path||[]],W={...Y,path:G};if(Y.message!==void 0)return{...Y,path:G,message:Y.message};let H="",z=Q.filter((B)=>!!B).slice().reverse();for(let B of z)H=B(W,{data:J,defaultError:H}).message;return{...Y,path:G,message:H}},O4=[];function R($,J){let X=k$(),Q=X1({issueData:J,data:$.data,path:$.path,errorMaps:[$.common.contextualErrorMap,$.schemaErrorMap,X,X===Y$?void 0:Y$].filter((Y)=>!!Y)});$.common.issues.push(Q)}class m{constructor(){this.value="valid"}dirty(){if(this.value==="valid")this.value="dirty"}abort(){if(this.value!=="aborted")this.value="aborted"}static mergeArray($,J){let X=[];for(let Q of J){if(Q.status==="aborted")return _;if(Q.status==="dirty")$.dirty();X.push(Q.value)}return{status:$.value,value:X}}static async mergeObjectAsync($,J){let X=[];for(let Q of J){let Y=await Q.key,G=await Q.value;X.push({key:Y,value:G})}return m.mergeObjectSync($,X)}static mergeObjectSync($,J){let X={};for(let Q of J){let{key:Y,value:G}=Q;if(Y.status==="aborted")return _;if(G.status==="aborted")return _;if(Y.status==="dirty")$.dirty();if(G.status==="dirty")$.dirty();if(Y.value!=="__proto__"&&(typeof G.value!=="undefined"||Q.alwaysSet))X[Y.value]=G.value}return{status:$.value,value:X}}}var _=Object.freeze({status:"aborted"}),A$=($)=>({status:"dirty",value:$}),u=($)=>({status:"valid",value:$}),E1=($)=>$.status==="aborted",I1=($)=>$.status==="dirty",U$=($)=>$.status==="valid",T$=($)=>typeof Promise!=="undefined"&&$ instanceof Promise;var D;(function($){$.errToObj=(J)=>typeof J==="string"?{message:J}:J||{},$.toString=(J)=>typeof J==="string"?J:J?.message})(D||(D={}));var P1=function($,J,X,Q){if(X==="a"&&!Q)throw new TypeError("Private accessor was defined without a getter");if(typeof J==="function"?$!==J||!Q:!J.has($))throw new TypeError("Cannot read private member from an object whose class did not declare it");return X==="m"?Q:X==="a"?Q.call($):Q?Q.value:J.get($)},T0=function($,J,X,Q,Y){if(Q==="m")throw new TypeError("Private method is not writable");if(Q==="a"&&!Y)throw new TypeError("Private accessor was defined without a setter");if(typeof J==="function"?$!==J||!Y:!J.has($))throw new TypeError("Cannot write private member to an object whose class did not declare it");return Q==="a"?Y.call($,X):Y?Y.value=X:J.set($,X),X},Q1,Y1;class a{constructor($,J,X,Q){this._cachedPath=[],this.parent=$,this.data=J,this._path=X,this._key=Q}get path(){if(!this._cachedPath.length)if(Array.isArray(this._key))this._cachedPath.push(...this._path,...this._key);else this._cachedPath.push(...this._path,this._key);return this._cachedPath}}var Z0=($,J)=>{if(U$(J))return{success:!0,data:J.value};else{if(!$.common.issues.length)throw new Error("Validation failed but no issues detected.");return{success:!1,get error(){if(this._error)return this._error;let X=new l($.common.issues);return this._error=X,this._error}}}};function j($){if(!$)return{};let{errorMap:J,invalid_type_error:X,required_error:Q,description:Y}=$;if(J&&(X||Q))throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);if(J)return{errorMap:J,description:Y};return{errorMap:(W,H)=>{let{message:z}=$;if(W.code==="invalid_enum_value")return{message:z??H.defaultError};if(typeof H.data==="undefined")return{message:z??Q??H.defaultError};if(W.code!=="invalid_type")return{message:H.defaultError};return{message:z??X??H.defaultError}},description:Y}}class I{get description(){return this._def.description}_getType($){return e($.data)}_getOrReturnCtx($,J){return J||{common:$.parent.common,data:$.data,parsedType:e($.data),schemaErrorMap:this._def.errorMap,path:$.path,parent:$.parent}}_processInputParams($){return{status:new m,ctx:{common:$.parent.common,data:$.data,parsedType:e($.data),schemaErrorMap:this._def.errorMap,path:$.path,parent:$.parent}}}_parseSync($){let J=this._parse($);if(T$(J))throw new Error("Synchronous parse encountered promise.");return J}_parseAsync($){let J=this._parse($);return Promise.resolve(J)}parse($,J){let X=this.safeParse($,J);if(X.success)return X.data;throw X.error}safeParse($,J){let X={common:{issues:[],async:J?.async??!1,contextualErrorMap:J?.errorMap},path:J?.path||[],schemaErrorMap:this._def.errorMap,parent:null,data:$,parsedType:e($)},Q=this._parseSync({data:$,path:X.path,parent:X});return Z0(X,Q)}"~validate"($){let J={common:{issues:[],async:!!this["~standard"].async},path:[],schemaErrorMap:this._def.errorMap,parent:null,data:$,parsedType:e($)};if(!this["~standard"].async)try{let X=this._parseSync({data:$,path:[],parent:J});return U$(X)?{value:X.value}:{issues:J.common.issues}}catch(X){if(X?.message?.toLowerCase()?.includes("encountered"))this["~standard"].async=!0;J.common={issues:[],async:!0}}return this._parseAsync({data:$,path:[],parent:J}).then((X)=>U$(X)?{value:X.value}:{issues:J.common.issues})}async parseAsync($,J){let X=await this.safeParseAsync($,J);if(X.success)return X.data;throw X.error}async safeParseAsync($,J){let X={common:{issues:[],contextualErrorMap:J?.errorMap,async:!0},path:J?.path||[],schemaErrorMap:this._def.errorMap,parent:null,data:$,parsedType:e($)},Q=this._parse({data:$,path:X.path,parent:X}),Y=await(T$(Q)?Q:Promise.resolve(Q));return Z0(X,Y)}refine($,J){let X=(Q)=>{if(typeof J==="string"||typeof J==="undefined")return{message:J};else if(typeof J==="function")return J(Q);else return J};return this._refinement((Q,Y)=>{let G=$(Q),W=()=>Y.addIssue({code:K.custom,...X(Q)});if(typeof Promise!=="undefined"&&G instanceof Promise)return G.then((H)=>{if(!H)return W(),!1;else return!0});if(!G)return W(),!1;else return!0})}refinement($,J){return this._refinement((X,Q)=>{if(!$(X))return Q.addIssue(typeof J==="function"?J(X,Q):J),!1;else return!0})}_refinement($){return new s({schema:this,typeName:N.ZodEffects,effect:{type:"refinement",refinement:$}})}superRefine($){return this._refinement($)}constructor($){this.spa=this.safeParseAsync,this._def=$,this.parse=this.parse.bind(this),this.safeParse=this.safeParse.bind(this),this.parseAsync=this.parseAsync.bind(this),this.safeParseAsync=this.safeParseAsync.bind(this),this.spa=this.spa.bind(this),this.refine=this.refine.bind(this),this.refinement=this.refinement.bind(this),this.superRefine=this.superRefine.bind(this),this.optional=this.optional.bind(this),this.nullable=this.nullable.bind(this),this.nullish=this.nullish.bind(this),this.array=this.array.bind(this),this.promise=this.promise.bind(this),this.or=this.or.bind(this),this.and=this.and.bind(this),this.transform=this.transform.bind(this),this.brand=this.brand.bind(this),this.default=this.default.bind(this),this.catch=this.catch.bind(this),this.describe=this.describe.bind(this),this.pipe=this.pipe.bind(this),this.readonly=this.readonly.bind(this),this.isNullable=this.isNullable.bind(this),this.isOptional=this.isOptional.bind(this),this["~standard"]={version:1,vendor:"zod",validate:(J)=>this["~validate"](J)}}optional(){return i.create(this,this._def)}nullable(){return G$.create(this,this._def)}nullish(){return this.nullable().optional()}array(){return o.create(this)}promise(){return S$.create(this,this._def)}or($){return m$.create([this,$],this._def)}and($){return y$.create(this,$,this._def)}transform($){return new s({...j(this._def),schema:this,typeName:N.ZodEffects,effect:{type:"transform",transform:$}})}default($){let J=typeof $==="function"?$:()=>$;return new c$({...j(this._def),innerType:this,defaultValue:J,typeName:N.ZodDefault})}brand(){return new Z1({typeName:N.ZodBranded,type:this,...j(this._def)})}catch($){let J=typeof $==="function"?$:()=>$;return new l$({...j(this._def),innerType:this,catchValue:J,typeName:N.ZodCatch})}describe($){return new this.constructor({...this._def,description:$})}pipe($){return B1.create(this,$)}readonly(){return p$.create(this)}isOptional(){return this.safeParse(void 0).success}isNullable(){return this.safeParse(null).success}}var D4=/^c[^\s-]{8,}$/i,A4=/^[0-9a-z]+$/,L4=/^[0-9A-HJKMNP-TV-Z]{26}$/i,_4=/^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i,N4=/^[a-z0-9_-]{21}$/i,S4=/^[A-Za-z0-9-_]+\.[A-Za-z0-9-_]+\.[A-Za-z0-9-_]*$/,j4=/^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/,E4=/^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i,I4="^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$",Y6,P4=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,C4=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\/(3[0-2]|[12]?[0-9])$/,Z4=/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/,k4=/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,T4=/^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,v4=/^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/,v0="((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))",b4=new RegExp(`^${v0}$`);function b0($){let J="[0-5]\\d";if($.precision)J=`${J}\\.\\d{${$.precision}}`;else if($.precision==null)J=`${J}(\\.\\d+)?`;let X=$.precision?"+":"?";return`([01]\\d|2[0-3]):[0-5]\\d(:${J})${X}`}function f4($){return new RegExp(`^${b0($)}$`)}function f0($){let J=`${v0}T${b0($)}`,X=[];if(X.push($.local?"Z?":"Z"),$.offset)X.push("([+-]\\d{2}:?\\d{2})");return J=`${J}(${X.join("|")})`,new RegExp(`^${J}$`)}function x4($,J){if((J==="v4"||!J)&&P4.test($))return!0;if((J==="v6"||!J)&&Z4.test($))return!0;return!1}function h4($,J){if(!S4.test($))return!1;try{let[X]=$.split("."),Q=X.replace(/-/g,"+").replace(/_/g,"/").padEnd(X.length+(4-X.length%4)%4,"="),Y=JSON.parse(atob(Q));if(typeof Y!=="object"||Y===null)return!1;if("typ"in Y&&Y?.typ!=="JWT")return!1;if(!Y.alg)return!1;if(J&&Y.alg!==J)return!1;return!0}catch{return!1}}function m4($,J){if((J==="v4"||!J)&&C4.test($))return!0;if((J==="v6"||!J)&&k4.test($))return!0;return!1}class r extends I{_parse($){if(this._def.coerce)$.data=String($.data);if(this._getType($)!==w.string){let Y=this._getOrReturnCtx($);return R(Y,{code:K.invalid_type,expected:w.string,received:Y.parsedType}),_}let X=new m,Q=void 0;for(let Y of this._def.checks)if(Y.kind==="min"){if($.data.length<Y.value)Q=this._getOrReturnCtx($,Q),R(Q,{code:K.too_small,minimum:Y.value,type:"string",inclusive:!0,exact:!1,message:Y.message}),X.dirty()}else if(Y.kind==="max"){if($.data.length>Y.value)Q=this._getOrReturnCtx($,Q),R(Q,{code:K.too_big,maximum:Y.value,type:"string",inclusive:!0,exact:!1,message:Y.message}),X.dirty()}else if(Y.kind==="length"){let G=$.data.length>Y.value,W=$.data.length<Y.value;if(G||W){if(Q=this._getOrReturnCtx($,Q),G)R(Q,{code:K.too_big,maximum:Y.value,type:"string",inclusive:!0,exact:!0,message:Y.message});else if(W)R(Q,{code:K.too_small,minimum:Y.value,type:"string",inclusive:!0,exact:!0,message:Y.message});X.dirty()}}else if(Y.kind==="email"){if(!E4.test($.data))Q=this._getOrReturnCtx($,Q),R(Q,{validation:"email",code:K.invalid_string,message:Y.message}),X.dirty()}else if(Y.kind==="emoji"){if(!Y6)Y6=new RegExp(I4,"u");if(!Y6.test($.data))Q=this._getOrReturnCtx($,Q),R(Q,{validation:"emoji",code:K.invalid_string,message:Y.message}),X.dirty()}else if(Y.kind==="uuid"){if(!_4.test($.data))Q=this._getOrReturnCtx($,Q),R(Q,{validation:"uuid",code:K.invalid_string,message:Y.message}),X.dirty()}else if(Y.kind==="nanoid"){if(!N4.test($.data))Q=this._getOrReturnCtx($,Q),R(Q,{validation:"nanoid",code:K.invalid_string,message:Y.message}),X.dirty()}else if(Y.kind==="cuid"){if(!D4.test($.data))Q=this._getOrReturnCtx($,Q),R(Q,{validation:"cuid",code:K.invalid_string,message:Y.message}),X.dirty()}else if(Y.kind==="cuid2"){if(!A4.test($.data))Q=this._getOrReturnCtx($,Q),R(Q,{validation:"cuid2",code:K.invalid_string,message:Y.message}),X.dirty()}else if(Y.kind==="ulid"){if(!L4.test($.data))Q=this._getOrReturnCtx($,Q),R(Q,{validation:"ulid",code:K.invalid_string,message:Y.message}),X.dirty()}else if(Y.kind==="url")try{new URL($.data)}catch{Q=this._getOrReturnCtx($,Q),R(Q,{validation:"url",code:K.invalid_string,message:Y.message}),X.dirty()}else if(Y.kind==="regex"){if(Y.regex.lastIndex=0,!Y.regex.test($.data))Q=this._getOrReturnCtx($,Q),R(Q,{validation:"regex",code:K.invalid_string,message:Y.message}),X.dirty()}else if(Y.kind==="trim")$.data=$.data.trim();else if(Y.kind==="includes"){if(!$.data.includes(Y.value,Y.position))Q=this._getOrReturnCtx($,Q),R(Q,{code:K.invalid_string,validation:{includes:Y.value,position:Y.position},message:Y.message}),X.dirty()}else if(Y.kind==="toLowerCase")$.data=$.data.toLowerCase();else if(Y.kind==="toUpperCase")$.data=$.data.toUpperCase();else if(Y.kind==="startsWith"){if(!$.data.startsWith(Y.value))Q=this._getOrReturnCtx($,Q),R(Q,{code:K.invalid_string,validation:{startsWith:Y.value},message:Y.message}),X.dirty()}else if(Y.kind==="endsWith"){if(!$.data.endsWith(Y.value))Q=this._getOrReturnCtx($,Q),R(Q,{code:K.invalid_string,validation:{endsWith:Y.value},message:Y.message}),X.dirty()}else if(Y.kind==="datetime"){if(!f0(Y).test($.data))Q=this._getOrReturnCtx($,Q),R(Q,{code:K.invalid_string,validation:"datetime",message:Y.message}),X.dirty()}else if(Y.kind==="date"){if(!b4.test($.data))Q=this._getOrReturnCtx($,Q),R(Q,{code:K.invalid_string,validation:"date",message:Y.message}),X.dirty()}else if(Y.kind==="time"){if(!f4(Y).test($.data))Q=this._getOrReturnCtx($,Q),R(Q,{code:K.invalid_string,validation:"time",message:Y.message}),X.dirty()}else if(Y.kind==="duration"){if(!j4.test($.data))Q=this._getOrReturnCtx($,Q),R(Q,{validation:"duration",code:K.invalid_string,message:Y.message}),X.dirty()}else if(Y.kind==="ip"){if(!x4($.data,Y.version))Q=this._getOrReturnCtx($,Q),R(Q,{validation:"ip",code:K.invalid_string,message:Y.message}),X.dirty()}else if(Y.kind==="jwt"){if(!h4($.data,Y.alg))Q=this._getOrReturnCtx($,Q),R(Q,{validation:"jwt",code:K.invalid_string,message:Y.message}),X.dirty()}else if(Y.kind==="cidr"){if(!m4($.data,Y.version))Q=this._getOrReturnCtx($,Q),R(Q,{validation:"cidr",code:K.invalid_string,message:Y.message}),X.dirty()}else if(Y.kind==="base64"){if(!T4.test($.data))Q=this._getOrReturnCtx($,Q),R(Q,{validation:"base64",code:K.invalid_string,message:Y.message}),X.dirty()}else if(Y.kind==="base64url"){if(!v4.test($.data))Q=this._getOrReturnCtx($,Q),R(Q,{validation:"base64url",code:K.invalid_string,message:Y.message}),X.dirty()}else C.assertNever(Y);return{status:X.value,value:$.data}}_regex($,J,X){return this.refinement((Q)=>$.test(Q),{validation:J,code:K.invalid_string,...D.errToObj(X)})}_addCheck($){return new r({...this._def,checks:[...this._def.checks,$]})}email($){return this._addCheck({kind:"email",...D.errToObj($)})}url($){return this._addCheck({kind:"url",...D.errToObj($)})}emoji($){return this._addCheck({kind:"emoji",...D.errToObj($)})}uuid($){return this._addCheck({kind:"uuid",...D.errToObj($)})}nanoid($){return this._addCheck({kind:"nanoid",...D.errToObj($)})}cuid($){return this._addCheck({kind:"cuid",...D.errToObj($)})}cuid2($){return this._addCheck({kind:"cuid2",...D.errToObj($)})}ulid($){return this._addCheck({kind:"ulid",...D.errToObj($)})}base64($){return this._addCheck({kind:"base64",...D.errToObj($)})}base64url($){return this._addCheck({kind:"base64url",...D.errToObj($)})}jwt($){return this._addCheck({kind:"jwt",...D.errToObj($)})}ip($){return this._addCheck({kind:"ip",...D.errToObj($)})}cidr($){return this._addCheck({kind:"cidr",...D.errToObj($)})}datetime($){if(typeof $==="string")return this._addCheck({kind:"datetime",precision:null,offset:!1,local:!1,message:$});return this._addCheck({kind:"datetime",precision:typeof $?.precision==="undefined"?null:$?.precision,offset:$?.offset??!1,local:$?.local??!1,...D.errToObj($?.message)})}date($){return this._addCheck({kind:"date",message:$})}time($){if(typeof $==="string")return this._addCheck({kind:"time",precision:null,message:$});return this._addCheck({kind:"time",precision:typeof $?.precision==="undefined"?null:$?.precision,...D.errToObj($?.message)})}duration($){return this._addCheck({kind:"duration",...D.errToObj($)})}regex($,J){return this._addCheck({kind:"regex",regex:$,...D.errToObj(J)})}includes($,J){return this._addCheck({kind:"includes",value:$,position:J?.position,...D.errToObj(J?.message)})}startsWith($,J){return this._addCheck({kind:"startsWith",value:$,...D.errToObj(J)})}endsWith($,J){return this._addCheck({kind:"endsWith",value:$,...D.errToObj(J)})}min($,J){return this._addCheck({kind:"min",value:$,...D.errToObj(J)})}max($,J){return this._addCheck({kind:"max",value:$,...D.errToObj(J)})}length($,J){return this._addCheck({kind:"length",value:$,...D.errToObj(J)})}nonempty($){return this.min(1,D.errToObj($))}trim(){return new r({...this._def,checks:[...this._def.checks,{kind:"trim"}]})}toLowerCase(){return new r({...this._def,checks:[...this._def.checks,{kind:"toLowerCase"}]})}toUpperCase(){return new r({...this._def,checks:[...this._def.checks,{kind:"toUpperCase"}]})}get isDatetime(){return!!this._def.checks.find(($)=>$.kind==="datetime")}get isDate(){return!!this._def.checks.find(($)=>$.kind==="date")}get isTime(){return!!this._def.checks.find(($)=>$.kind==="time")}get isDuration(){return!!this._def.checks.find(($)=>$.kind==="duration")}get isEmail(){return!!this._def.checks.find(($)=>$.kind==="email")}get isURL(){return!!this._def.checks.find(($)=>$.kind==="url")}get isEmoji(){return!!this._def.checks.find(($)=>$.kind==="emoji")}get isUUID(){return!!this._def.checks.find(($)=>$.kind==="uuid")}get isNANOID(){return!!this._def.checks.find(($)=>$.kind==="nanoid")}get isCUID(){return!!this._def.checks.find(($)=>$.kind==="cuid")}get isCUID2(){return!!this._def.checks.find(($)=>$.kind==="cuid2")}get isULID(){return!!this._def.checks.find(($)=>$.kind==="ulid")}get isIP(){return!!this._def.checks.find(($)=>$.kind==="ip")}get isCIDR(){return!!this._def.checks.find(($)=>$.kind==="cidr")}get isBase64(){return!!this._def.checks.find(($)=>$.kind==="base64")}get isBase64url(){return!!this._def.checks.find(($)=>$.kind==="base64url")}get minLength(){let $=null;for(let J of this._def.checks)if(J.kind==="min"){if($===null||J.value>$)$=J.value}return $}get maxLength(){let $=null;for(let J of this._def.checks)if(J.kind==="max"){if($===null||J.value<$)$=J.value}return $}}r.create=($)=>{return new r({checks:[],typeName:N.ZodString,coerce:$?.coerce??!1,...j($)})};function y4($,J){let X=($.toString().split(".")[1]||"").length,Q=(J.toString().split(".")[1]||"").length,Y=X>Q?X:Q,G=Number.parseInt($.toFixed(Y).replace(".","")),W=Number.parseInt(J.toFixed(Y).replace(".",""));return G%W/10**Y}class V$ extends I{constructor(){super(...arguments);this.min=this.gte,this.max=this.lte,this.step=this.multipleOf}_parse($){if(this._def.coerce)$.data=Number($.data);if(this._getType($)!==w.number){let Y=this._getOrReturnCtx($);return R(Y,{code:K.invalid_type,expected:w.number,received:Y.parsedType}),_}let X=void 0,Q=new m;for(let Y of this._def.checks)if(Y.kind==="int"){if(!C.isInteger($.data))X=this._getOrReturnCtx($,X),R(X,{code:K.invalid_type,expected:"integer",received:"float",message:Y.message}),Q.dirty()}else if(Y.kind==="min"){if(Y.inclusive?$.data<Y.value:$.data<=Y.value)X=this._getOrReturnCtx($,X),R(X,{code:K.too_small,minimum:Y.value,type:"number",inclusive:Y.inclusive,exact:!1,message:Y.message}),Q.dirty()}else if(Y.kind==="max"){if(Y.inclusive?$.data>Y.value:$.data>=Y.value)X=this._getOrReturnCtx($,X),R(X,{code:K.too_big,maximum:Y.value,type:"number",inclusive:Y.inclusive,exact:!1,message:Y.message}),Q.dirty()}else if(Y.kind==="multipleOf"){if(y4($.data,Y.value)!==0)X=this._getOrReturnCtx($,X),R(X,{code:K.not_multiple_of,multipleOf:Y.value,message:Y.message}),Q.dirty()}else if(Y.kind==="finite"){if(!Number.isFinite($.data))X=this._getOrReturnCtx($,X),R(X,{code:K.not_finite,message:Y.message}),Q.dirty()}else C.assertNever(Y);return{status:Q.value,value:$.data}}gte($,J){return this.setLimit("min",$,!0,D.toString(J))}gt($,J){return this.setLimit("min",$,!1,D.toString(J))}lte($,J){return this.setLimit("max",$,!0,D.toString(J))}lt($,J){return this.setLimit("max",$,!1,D.toString(J))}setLimit($,J,X,Q){return new V$({...this._def,checks:[...this._def.checks,{kind:$,value:J,inclusive:X,message:D.toString(Q)}]})}_addCheck($){return new V$({...this._def,checks:[...this._def.checks,$]})}int($){return this._addCheck({kind:"int",message:D.toString($)})}positive($){return this._addCheck({kind:"min",value:0,inclusive:!1,message:D.toString($)})}negative($){return this._addCheck({kind:"max",value:0,inclusive:!1,message:D.toString($)})}nonpositive($){return this._addCheck({kind:"max",value:0,inclusive:!0,message:D.toString($)})}nonnegative($){return this._addCheck({kind:"min",value:0,inclusive:!0,message:D.toString($)})}multipleOf($,J){return this._addCheck({kind:"multipleOf",value:$,message:D.toString(J)})}finite($){return this._addCheck({kind:"finite",message:D.toString($)})}safe($){return this._addCheck({kind:"min",inclusive:!0,value:Number.MIN_SAFE_INTEGER,message:D.toString($)})._addCheck({kind:"max",inclusive:!0,value:Number.MAX_SAFE_INTEGER,message:D.toString($)})}get minValue(){let $=null;for(let J of this._def.checks)if(J.kind==="min"){if($===null||J.value>$)$=J.value}return $}get maxValue(){let $=null;for(let J of this._def.checks)if(J.kind==="max"){if($===null||J.value<$)$=J.value}return $}get isInt(){return!!this._def.checks.find(($)=>$.kind==="int"||$.kind==="multipleOf"&&C.isInteger($.value))}get isFinite(){let $=null,J=null;for(let X of this._def.checks)if(X.kind==="finite"||X.kind==="int"||X.kind==="multipleOf")return!0;else if(X.kind==="min"){if(J===null||X.value>J)J=X.value}else if(X.kind==="max"){if($===null||X.value<$)$=X.value}return Number.isFinite(J)&&Number.isFinite($)}}V$.create=($)=>{return new V$({checks:[],typeName:N.ZodNumber,coerce:$?.coerce||!1,...j($)})};class F$ extends I{constructor(){super(...arguments);this.min=this.gte,this.max=this.lte}_parse($){if(this._def.coerce)try{$.data=BigInt($.data)}catch{return this._getInvalidInput($)}if(this._getType($)!==w.bigint)return this._getInvalidInput($);let X=void 0,Q=new m;for(let Y of this._def.checks)if(Y.kind==="min"){if(Y.inclusive?$.data<Y.value:$.data<=Y.value)X=this._getOrReturnCtx($,X),R(X,{code:K.too_small,type:"bigint",minimum:Y.value,inclusive:Y.inclusive,message:Y.message}),Q.dirty()}else if(Y.kind==="max"){if(Y.inclusive?$.data>Y.value:$.data>=Y.value)X=this._getOrReturnCtx($,X),R(X,{code:K.too_big,type:"bigint",maximum:Y.value,inclusive:Y.inclusive,message:Y.message}),Q.dirty()}else if(Y.kind==="multipleOf"){if($.data%Y.value!==BigInt(0))X=this._getOrReturnCtx($,X),R(X,{code:K.not_multiple_of,multipleOf:Y.value,message:Y.message}),Q.dirty()}else C.assertNever(Y);return{status:Q.value,value:$.data}}_getInvalidInput($){let J=this._getOrReturnCtx($);return R(J,{code:K.invalid_type,expected:w.bigint,received:J.parsedType}),_}gte($,J){return this.setLimit("min",$,!0,D.toString(J))}gt($,J){return this.setLimit("min",$,!1,D.toString(J))}lte($,J){return this.setLimit("max",$,!0,D.toString(J))}lt($,J){return this.setLimit("max",$,!1,D.toString(J))}setLimit($,J,X,Q){return new F$({...this._def,checks:[...this._def.checks,{kind:$,value:J,inclusive:X,message:D.toString(Q)}]})}_addCheck($){return new F$({...this._def,checks:[...this._def.checks,$]})}positive($){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!1,message:D.toString($)})}negative($){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!1,message:D.toString($)})}nonpositive($){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!0,message:D.toString($)})}nonnegative($){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!0,message:D.toString($)})}multipleOf($,J){return this._addCheck({kind:"multipleOf",value:$,message:D.toString(J)})}get minValue(){let $=null;for(let J of this._def.checks)if(J.kind==="min"){if($===null||J.value>$)$=J.value}return $}get maxValue(){let $=null;for(let J of this._def.checks)if(J.kind==="max"){if($===null||J.value<$)$=J.value}return $}}F$.create=($)=>{return new F$({checks:[],typeName:N.ZodBigInt,coerce:$?.coerce??!1,...j($)})};class f$ extends I{_parse($){if(this._def.coerce)$.data=Boolean($.data);if(this._getType($)!==w.boolean){let X=this._getOrReturnCtx($);return R(X,{code:K.invalid_type,expected:w.boolean,received:X.parsedType}),_}return u($.data)}}f$.create=($)=>{return new f$({typeName:N.ZodBoolean,coerce:$?.coerce||!1,...j($)})};class L$ extends I{_parse($){if(this._def.coerce)$.data=new Date($.data);if(this._getType($)!==w.date){let Y=this._getOrReturnCtx($);return R(Y,{code:K.invalid_type,expected:w.date,received:Y.parsedType}),_}if(Number.isNaN($.data.getTime())){let Y=this._getOrReturnCtx($);return R(Y,{code:K.invalid_date}),_}let X=new m,Q=void 0;for(let Y of this._def.checks)if(Y.kind==="min"){if($.data.getTime()<Y.value)Q=this._getOrReturnCtx($,Q),R(Q,{code:K.too_small,message:Y.message,inclusive:!0,exact:!1,minimum:Y.value,type:"date"}),X.dirty()}else if(Y.kind==="max"){if($.data.getTime()>Y.value)Q=this._getOrReturnCtx($,Q),R(Q,{code:K.too_big,message:Y.message,inclusive:!0,exact:!1,maximum:Y.value,type:"date"}),X.dirty()}else C.assertNever(Y);return{status:X.value,value:new Date($.data.getTime())}}_addCheck($){return new L$({...this._def,checks:[...this._def.checks,$]})}min($,J){return this._addCheck({kind:"min",value:$.getTime(),message:D.toString(J)})}max($,J){return this._addCheck({kind:"max",value:$.getTime(),message:D.toString(J)})}get minDate(){let $=null;for(let J of this._def.checks)if(J.kind==="min"){if($===null||J.value>$)$=J.value}return $!=null?new Date($):null}get maxDate(){let $=null;for(let J of this._def.checks)if(J.kind==="max"){if($===null||J.value<$)$=J.value}return $!=null?new Date($):null}}L$.create=($)=>{return new L$({checks:[],coerce:$?.coerce||!1,typeName:N.ZodDate,...j($)})};class W1 extends I{_parse($){if(this._getType($)!==w.symbol){let X=this._getOrReturnCtx($);return R(X,{code:K.invalid_type,expected:w.symbol,received:X.parsedType}),_}return u($.data)}}W1.create=($)=>{return new W1({typeName:N.ZodSymbol,...j($)})};class x$ extends I{_parse($){if(this._getType($)!==w.undefined){let X=this._getOrReturnCtx($);return R(X,{code:K.invalid_type,expected:w.undefined,received:X.parsedType}),_}return u($.data)}}x$.create=($)=>{return new x$({typeName:N.ZodUndefined,...j($)})};class h$ extends I{_parse($){if(this._getType($)!==w.null){let X=this._getOrReturnCtx($);return R(X,{code:K.invalid_type,expected:w.null,received:X.parsedType}),_}return u($.data)}}h$.create=($)=>{return new h$({typeName:N.ZodNull,...j($)})};class _$ extends I{constructor(){super(...arguments);this._any=!0}_parse($){return u($.data)}}_$.create=($)=>{return new _$({typeName:N.ZodAny,...j($)})};class M$ extends I{constructor(){super(...arguments);this._unknown=!0}_parse($){return u($.data)}}M$.create=($)=>{return new M$({typeName:N.ZodUnknown,...j($)})};class $$ extends I{_parse($){let J=this._getOrReturnCtx($);return R(J,{code:K.invalid_type,expected:w.never,received:J.parsedType}),_}}$$.create=($)=>{return new $$({typeName:N.ZodNever,...j($)})};class G1 extends I{_parse($){if(this._getType($)!==w.undefined){let X=this._getOrReturnCtx($);return R(X,{code:K.invalid_type,expected:w.void,received:X.parsedType}),_}return u($.data)}}G1.create=($)=>{return new G1({typeName:N.ZodVoid,...j($)})};class o extends I{_parse($){let{ctx:J,status:X}=this._processInputParams($),Q=this._def;if(J.parsedType!==w.array)return R(J,{code:K.invalid_type,expected:w.array,received:J.parsedType}),_;if(Q.exactLength!==null){let G=J.data.length>Q.exactLength.value,W=J.data.length<Q.exactLength.value;if(G||W)R(J,{code:G?K.too_big:K.too_small,minimum:W?Q.exactLength.value:void 0,maximum:G?Q.exactLength.value:void 0,type:"array",inclusive:!0,exact:!0,message:Q.exactLength.message}),X.dirty()}if(Q.minLength!==null){if(J.data.length<Q.minLength.value)R(J,{code:K.too_small,minimum:Q.minLength.value,type:"array",inclusive:!0,exact:!1,message:Q.minLength.message}),X.dirty()}if(Q.maxLength!==null){if(J.data.length>Q.maxLength.value)R(J,{code:K.too_big,maximum:Q.maxLength.value,type:"array",inclusive:!0,exact:!1,message:Q.maxLength.message}),X.dirty()}if(J.common.async)return Promise.all([...J.data].map((G,W)=>{return Q.type._parseAsync(new a(J,G,J.path,W))})).then((G)=>{return m.mergeArray(X,G)});let Y=[...J.data].map((G,W)=>{return Q.type._parseSync(new a(J,G,J.path,W))});return m.mergeArray(X,Y)}get element(){return this._def.type}min($,J){return new o({...this._def,minLength:{value:$,message:D.toString(J)}})}max($,J){return new o({...this._def,maxLength:{value:$,message:D.toString(J)}})}length($,J){return new o({...this._def,exactLength:{value:$,message:D.toString(J)}})}nonempty($){return this.min(1,$)}}o.create=($,J)=>{return new o({type:$,minLength:null,maxLength:null,exactLength:null,typeName:N.ZodArray,...j(J)})};function v$($){if($ instanceof b){let J={};for(let X in $.shape){let Q=$.shape[X];J[X]=i.create(v$(Q))}return new b({...$._def,shape:()=>J})}else if($ instanceof o)return new o({...$._def,type:v$($.element)});else if($ instanceof i)return i.create(v$($.unwrap()));else if($ instanceof G$)return G$.create(v$($.unwrap()));else if($ instanceof J$)return J$.create($.items.map((J)=>v$(J)));else return $}class b extends I{constructor(){super(...arguments);this._cached=null,this.nonstrict=this.passthrough,this.augment=this.extend}_getCached(){if(this._cached!==null)return this._cached;let $=this._def.shape(),J=C.objectKeys($);return this._cached={shape:$,keys:J},this._cached}_parse($){if(this._getType($)!==w.object){let z=this._getOrReturnCtx($);return R(z,{code:K.invalid_type,expected:w.object,received:z.parsedType}),_}let{status:X,ctx:Q}=this._processInputParams($),{shape:Y,keys:G}=this._getCached(),W=[];if(!(this._def.catchall instanceof $$&&this._def.unknownKeys==="strip")){for(let z in Q.data)if(!G.includes(z))W.push(z)}let H=[];for(let z of G){let B=Y[z],U=Q.data[z];H.push({key:{status:"valid",value:z},value:B._parse(new a(Q,U,Q.path,z)),alwaysSet:z in Q.data})}if(this._def.catchall instanceof $$){let z=this._def.unknownKeys;if(z==="passthrough")for(let B of W)H.push({key:{status:"valid",value:B},value:{status:"valid",value:Q.data[B]}});else if(z==="strict"){if(W.length>0)R(Q,{code:K.unrecognized_keys,keys:W}),X.dirty()}else if(z==="strip");else throw new Error("Internal ZodObject error: invalid unknownKeys value.")}else{let z=this._def.catchall;for(let B of W){let U=Q.data[B];H.push({key:{status:"valid",value:B},value:z._parse(new a(Q,U,Q.path,B)),alwaysSet:B in Q.data})}}if(Q.common.async)return Promise.resolve().then(async()=>{let z=[];for(let B of H){let U=await B.key,M=await B.value;z.push({key:U,value:M,alwaysSet:B.alwaysSet})}return z}).then((z)=>{return m.mergeObjectSync(X,z)});else return m.mergeObjectSync(X,H)}get shape(){return this._def.shape()}strict($){return D.errToObj,new b({...this._def,unknownKeys:"strict",...$!==void 0?{errorMap:(J,X)=>{let Q=this._def.errorMap?.(J,X).message??X.defaultError;if(J.code==="unrecognized_keys")return{message:D.errToObj($).message??Q};return{message:Q}}}:{}})}strip(){return new b({...this._def,unknownKeys:"strip"})}passthrough(){return new b({...this._def,unknownKeys:"passthrough"})}extend($){return new b({...this._def,shape:()=>({...this._def.shape(),...$})})}merge($){return new b({unknownKeys:$._def.unknownKeys,catchall:$._def.catchall,shape:()=>({...this._def.shape(),...$._def.shape()}),typeName:N.ZodObject})}setKey($,J){return this.augment({[$]:J})}catchall($){return new b({...this._def,catchall:$})}pick($){let J={};for(let X of C.objectKeys($))if($[X]&&this.shape[X])J[X]=this.shape[X];return new b({...this._def,shape:()=>J})}omit($){let J={};for(let X of C.objectKeys(this.shape))if(!$[X])J[X]=this.shape[X];return new b({...this._def,shape:()=>J})}deepPartial(){return v$(this)}partial($){let J={};for(let X of C.objectKeys(this.shape)){let Q=this.shape[X];if($&&!$[X])J[X]=Q;else J[X]=Q.optional()}return new b({...this._def,shape:()=>J})}required($){let J={};for(let X of C.objectKeys(this.shape))if($&&!$[X])J[X]=this.shape[X];else{let Y=this.shape[X];while(Y instanceof i)Y=Y._def.innerType;J[X]=Y}return new b({...this._def,shape:()=>J})}keyof(){return x0(C.objectKeys(this.shape))}}b.create=($,J)=>{return new b({shape:()=>$,unknownKeys:"strip",catchall:$$.create(),typeName:N.ZodObject,...j(J)})};b.strictCreate=($,J)=>{return new b({shape:()=>$,unknownKeys:"strict",catchall:$$.create(),typeName:N.ZodObject,...j(J)})};b.lazycreate=($,J)=>{return new b({shape:$,unknownKeys:"strip",catchall:$$.create(),typeName:N.ZodObject,...j(J)})};class m$ extends I{_parse($){let{ctx:J}=this._processInputParams($),X=this._def.options;function Q(Y){for(let W of Y)if(W.result.status==="valid")return W.result;for(let W of Y)if(W.result.status==="dirty")return J.common.issues.push(...W.ctx.common.issues),W.result;let G=Y.map((W)=>new l(W.ctx.common.issues));return R(J,{code:K.invalid_union,unionErrors:G}),_}if(J.common.async)return Promise.all(X.map(async(Y)=>{let G={...J,common:{...J.common,issues:[]},parent:null};return{result:await Y._parseAsync({data:J.data,path:J.path,parent:G}),ctx:G}})).then(Q);else{let Y=void 0,G=[];for(let H of X){let z={...J,common:{...J.common,issues:[]},parent:null},B=H._parseSync({data:J.data,path:J.path,parent:z});if(B.status==="valid")return B;else if(B.status==="dirty"&&!Y)Y={result:B,ctx:z};if(z.common.issues.length)G.push(z.common.issues)}if(Y)return J.common.issues.push(...Y.ctx.common.issues),Y.result;let W=G.map((H)=>new l(H));return R(J,{code:K.invalid_union,unionErrors:W}),_}}get options(){return this._def.options}}m$.create=($,J)=>{return new m$({options:$,typeName:N.ZodUnion,...j(J)})};var W$=($)=>{if($ instanceof g$)return W$($.schema);else if($ instanceof s)return W$($.innerType());else if($ instanceof u$)return[$.value];else if($ instanceof K$)return $.options;else if($ instanceof d$)return C.objectValues($.enum);else if($ instanceof c$)return W$($._def.innerType);else if($ instanceof x$)return[void 0];else if($ instanceof h$)return[null];else if($ instanceof i)return[void 0,...W$($.unwrap())];else if($ instanceof G$)return[null,...W$($.unwrap())];else if($ instanceof Z1)return W$($.unwrap());else if($ instanceof p$)return W$($.unwrap());else if($ instanceof l$)return W$($._def.innerType);else return[]};class C1 extends I{_parse($){let{ctx:J}=this._processInputParams($);if(J.parsedType!==w.object)return R(J,{code:K.invalid_type,expected:w.object,received:J.parsedType}),_;let X=this.discriminator,Q=J.data[X],Y=this.optionsMap.get(Q);if(!Y)return R(J,{code:K.invalid_union_discriminator,options:Array.from(this.optionsMap.keys()),path:[X]}),_;if(J.common.async)return Y._parseAsync({data:J.data,path:J.path,parent:J});else return Y._parseSync({data:J.data,path:J.path,parent:J})}get discriminator(){return this._def.discriminator}get options(){return this._def.options}get optionsMap(){return this._def.optionsMap}static create($,J,X){let Q=new Map;for(let Y of J){let G=W$(Y.shape[$]);if(!G.length)throw new Error(`A discriminator value for key \`${$}\` could not be extracted from all schema options`);for(let W of G){if(Q.has(W))throw new Error(`Discriminator property ${String($)} has duplicate value ${String(W)}`);Q.set(W,Y)}}return new C1({typeName:N.ZodDiscriminatedUnion,discriminator:$,options:J,optionsMap:Q,...j(X)})}}function W6($,J){let X=e($),Q=e(J);if($===J)return{valid:!0,data:$};else if(X===w.object&&Q===w.object){let Y=C.objectKeys(J),G=C.objectKeys($).filter((H)=>Y.indexOf(H)!==-1),W={...$,...J};for(let H of G){let z=W6($[H],J[H]);if(!z.valid)return{valid:!1};W[H]=z.data}return{valid:!0,data:W}}else if(X===w.array&&Q===w.array){if($.length!==J.length)return{valid:!1};let Y=[];for(let G=0;G<$.length;G++){let W=$[G],H=J[G],z=W6(W,H);if(!z.valid)return{valid:!1};Y.push(z.data)}return{valid:!0,data:Y}}else if(X===w.date&&Q===w.date&&+$===+J)return{valid:!0,data:$};else return{valid:!1}}class y$ extends I{_parse($){let{status:J,ctx:X}=this._processInputParams($),Q=(Y,G)=>{if(E1(Y)||E1(G))return _;let W=W6(Y.value,G.value);if(!W.valid)return R(X,{code:K.invalid_intersection_types}),_;if(I1(Y)||I1(G))J.dirty();return{status:J.value,value:W.data}};if(X.common.async)return Promise.all([this._def.left._parseAsync({data:X.data,path:X.path,parent:X}),this._def.right._parseAsync({data:X.data,path:X.path,parent:X})]).then(([Y,G])=>Q(Y,G));else return Q(this._def.left._parseSync({data:X.data,path:X.path,parent:X}),this._def.right._parseSync({data:X.data,path:X.path,parent:X}))}}y$.create=($,J,X)=>{return new y$({left:$,right:J,typeName:N.ZodIntersection,...j(X)})};class J$ extends I{_parse($){let{status:J,ctx:X}=this._processInputParams($);if(X.parsedType!==w.array)return R(X,{code:K.invalid_type,expected:w.array,received:X.parsedType}),_;if(X.data.length<this._def.items.length)return R(X,{code:K.too_small,minimum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),_;if(!this._def.rest&&X.data.length>this._def.items.length)R(X,{code:K.too_big,maximum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),J.dirty();let Y=[...X.data].map((G,W)=>{let H=this._def.items[W]||this._def.rest;if(!H)return null;return H._parse(new a(X,G,X.path,W))}).filter((G)=>!!G);if(X.common.async)return Promise.all(Y).then((G)=>{return m.mergeArray(J,G)});else return m.mergeArray(J,Y)}get items(){return this._def.items}rest($){return new J$({...this._def,rest:$})}}J$.create=($,J)=>{if(!Array.isArray($))throw new Error("You must pass an array of schemas to z.tuple([ ... ])");return new J$({items:$,typeName:N.ZodTuple,rest:null,...j(J)})};class H1 extends I{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse($){let{status:J,ctx:X}=this._processInputParams($);if(X.parsedType!==w.object)return R(X,{code:K.invalid_type,expected:w.object,received:X.parsedType}),_;let Q=[],Y=this._def.keyType,G=this._def.valueType;for(let W in X.data)Q.push({key:Y._parse(new a(X,W,X.path,W)),value:G._parse(new a(X,X.data[W],X.path,W)),alwaysSet:W in X.data});if(X.common.async)return m.mergeObjectAsync(J,Q);else return m.mergeObjectSync(J,Q)}get element(){return this._def.valueType}static create($,J,X){if(J instanceof I)return new H1({keyType:$,valueType:J,typeName:N.ZodRecord,...j(X)});return new H1({keyType:r.create(),valueType:$,typeName:N.ZodRecord,...j(J)})}}class z1 extends I{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse($){let{status:J,ctx:X}=this._processInputParams($);if(X.parsedType!==w.map)return R(X,{code:K.invalid_type,expected:w.map,received:X.parsedType}),_;let Q=this._def.keyType,Y=this._def.valueType,G=[...X.data.entries()].map(([W,H],z)=>{return{key:Q._parse(new a(X,W,X.path,[z,"key"])),value:Y._parse(new a(X,H,X.path,[z,"value"]))}});if(X.common.async){let W=new Map;return Promise.resolve().then(async()=>{for(let H of G){let z=await H.key,B=await H.value;if(z.status==="aborted"||B.status==="aborted")return _;if(z.status==="dirty"||B.status==="dirty")J.dirty();W.set(z.value,B.value)}return{status:J.value,value:W}})}else{let W=new Map;for(let H of G){let{key:z,value:B}=H;if(z.status==="aborted"||B.status==="aborted")return _;if(z.status==="dirty"||B.status==="dirty")J.dirty();W.set(z.value,B.value)}return{status:J.value,value:W}}}}z1.create=($,J,X)=>{return new z1({valueType:J,keyType:$,typeName:N.ZodMap,...j(X)})};class N$ extends I{_parse($){let{status:J,ctx:X}=this._processInputParams($);if(X.parsedType!==w.set)return R(X,{code:K.invalid_type,expected:w.set,received:X.parsedType}),_;let Q=this._def;if(Q.minSize!==null){if(X.data.size<Q.minSize.value)R(X,{code:K.too_small,minimum:Q.minSize.value,type:"set",inclusive:!0,exact:!1,message:Q.minSize.message}),J.dirty()}if(Q.maxSize!==null){if(X.data.size>Q.maxSize.value)R(X,{code:K.too_big,maximum:Q.maxSize.value,type:"set",inclusive:!0,exact:!1,message:Q.maxSize.message}),J.dirty()}let Y=this._def.valueType;function G(H){let z=new Set;for(let B of H){if(B.status==="aborted")return _;if(B.status==="dirty")J.dirty();z.add(B.value)}return{status:J.value,value:z}}let W=[...X.data.values()].map((H,z)=>Y._parse(new a(X,H,X.path,z)));if(X.common.async)return Promise.all(W).then((H)=>G(H));else return G(W)}min($,J){return new N$({...this._def,minSize:{value:$,message:D.toString(J)}})}max($,J){return new N$({...this._def,maxSize:{value:$,message:D.toString(J)}})}size($,J){return this.min($,J).max($,J)}nonempty($){return this.min(1,$)}}N$.create=($,J)=>{return new N$({valueType:$,minSize:null,maxSize:null,typeName:N.ZodSet,...j(J)})};class b$ extends I{constructor(){super(...arguments);this.validate=this.implement}_parse($){let{ctx:J}=this._processInputParams($);if(J.parsedType!==w.function)return R(J,{code:K.invalid_type,expected:w.function,received:J.parsedType}),_;function X(W,H){return X1({data:W,path:J.path,errorMaps:[J.common.contextualErrorMap,J.schemaErrorMap,k$(),Y$].filter((z)=>!!z),issueData:{code:K.invalid_arguments,argumentsError:H}})}function Q(W,H){return X1({data:W,path:J.path,errorMaps:[J.common.contextualErrorMap,J.schemaErrorMap,k$(),Y$].filter((z)=>!!z),issueData:{code:K.invalid_return_type,returnTypeError:H}})}let Y={errorMap:J.common.contextualErrorMap},G=J.data;if(this._def.returns instanceof S$){let W=this;return u(async function(...H){let z=new l([]),B=await W._def.args.parseAsync(H,Y).catch((F)=>{throw z.addIssue(X(H,F)),z}),U=await Reflect.apply(G,this,B);return await W._def.returns._def.type.parseAsync(U,Y).catch((F)=>{throw z.addIssue(Q(U,F)),z})})}else{let W=this;return u(function(...H){let z=W._def.args.safeParse(H,Y);if(!z.success)throw new l([X(H,z.error)]);let B=Reflect.apply(G,this,z.data),U=W._def.returns.safeParse(B,Y);if(!U.success)throw new l([Q(B,U.error)]);return U.data})}}parameters(){return this._def.args}returnType(){return this._def.returns}args(...$){return new b$({...this._def,args:J$.create($).rest(M$.create())})}returns($){return new b$({...this._def,returns:$})}implement($){return this.parse($)}strictImplement($){return this.parse($)}static create($,J,X){return new b$({args:$?$:J$.create([]).rest(M$.create()),returns:J||M$.create(),typeName:N.ZodFunction,...j(X)})}}class g$ extends I{get schema(){return this._def.getter()}_parse($){let{ctx:J}=this._processInputParams($);return this._def.getter()._parse({data:J.data,path:J.path,parent:J})}}g$.create=($,J)=>{return new g$({getter:$,typeName:N.ZodLazy,...j(J)})};class u$ extends I{_parse($){if($.data!==this._def.value){let J=this._getOrReturnCtx($);return R(J,{received:J.data,code:K.invalid_literal,expected:this._def.value}),_}return{status:"valid",value:$.data}}get value(){return this._def.value}}u$.create=($,J)=>{return new u$({value:$,typeName:N.ZodLiteral,...j(J)})};function x0($,J){return new K$({values:$,typeName:N.ZodEnum,...j(J)})}class K$ extends I{constructor(){super(...arguments);Q1.set(this,void 0)}_parse($){if(typeof $.data!=="string"){let J=this._getOrReturnCtx($),X=this._def.values;return R(J,{expected:C.joinValues(X),received:J.parsedType,code:K.invalid_type}),_}if(!P1(this,Q1,"f"))T0(this,Q1,new Set(this._def.values),"f");if(!P1(this,Q1,"f").has($.data)){let J=this._getOrReturnCtx($),X=this._def.values;return R(J,{received:J.data,code:K.invalid_enum_value,options:X}),_}return u($.data)}get options(){return this._def.values}get enum(){let $={};for(let J of this._def.values)$[J]=J;return $}get Values(){let $={};for(let J of this._def.values)$[J]=J;return $}get Enum(){let $={};for(let J of this._def.values)$[J]=J;return $}extract($,J=this._def){return K$.create($,{...this._def,...J})}exclude($,J=this._def){return K$.create(this.options.filter((X)=>!$.includes(X)),{...this._def,...J})}}Q1=new WeakMap;K$.create=x0;class d$ extends I{constructor(){super(...arguments);Y1.set(this,void 0)}_parse($){let J=C.getValidEnumValues(this._def.values),X=this._getOrReturnCtx($);if(X.parsedType!==w.string&&X.parsedType!==w.number){let Q=C.objectValues(J);return R(X,{expected:C.joinValues(Q),received:X.parsedType,code:K.invalid_type}),_}if(!P1(this,Y1,"f"))T0(this,Y1,new Set(C.getValidEnumValues(this._def.values)),"f");if(!P1(this,Y1,"f").has($.data)){let Q=C.objectValues(J);return R(X,{received:X.data,code:K.invalid_enum_value,options:Q}),_}return u($.data)}get enum(){return this._def.values}}Y1=new WeakMap;d$.create=($,J)=>{return new d$({values:$,typeName:N.ZodNativeEnum,...j(J)})};class S$ extends I{unwrap(){return this._def.type}_parse($){let{ctx:J}=this._processInputParams($);if(J.parsedType!==w.promise&&J.common.async===!1)return R(J,{code:K.invalid_type,expected:w.promise,received:J.parsedType}),_;let X=J.parsedType===w.promise?J.data:Promise.resolve(J.data);return u(X.then((Q)=>{return this._def.type.parseAsync(Q,{path:J.path,errorMap:J.common.contextualErrorMap})}))}}S$.create=($,J)=>{return new S$({type:$,typeName:N.ZodPromise,...j(J)})};class s extends I{innerType(){return this._def.schema}sourceType(){return this._def.schema._def.typeName===N.ZodEffects?this._def.schema.sourceType():this._def.schema}_parse($){let{status:J,ctx:X}=this._processInputParams($),Q=this._def.effect||null,Y={addIssue:(G)=>{if(R(X,G),G.fatal)J.abort();else J.dirty()},get path(){return X.path}};if(Y.addIssue=Y.addIssue.bind(Y),Q.type==="preprocess"){let G=Q.transform(X.data,Y);if(X.common.async)return Promise.resolve(G).then(async(W)=>{if(J.value==="aborted")return _;let H=await this._def.schema._parseAsync({data:W,path:X.path,parent:X});if(H.status==="aborted")return _;if(H.status==="dirty")return A$(H.value);if(J.value==="dirty")return A$(H.value);return H});else{if(J.value==="aborted")return _;let W=this._def.schema._parseSync({data:G,path:X.path,parent:X});if(W.status==="aborted")return _;if(W.status==="dirty")return A$(W.value);if(J.value==="dirty")return A$(W.value);return W}}if(Q.type==="refinement"){let G=(W)=>{let H=Q.refinement(W,Y);if(X.common.async)return Promise.resolve(H);if(H instanceof Promise)throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");return W};if(X.common.async===!1){let W=this._def.schema._parseSync({data:X.data,path:X.path,parent:X});if(W.status==="aborted")return _;if(W.status==="dirty")J.dirty();return G(W.value),{status:J.value,value:W.value}}else return this._def.schema._parseAsync({data:X.data,path:X.path,parent:X}).then((W)=>{if(W.status==="aborted")return _;if(W.status==="dirty")J.dirty();return G(W.value).then(()=>{return{status:J.value,value:W.value}})})}if(Q.type==="transform")if(X.common.async===!1){let G=this._def.schema._parseSync({data:X.data,path:X.path,parent:X});if(!U$(G))return G;let W=Q.transform(G.value,Y);if(W instanceof Promise)throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");return{status:J.value,value:W}}else return this._def.schema._parseAsync({data:X.data,path:X.path,parent:X}).then((G)=>{if(!U$(G))return G;return Promise.resolve(Q.transform(G.value,Y)).then((W)=>({status:J.value,value:W}))});C.assertNever(Q)}}s.create=($,J,X)=>{return new s({schema:$,typeName:N.ZodEffects,effect:J,...j(X)})};s.createWithPreprocess=($,J,X)=>{return new s({schema:J,effect:{type:"preprocess",transform:$},typeName:N.ZodEffects,...j(X)})};class i extends I{_parse($){if(this._getType($)===w.undefined)return u(void 0);return this._def.innerType._parse($)}unwrap(){return this._def.innerType}}i.create=($,J)=>{return new i({innerType:$,typeName:N.ZodOptional,...j(J)})};class G$ extends I{_parse($){if(this._getType($)===w.null)return u(null);return this._def.innerType._parse($)}unwrap(){return this._def.innerType}}G$.create=($,J)=>{return new G$({innerType:$,typeName:N.ZodNullable,...j(J)})};class c$ extends I{_parse($){let{ctx:J}=this._processInputParams($),X=J.data;if(J.parsedType===w.undefined)X=this._def.defaultValue();return this._def.innerType._parse({data:X,path:J.path,parent:J})}removeDefault(){return this._def.innerType}}c$.create=($,J)=>{return new c$({innerType:$,typeName:N.ZodDefault,defaultValue:typeof J.default==="function"?J.default:()=>J.default,...j(J)})};class l$ extends I{_parse($){let{ctx:J}=this._processInputParams($),X={...J,common:{...J.common,issues:[]}},Q=this._def.innerType._parse({data:X.data,path:X.path,parent:{...X}});if(T$(Q))return Q.then((Y)=>{return{status:"valid",value:Y.status==="valid"?Y.value:this._def.catchValue({get error(){return new l(X.common.issues)},input:X.data})}});else return{status:"valid",value:Q.status==="valid"?Q.value:this._def.catchValue({get error(){return new l(X.common.issues)},input:X.data})}}removeCatch(){return this._def.innerType}}l$.create=($,J)=>{return new l$({innerType:$,typeName:N.ZodCatch,catchValue:typeof J.catch==="function"?J.catch:()=>J.catch,...j(J)})};class q1 extends I{_parse($){if(this._getType($)!==w.nan){let X=this._getOrReturnCtx($);return R(X,{code:K.invalid_type,expected:w.nan,received:X.parsedType}),_}return{status:"valid",value:$.data}}}q1.create=($)=>{return new q1({typeName:N.ZodNaN,...j($)})};var g4=Symbol("zod_brand");class Z1 extends I{_parse($){let{ctx:J}=this._processInputParams($),X=J.data;return this._def.type._parse({data:X,path:J.path,parent:J})}unwrap(){return this._def.type}}class B1 extends I{_parse($){let{status:J,ctx:X}=this._processInputParams($);if(X.common.async)return(async()=>{let Y=await this._def.in._parseAsync({data:X.data,path:X.path,parent:X});if(Y.status==="aborted")return _;if(Y.status==="dirty")return J.dirty(),A$(Y.value);else return this._def.out._parseAsync({data:Y.value,path:X.path,parent:X})})();else{let Q=this._def.in._parseSync({data:X.data,path:X.path,parent:X});if(Q.status==="aborted")return _;if(Q.status==="dirty")return J.dirty(),{status:"dirty",value:Q.value};else return this._def.out._parseSync({data:Q.value,path:X.path,parent:X})}}static create($,J){return new B1({in:$,out:J,typeName:N.ZodPipeline})}}class p$ extends I{_parse($){let J=this._def.innerType._parse($),X=(Q)=>{if(U$(Q))Q.value=Object.freeze(Q.value);return Q};return T$(J)?J.then((Q)=>X(Q)):X(J)}unwrap(){return this._def.innerType}}p$.create=($,J)=>{return new p$({innerType:$,typeName:N.ZodReadonly,...j(J)})};function k0($,J){let X=typeof $==="function"?$(J):typeof $==="string"?{message:$}:$;return typeof X==="string"?{message:X}:X}function h0($,J={},X){if($)return _$.create().superRefine((Q,Y)=>{let G=$(Q);if(G instanceof Promise)return G.then((W)=>{if(!W){let H=k0(J,Q),z=H.fatal??X??!0;Y.addIssue({code:"custom",...H,fatal:z})}});if(!G){let W=k0(J,Q),H=W.fatal??X??!0;Y.addIssue({code:"custom",...W,fatal:H})}return});return _$.create()}var u4={object:b.lazycreate},N;(function($){$.ZodString="ZodString",$.ZodNumber="ZodNumber",$.ZodNaN="ZodNaN",$.ZodBigInt="ZodBigInt",$.ZodBoolean="ZodBoolean",$.ZodDate="ZodDate",$.ZodSymbol="ZodSymbol",$.ZodUndefined="ZodUndefined",$.ZodNull="ZodNull",$.ZodAny="ZodAny",$.ZodUnknown="ZodUnknown",$.ZodNever="ZodNever",$.ZodVoid="ZodVoid",$.ZodArray="ZodArray",$.ZodObject="ZodObject",$.ZodUnion="ZodUnion",$.ZodDiscriminatedUnion="ZodDiscriminatedUnion",$.ZodIntersection="ZodIntersection",$.ZodTuple="ZodTuple",$.ZodRecord="ZodRecord",$.ZodMap="ZodMap",$.ZodSet="ZodSet",$.ZodFunction="ZodFunction",$.ZodLazy="ZodLazy",$.ZodLiteral="ZodLiteral",$.ZodEnum="ZodEnum",$.ZodEffects="ZodEffects",$.ZodNativeEnum="ZodNativeEnum",$.ZodOptional="ZodOptional",$.ZodNullable="ZodNullable",$.ZodDefault="ZodDefault",$.ZodCatch="ZodCatch",$.ZodPromise="ZodPromise",$.ZodBranded="ZodBranded",$.ZodPipeline="ZodPipeline",$.ZodReadonly="ZodReadonly"})(N||(N={}));var d4=($,J={message:`Input not instance of ${$.name}`})=>h0((X)=>X instanceof $,J),m0=r.create,y0=V$.create,c4=q1.create,l4=F$.create,g0=f$.create,p4=L$.create,n4=W1.create,r4=x$.create,o4=h$.create,i4=_$.create,a4=M$.create,s4=$$.create,t4=G1.create,e4=o.create,$5=b.create,J5=b.strictCreate,X5=m$.create,Q5=C1.create,Y5=y$.create,W5=J$.create,G5=H1.create,H5=z1.create,z5=N$.create,q5=b$.create,B5=g$.create,U5=u$.create,M5=K$.create,V5=d$.create,F5=S$.create,K5=s.create,w5=i.create,R5=G$.create,O5=s.createWithPreprocess,D5=B1.create,A5=()=>m0().optional(),L5=()=>y0().optional(),_5=()=>g0().optional(),N5={string:($)=>r.create({...$,coerce:!0}),number:($)=>V$.create({...$,coerce:!0}),boolean:($)=>f$.create({...$,coerce:!0}),bigint:($)=>F$.create({...$,coerce:!0}),date:($)=>L$.create({...$,coerce:!0})};var S5=_;v();var j5=E.object({provider:E.string(),apiKey:E.string().optional(),model:E.string(),baseUrl:E.string().optional(),maxTokens:E.number().optional(),temperature:E.number().optional(),contextLimit:E.number().optional(),timeout:E.number().optional(),useVendedCredentials:E.boolean().optional()}),E5=E.object({enabled:E.boolean(),image:E.string().optional(),memoryLimit:E.string().optional(),cpuLimit:E.string().optional(),timeout:E.number().optional(),securityProfile:E.enum(["default","strict","relaxed"]).optional(),environmentVariables:E.record(E.string(),E.string()).optional()}),I5=E.object({disableNetworkAccess:E.boolean().optional(),allowedDomains:E.array(E.string()).optional(),scanDependencies:E.boolean().optional(),preventSecretLeakage:E.boolean().optional(),maxFileSize:E.number().optional(),timeoutSeconds:E.number().optional(),requireCodeReview:E.boolean().optional()}),P5=E.object({apiKey:E.string(),configPath:E.string(),issueLabel:E.string(),enableSecurityAnalysis:E.boolean().optional(),environmentVariables:E.record(E.string(),E.string()).optional(),repoToken:E.string().optional(),aiProvider:j5,containerConfig:E5,securitySettings:I5});async function d0(){try{q.info("Loading configuration");let $=C5(),J=process.env.RSOLV_CONFIG_PATH||".github/rsolv.yml",X=await Z5(J),Q=k5(),Y={...$,...X,...Q,aiProvider:{...$.aiProvider,...X.aiProvider,...Q.aiProvider},containerConfig:{...$.containerConfig,...X.containerConfig,...Q.containerConfig},securitySettings:{...$.securitySettings,...X.securitySettings,...Q.securitySettings}},G=T5(Y);return q.debug("Configuration loaded successfully"),G}catch($){throw q.error("Failed to load configuration",$),new Error(`Configuration error: ${$ instanceof Error?$.message:String($)}`)}}function C5(){return{configPath:".github/rsolv.yml",issueLabel:"rsolv:automate",enableSecurityAnalysis:!0,aiProvider:{provider:"claude-code",model:"claude-sonnet-4-20250514",temperature:0.2,maxTokens:4000,contextLimit:1e5,timeout:900000,useVendedCredentials:!0},containerConfig:{enabled:!0,image:"rsolv/code-analysis:latest",memoryLimit:"2g",cpuLimit:"1",timeout:300,securityProfile:"default"},securitySettings:{disableNetworkAccess:!0,scanDependencies:!0,preventSecretLeakage:!0,maxFileSize:1048576,timeoutSeconds:300,requireCodeReview:!0}}}async function Z5($){try{if(!k1.existsSync($))return q.info(`Configuration file not found at ${$}, using defaults`),{};q.info(`Loading configuration from ${$}`);let J=k1.readFileSync($,"utf8"),X=P0(J);return q.debug("Configuration file loaded successfully"),X||{}}catch(J){return q.error(`Error loading configuration from file ${$}`,J),{}}}function k5(){q.info("Loading configuration from environment variables");let $={apiKey:process.env.RSOLV_API_KEY,rsolvApiKey:process.env.RSOLV_API_KEY,configPath:process.env.RSOLV_CONFIG_PATH,issueLabel:process.env.RSOLV_ISSUE_LABEL,repoToken:process.env.GITHUB_TOKEN};if(process.env.RSOLV_ENVIRONMENT_VARIABLES)try{$.environmentVariables=JSON.parse(process.env.RSOLV_ENVIRONMENT_VARIABLES)}catch(J){q.error("Error parsing RSOLV_ENVIRONMENT_VARIABLES",J)}if(process.env.RSOLV_AI_PROVIDER){if($.aiProvider={provider:process.env.RSOLV_AI_PROVIDER,apiKey:process.env.RSOLV_AI_API_KEY,model:process.env.RSOLV_AI_MODEL||"claude-3-sonnet-20240229",baseUrl:process.env.RSOLV_AI_BASE_URL},process.env.RSOLV_AI_TEMPERATURE)$.aiProvider.temperature=parseFloat(process.env.RSOLV_AI_TEMPERATURE);if(process.env.RSOLV_AI_MAX_TOKENS)$.aiProvider.maxTokens=parseInt(process.env.RSOLV_AI_MAX_TOKENS,10)}if(process.env.RSOLV_CONTAINER_ENABLED!==void 0){if($.containerConfig={enabled:process.env.RSOLV_CONTAINER_ENABLED==="true",image:process.env.RSOLV_CONTAINER_IMAGE,memoryLimit:process.env.RSOLV_CONTAINER_MEMORY_LIMIT,cpuLimit:process.env.RSOLV_CONTAINER_CPU_LIMIT},process.env.RSOLV_CONTAINER_TIMEOUT)$.containerConfig.timeout=parseInt(process.env.RSOLV_CONTAINER_TIMEOUT,10)}return Object.keys($).forEach((J)=>{if($[J]===void 0)delete $[J]}),$}function T5($){q.debug("Validating configuration");try{if(!$.apiKey)throw new Error("API key is required");let J=P5.parse($);return q.debug("Configuration validation successful"),J}catch(J){if(J instanceof E.ZodError){let X=J.errors.map((Q)=>`${Q.path.join(".")}: ${Q.message}`).join(", ");throw q.error(`Configuration validation failed: ${X}`),new Error(`Invalid configuration: ${X}`)}throw J}}v();v();function w$(){if(typeof navigator==="object"&&"userAgent"in navigator)return navigator.userAgent;if(typeof process==="object"&&process.version!==void 0)return`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`;return"<environment undetectable>"}function T1($,J,X,Q){if(typeof X!=="function")throw new Error("method for before hook must be a function");if(!Q)Q={};if(Array.isArray(J))return J.reverse().reduce((Y,G)=>{return T1.bind(null,$,G,Y,Q)},X)();return Promise.resolve().then(()=>{if(!$.registry[J])return X(Q);return $.registry[J].reduce((Y,G)=>{return G.hook.bind(null,Y,Q)},X)()})}function c0($,J,X,Q){let Y=Q;if(!$.registry[X])$.registry[X]=[];if(J==="before")Q=(G,W)=>{return Promise.resolve().then(Y.bind(null,W)).then(G.bind(null,W))};if(J==="after")Q=(G,W)=>{let H;return Promise.resolve().then(G.bind(null,W)).then((z)=>{return H=z,Y(H,W)}).then(()=>{return H})};if(J==="error")Q=(G,W)=>{return Promise.resolve().then(G.bind(null,W)).catch((H)=>{return Y(H,W)})};$.registry[X].push({hook:Q,orig:Y})}function l0($,J,X){if(!$.registry[J])return;let Q=$.registry[J].map((Y)=>{return Y.orig}).indexOf(X);if(Q===-1)return;$.registry[J].splice(Q,1)}var p0=Function.bind,n0=p0.bind(p0);function r0($,J,X){let Q=n0(l0,null).apply(null,X?[J,X]:[J]);$.api={remove:Q},$.remove=Q,["before","error","after","wrap"].forEach((Y)=>{let G=X?[J,Y,X]:[J,Y];$[Y]=$.api[Y]=n0(c0,null).apply(null,G)})}function v5(){let $=Symbol("Singular"),J={registry:{}},X=T1.bind(null,J,$);return r0(X,J,$),X}function b5(){let $={registry:{}},J=T1.bind(null,$);return r0(J,$),J}var o0={Singular:v5,Collection:b5};var f5="0.0.0-development",x5=`octokit-endpoint.js/${f5} ${w$()}`,h5={method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":x5},mediaType:{format:""}};function m5($){if(!$)return{};return Object.keys($).reduce((J,X)=>{return J[X.toLowerCase()]=$[X],J},{})}function y5($){if(typeof $!=="object"||$===null)return!1;if(Object.prototype.toString.call($)!=="[object Object]")return!1;let J=Object.getPrototypeOf($);if(J===null)return!0;let X=Object.prototype.hasOwnProperty.call(J,"constructor")&&J.constructor;return typeof X==="function"&&X instanceof X&&Function.prototype.call(X)===Function.prototype.call($)}function s0($,J){let X=Object.assign({},$);return Object.keys(J).forEach((Q)=>{if(y5(J[Q]))if(!(Q in $))Object.assign(X,{[Q]:J[Q]});else X[Q]=s0($[Q],J[Q]);else Object.assign(X,{[Q]:J[Q]})}),X}function i0($){for(let J in $)if($[J]===void 0)delete $[J];return $}function H6($,J,X){if(typeof J==="string"){let[Y,G]=J.split(" ");X=Object.assign(G?{method:Y,url:G}:{url:Y},X)}else X=Object.assign({},J);X.headers=m5(X.headers),i0(X),i0(X.headers);let Q=s0($||{},X);if(X.url==="/graphql"){if($&&$.mediaType.previews?.length)Q.mediaType.previews=$.mediaType.previews.filter((Y)=>!Q.mediaType.previews.includes(Y)).concat(Q.mediaType.previews);Q.mediaType.previews=(Q.mediaType.previews||[]).map((Y)=>Y.replace(/-preview/,""))}return Q}function g5($,J){let X=/\?/.test($)?"&":"?",Q=Object.keys(J);if(Q.length===0)return $;return $+X+Q.map((Y)=>{if(Y==="q")return"q="+J.q.split("+").map(encodeURIComponent).join("+");return`${Y}=${encodeURIComponent(J[Y])}`}).join("&")}var u5=/\{[^{}}]+\}/g;function d5($){return $.replace(/(?:^\W+)|(?:(?<!\W)\W+$)/g,"").split(/,/)}function c5($){let J=$.match(u5);if(!J)return[];return J.map(d5).reduce((X,Q)=>X.concat(Q),[])}function a0($,J){let X={__proto__:null};for(let Q of Object.keys($))if(J.indexOf(Q)===-1)X[Q]=$[Q];return X}function t0($){return $.split(/(%[0-9A-Fa-f]{2})/g).map(function(J){if(!/%[0-9A-Fa-f]/.test(J))J=encodeURI(J).replace(/%5B/g,"[").replace(/%5D/g,"]");return J}).join("")}function r$($){return encodeURIComponent($).replace(/[!'()*]/g,function(J){return"%"+J.charCodeAt(0).toString(16).toUpperCase()})}function U1($,J,X){if(J=$==="+"||$==="#"?t0(J):r$(J),X)return r$(X)+"="+J;else return J}function n$($){return $!==void 0&&$!==null}function G6($){return $===";"||$==="&"||$==="?"}function l5($,J,X,Q){var Y=$[X],G=[];if(n$(Y)&&Y!=="")if(typeof Y==="string"||typeof Y==="number"||typeof Y==="boolean"){if(Y=Y.toString(),Q&&Q!=="*")Y=Y.substring(0,parseInt(Q,10));G.push(U1(J,Y,G6(J)?X:""))}else if(Q==="*")if(Array.isArray(Y))Y.filter(n$).forEach(function(W){G.push(U1(J,W,G6(J)?X:""))});else Object.keys(Y).forEach(function(W){if(n$(Y[W]))G.push(U1(J,Y[W],W))});else{let W=[];if(Array.isArray(Y))Y.filter(n$).forEach(function(H){W.push(U1(J,H))});else Object.keys(Y).forEach(function(H){if(n$(Y[H]))W.push(r$(H)),W.push(U1(J,Y[H].toString()))});if(G6(J))G.push(r$(X)+"="+W.join(","));else if(W.length!==0)G.push(W.join(","))}else if(J===";"){if(n$(Y))G.push(r$(X))}else if(Y===""&&(J==="&"||J==="?"))G.push(r$(X)+"=");else if(Y==="")G.push("");return G}function p5($){return{expand:n5.bind(null,$)}}function n5($,J){var X=["+","#",".","/",";","?","&"];if($=$.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,function(Q,Y,G){if(Y){let H="",z=[];if(X.indexOf(Y.charAt(0))!==-1)H=Y.charAt(0),Y=Y.substr(1);if(Y.split(/,/g).forEach(function(B){var U=/([^:\*]*)(?::(\d+)|(\*))?/.exec(B);z.push(l5(J,H,U[1],U[2]||U[3]))}),H&&H!=="+"){var W=",";if(H==="?")W="&";else if(H!=="#")W=H;return(z.length!==0?H:"")+z.join(W)}else return z.join(",")}else return t0(G)}),$==="/")return $;else return $.replace(/\/$/,"")}function e0($){let J=$.method.toUpperCase(),X=($.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),Q=Object.assign({},$.headers),Y,G=a0($,["method","baseUrl","url","headers","request","mediaType"]),W=c5(X);if(X=p5(X).expand(G),!/^http/.test(X))X=$.baseUrl+X;let H=Object.keys($).filter((U)=>W.includes(U)).concat("baseUrl"),z=a0(G,H);if(!/application\/octet-stream/i.test(Q.accept)){if($.mediaType.format)Q.accept=Q.accept.split(/,/).map((U)=>U.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${$.mediaType.format}`)).join(",");if(X.endsWith("/graphql")){if($.mediaType.previews?.length){let U=Q.accept.match(/(?<![\w-])[\w-]+(?=-preview)/g)||[];Q.accept=U.concat($.mediaType.previews).map((M)=>{let F=$.mediaType.format?`.${$.mediaType.format}`:"+json";return`application/vnd.github.${M}-preview${F}`}).join(",")}}}if(["GET","HEAD"].includes(J))X=g5(X,z);else if("data"in z)Y=z.data;else if(Object.keys(z).length)Y=z;if(!Q["content-type"]&&typeof Y!=="undefined")Q["content-type"]="application/json; charset=utf-8";if(["PATCH","PUT"].includes(J)&&typeof Y==="undefined")Y="";return Object.assign({method:J,url:X,headers:Q},typeof Y!=="undefined"?{body:Y}:null,$.request?{request:$.request}:null)}function r5($,J,X){return e0(H6($,J,X))}function $8($,J){let X=H6($,J),Q=r5.bind(null,X);return Object.assign(Q,{DEFAULTS:X,defaults:$8.bind(null,X),merge:H6.bind(null,X),parse:e0})}var J8=$8(null,h5);var z6=function $(){};z6.prototype=Object.create(null);var X8=/; *([!#$%&'*+.^\w`|~-]+)=("(?:[\v\u0020\u0021\u0023-\u005b\u005d-\u007e\u0080-\u00ff]|\\[\v\u0020-\u00ff])*"|[!#$%&'*+.^\w`|~-]+) */gu,Q8=/\\([\v\u0020-\u00ff])/gu,o5=/^[!#$%&'*+.^\w|~-]+\/[!#$%&'*+.^\w|~-]+$/u,o$={type:"",parameters:new z6};Object.freeze(o$.parameters);Object.freeze(o$);function i5($){if(typeof $!=="string")return o$;let J=$.indexOf(";"),X=J!==-1?$.slice(0,J).trim():$.trim();if(o5.test(X)===!1)return o$;let Q={type:X.toLowerCase(),parameters:new z6};if(J===-1)return Q;let Y,G,W;X8.lastIndex=J;while(G=X8.exec($)){if(G.index!==J)return o$;if(J+=G[0].length,Y=G[1].toLowerCase(),W=G[2],W[0]==='"')W=W.slice(1,W.length-1),Q8.test(W)&&(W=W.replace(Q8,"$1"));Q.parameters[Y]=W}if(J!==$.length)return o$;return Q}var q6=i5;class i$ extends Error{name;status;request;response;constructor($,J,X){super($);if(this.name="HttpError",this.status=Number.parseInt(J),Number.isNaN(this.status))this.status=0;if("response"in X)this.response=X.response;let Q=Object.assign({},X.request);if(X.request.headers.authorization)Q.headers=Object.assign({},X.request.headers,{authorization:X.request.headers.authorization.replace(/(?<! ) .*$/," [REDACTED]")});Q.url=Q.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=Q}}var s5="0.0.0-development",t5={headers:{"user-agent":`octokit-request.js/${s5} ${w$()}`}};function e5($){if(typeof $!=="object"||$===null)return!1;if(Object.prototype.toString.call($)!=="[object Object]")return!1;let J=Object.getPrototypeOf($);if(J===null)return!0;let X=Object.prototype.hasOwnProperty.call(J,"constructor")&&J.constructor;return typeof X==="function"&&X instanceof X&&Function.prototype.call(X)===Function.prototype.call($)}async function Y8($){let J=$.request?.fetch||globalThis.fetch;if(!J)throw new Error("fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing");let X=$.request?.log||console,Q=$.request?.parseSuccessResponseBody!==!1,Y=e5($.body)||Array.isArray($.body)?JSON.stringify($.body):$.body,G=Object.fromEntries(Object.entries($.headers).map(([M,F])=>[M,String(F)])),W;try{W=await J($.url,{method:$.method,body:Y,redirect:$.request?.redirect,headers:G,signal:$.request?.signal,...$.body&&{duplex:"half"}})}catch(M){let F="Unknown Error";if(M instanceof Error){if(M.name==="AbortError")throw M.status=500,M;if(F=M.message,M.name==="TypeError"&&"cause"in M){if(M.cause instanceof Error)F=M.cause.message;else if(typeof M.cause==="string")F=M.cause}}let O=new i$(F,500,{request:$});throw O.cause=M,O}let{status:H,url:z}=W,B={};for(let[M,F]of W.headers)B[M]=F;let U={url:z,status:H,headers:B,data:""};if("deprecation"in B){let M=B.link&&B.link.match(/<([^<>]+)>; rel="deprecation"/),F=M&&M.pop();X.warn(`[@octokit/request] "${$.method} ${$.url}" is deprecated. It is scheduled to be removed on ${B.sunset}${F?`. See ${F}`:""}`)}if(H===204||H===205)return U;if($.method==="HEAD"){if(H<400)return U;throw new i$(W.statusText,H,{response:U,request:$})}if(H===304)throw U.data=await B6(W),new i$("Not modified",H,{response:U,request:$});if(H>=400)throw U.data=await B6(W),new i$(J7(U.data),H,{response:U,request:$});return U.data=Q?await B6(W):W.body,U}async function B6($){let J=$.headers.get("content-type");if(!J)return $.text().catch(()=>"");let X=q6(J);if($7(X)){let Q="";try{return Q=await $.text(),JSON.parse(Q)}catch(Y){return Q}}else if(X.type.startsWith("text/")||X.parameters.charset?.toLowerCase()==="utf-8")return $.text().catch(()=>"");else return $.arrayBuffer().catch(()=>new ArrayBuffer(0))}function $7($){return $.type==="application/json"||$.type==="application/scim+json"}function J7($){if(typeof $==="string")return $;if($ instanceof ArrayBuffer)return"Unknown error";if("message"in $){let J="documentation_url"in $?` - ${$.documentation_url}`:"";return Array.isArray($.errors)?`${$.message}: ${$.errors.map((X)=>JSON.stringify(X)).join(", ")}${J}`:`${$.message}${J}`}return`Unknown error: ${JSON.stringify($)}`}function U6($,J){let X=$.defaults(J);return Object.assign(function(Y,G){let W=X.merge(Y,G);if(!W.request||!W.request.hook)return Y8(X.parse(W));let H=(z,B)=>{return Y8(X.parse(X.merge(z,B)))};return Object.assign(H,{endpoint:X,defaults:U6.bind(null,X)}),W.request.hook(H,W)},{endpoint:X,defaults:U6.bind(null,X)})}var M1=U6(J8,t5);var X7="0.0.0-development";function Q7($){return`Request failed due to following response errors:
`+$.errors.map((J)=>` - ${J.message}`).join(`
`)}var Y7=class extends Error{constructor($,J,X){super(Q7(X));if(this.request=$,this.headers=J,this.response=X,this.errors=X.errors,this.data=X.data,Error.captureStackTrace)Error.captureStackTrace(this,this.constructor)}name="GraphqlResponseError";errors;data},W7=["method","baseUrl","url","headers","request","query","mediaType","operationName"],G7=["query","method","url"],W8=/\/api\/v3\/?$/;function H7($,J,X){if(X){if(typeof J==="string"&&"query"in X)return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));for(let W in X){if(!G7.includes(W))continue;return Promise.reject(new Error(`[@octokit/graphql] "${W}" cannot be used as variable name`))}}let Q=typeof J==="string"?Object.assign({query:J},X):J,Y=Object.keys(Q).reduce((W,H)=>{if(W7.includes(H))return W[H]=Q[H],W;if(!W.variables)W.variables={};return W.variables[H]=Q[H],W},{}),G=Q.baseUrl||$.endpoint.DEFAULTS.baseUrl;if(W8.test(G))Y.url=G.replace(W8,"/api/graphql");return $(Y).then((W)=>{if(W.data.errors){let H={};for(let z of Object.keys(W.headers))H[z]=W.headers[z];throw new Y7(Y,H,W.data)}return W.data.data})}function M6($,J){let X=$.defaults(J);return Object.assign((Y,G)=>{return H7(X,Y,G)},{defaults:M6.bind(null,X),endpoint:X.endpoint})}var iX=M6(M1,{headers:{"user-agent":`octokit-graphql.js/${X7} ${w$()}`},method:"POST",url:"/graphql"});function G8($){return M6($,{method:"POST",url:"/graphql"})}var V6="(?:[a-zA-Z0-9_-]+)",H8="\\.",z8=new RegExp(`^${V6}${H8}${V6}${H8}${V6}$`),z7=z8.test.bind(z8);async function q7($){let J=z7($),X=$.startsWith("v1.")||$.startsWith("ghs_"),Q=$.startsWith("ghu_");return{type:"token",token:$,tokenType:J?"app":X?"installation":Q?"user-to-server":"oauth"}}function B7($){if($.split(/\./).length===3)return`bearer ${$}`;return`token ${$}`}async function U7($,J,X,Q){let Y=J.endpoint.merge(X,Q);return Y.headers.authorization=B7($),J(Y)}var q8=function $(J){if(!J)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if(typeof J!=="string")throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return J=J.replace(/^(token|bearer) +/i,""),Object.assign(q7.bind(null,J),{hook:U7.bind(null,J)})};var F6="6.1.5";var B8=()=>{},M7=console.warn.bind(console),V7=console.error.bind(console),U8=`octokit-core.js/${F6} ${w$()}`;class K6{static VERSION=F6;static defaults($){return class extends this{constructor(...X){let Q=X[0]||{};if(typeof $==="function"){super($(Q));return}super(Object.assign({},$,Q,Q.userAgent&&$.userAgent?{userAgent:`${Q.userAgent} ${$.userAgent}`}:null))}}}static plugins=[];static plugin(...$){let J=this.plugins;return class extends this{static plugins=J.concat($.filter((Q)=>!J.includes(Q)))}}constructor($={}){let J=new o0.Collection,X={baseUrl:M1.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},$.request,{hook:J.bind(null,"request")}),mediaType:{previews:[],format:""}};if(X.headers["user-agent"]=$.userAgent?`${$.userAgent} ${U8}`:U8,$.baseUrl)X.baseUrl=$.baseUrl;if($.previews)X.mediaType.previews=$.previews;if($.timeZone)X.headers["time-zone"]=$.timeZone;if(this.request=M1.defaults(X),this.graphql=G8(this.request).defaults(X),this.log=Object.assign({debug:B8,info:B8,warn:M7,error:V7},$.log),this.hook=J,!$.authStrategy)if(!$.auth)this.auth=async()=>({type:"unauthenticated"});else{let Y=q8($.auth);J.wrap("request",Y.hook),this.auth=Y}else{let{authStrategy:Y,...G}=$,W=Y(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:G},$.auth));J.wrap("request",W.hook),this.auth=W}let Q=this.constructor;for(let Y=0;Y<Q.plugins.length;++Y)Object.assign(this,Q.plugins[Y](this,$))}request;graphql;log;hook;auth}var M8="5.3.1";function w6($){$.hook.wrap("request",(J,X)=>{$.log.debug("request",X);let Q=Date.now(),Y=$.request.endpoint.parse(X),G=Y.url.replace(X.baseUrl,"");return J(X).then((W)=>{let H=W.headers["x-github-request-id"];return $.log.info(`${Y.method} ${G} - ${W.status} with id ${H} in ${Date.now()-Q}ms`),W}).catch((W)=>{let H=W.response?.headers["x-github-request-id"]||"UNKNOWN";throw $.log.error(`${Y.method} ${G} - ${W.status} with id ${H} in ${Date.now()-Q}ms`),W})})}w6.VERSION=M8;var F7="0.0.0-development";function K7($){if(!$.data)return{...$,data:[]};if(!(("total_count"in $.data)&&!("url"in $.data)))return $;let X=$.data.incomplete_results,Q=$.data.repository_selection,Y=$.data.total_count;delete $.data.incomplete_results,delete $.data.repository_selection,delete $.data.total_count;let G=Object.keys($.data)[0],W=$.data[G];if($.data=W,typeof X!=="undefined")$.data.incomplete_results=X;if(typeof Q!=="undefined")$.data.repository_selection=Q;return $.data.total_count=Y,$}function R6($,J,X){let Q=typeof J==="function"?J.endpoint(X):$.request.endpoint(J,X),Y=typeof J==="function"?J:$.request,G=Q.method,W=Q.headers,H=Q.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!H)return{done:!0};try{let z=await Y({method:G,url:H,headers:W}),B=K7(z);return H=((B.headers.link||"").match(/<([^<>]+)>;\s*rel="next"/)||[])[1],{value:B}}catch(z){if(z.status!==409)throw z;return H="",{value:{status:200,headers:{},data:[]}}}}})}}function V8($,J,X,Q){if(typeof X==="function")Q=X,X=void 0;return F8($,[],R6($,J,X)[Symbol.asyncIterator](),Q)}function F8($,J,X,Q){return X.next().then((Y)=>{if(Y.done)return J;let G=!1;function W(){G=!0}if(J=J.concat(Q?Q(Y.value,W):Y.value.data),G)return J;return F8($,J,X,Q)})}var MQ=Object.assign(V8,{iterator:R6});function O6($){return{paginate:Object.assign(V8.bind(null,$),{iterator:R6.bind(null,$)})}}O6.VERSION=F7;var D6="13.5.0";var w7={actions:{addCustomLabelsToSelfHostedRunnerForOrg:["POST /orgs/{org}/actions/runners/{runner_id}/labels"],addCustomLabelsToSelfHostedRunnerForRepo:["POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],addRepoAccessToSelfHostedRunnerGroupInOrg:["PUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],approveWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createEnvironmentVariable:["POST /repos/{owner}/{repo}/environments/{environment_name}/variables"],createHostedRunnerForOrg:["POST /orgs/{org}/actions/hosted-runners"],createOrUpdateEnvironmentSecret:["PUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createOrgVariable:["POST /orgs/{org}/actions/variables"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createRepoVariable:["POST /repos/{owner}/{repo}/actions/variables"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteActionsCacheById:["DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"],deleteActionsCacheByKey:["DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteEnvironmentSecret:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],deleteEnvironmentVariable:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],deleteHostedRunnerForOrg:["DELETE /orgs/{org}/actions/hosted-runners/{hosted_runner_id}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteRepoVariable:["DELETE /repos/{owner}/{repo}/actions/variables/{name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunAttemptLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],forceCancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel"],generateRunnerJitconfigForOrg:["POST /orgs/{org}/actions/runners/generate-jitconfig"],generateRunnerJitconfigForRepo:["POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig"],getActionsCacheList:["GET /repos/{owner}/{repo}/actions/caches"],getActionsCacheUsage:["GET /repos/{owner}/{repo}/actions/cache/usage"],getActionsCacheUsageByRepoForOrg:["GET /orgs/{org}/actions/cache/usage-by-repository"],getActionsCacheUsageForOrg:["GET /orgs/{org}/actions/cache/usage"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getCustomOidcSubClaimForRepo:["GET /repos/{owner}/{repo}/actions/oidc/customization/sub"],getEnvironmentPublicKey:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-key"],getEnvironmentSecret:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],getEnvironmentVariable:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],getGithubActionsDefaultWorkflowPermissionsOrganization:["GET /orgs/{org}/actions/permissions/workflow"],getGithubActionsDefaultWorkflowPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/workflow"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getHostedRunnerForOrg:["GET /orgs/{org}/actions/hosted-runners/{hosted_runner_id}"],getHostedRunnersGithubOwnedImagesForOrg:["GET /orgs/{org}/actions/hosted-runners/images/github-owned"],getHostedRunnersLimitsForOrg:["GET /orgs/{org}/actions/hosted-runners/limits"],getHostedRunnersMachineSpecsForOrg:["GET /orgs/{org}/actions/hosted-runners/machine-sizes"],getHostedRunnersPartnerImagesForOrg:["GET /orgs/{org}/actions/hosted-runners/images/partner"],getHostedRunnersPlatformsForOrg:["GET /orgs/{org}/actions/hosted-runners/platforms"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getOrgVariable:["GET /orgs/{org}/actions/variables/{name}"],getPendingDeploymentsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getRepoVariable:["GET /repos/{owner}/{repo}/actions/variables/{name}"],getReviewsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowAccessToRepository:["GET /repos/{owner}/{repo}/actions/permissions/access"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listEnvironmentSecrets:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets"],listEnvironmentVariables:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables"],listGithubHostedRunnersInGroupForOrg:["GET /orgs/{org}/actions/runner-groups/{runner_group_id}/hosted-runners"],listHostedRunnersForOrg:["GET /orgs/{org}/actions/hosted-runners"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listJobsForWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"],listLabelsForSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}/labels"],listLabelsForSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listOrgVariables:["GET /orgs/{org}/actions/variables"],listRepoOrganizationSecrets:["GET /repos/{owner}/{repo}/actions/organization-secrets"],listRepoOrganizationVariables:["GET /repos/{owner}/{repo}/actions/organization-variables"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoVariables:["GET /repos/{owner}/{repo}/actions/variables"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedReposForOrgVariable:["GET /orgs/{org}/actions/variables/{name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunJobForWorkflowRun:["POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],reRunWorkflowFailedJobs:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"],removeAllCustomLabelsFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels"],removeAllCustomLabelsFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],removeCustomLabelFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"],removeCustomLabelFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],reviewCustomGatesForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule"],reviewPendingDeploymentsForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setCustomLabelsForSelfHostedRunnerForOrg:["PUT /orgs/{org}/actions/runners/{runner_id}/labels"],setCustomLabelsForSelfHostedRunnerForRepo:["PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],setCustomOidcSubClaimForRepo:["PUT /repos/{owner}/{repo}/actions/oidc/customization/sub"],setGithubActionsDefaultWorkflowPermissionsOrganization:["PUT /orgs/{org}/actions/permissions/workflow"],setGithubActionsDefaultWorkflowPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/workflow"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedReposForOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"],setWorkflowAccessToRepository:["PUT /repos/{owner}/{repo}/actions/permissions/access"],updateEnvironmentVariable:["PATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],updateHostedRunnerForOrg:["PATCH /orgs/{org}/actions/hosted-runners/{hosted_runner_id}"],updateOrgVariable:["PATCH /orgs/{org}/actions/variables/{name}"],updateRepoVariable:["PATCH /repos/{owner}/{repo}/actions/variables/{name}"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsDone:["DELETE /notifications/threads/{thread_id}"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","addRepoToInstallationForAuthenticatedUser"]}],addRepoToInstallationForAuthenticatedUser:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],getWebhookDelivery:["GET /app/hook/deliveries/{delivery_id}"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallationRequestsForAuthenticatedApp:["GET /app/installation-requests"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],listWebhookDeliveries:["GET /app/hook/deliveries"],redeliverWebhookDelivery:["POST /app/hook/deliveries/{delivery_id}/attempts"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","removeRepoFromInstallationForAuthenticatedUser"]}],removeRepoFromInstallationForAuthenticatedUser:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],scopeToken:["POST /applications/{client_id}/token/scoped"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubBillingUsageReportOrg:["GET /organizations/{org}/settings/billing/usage"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestRun:["POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{commitAutofix:["POST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix/commits"],createAutofix:["POST /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix"],createVariantAnalysis:["POST /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses"],deleteAnalysis:["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],deleteCodeqlDatabase:["DELETE /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],getAnalysis:["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],getAutofix:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix"],getCodeqlDatabase:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],getDefaultSetup:["GET /repos/{owner}/{repo}/code-scanning/default-setup"],getSarif:["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],getVariantAnalysis:["GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}"],getVariantAnalysisRepoTask:["GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}"],listAlertInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],listAlertsForOrg:["GET /orgs/{org}/code-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listAlertsInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",{},{renamed:["codeScanning","listAlertInstances"]}],listCodeqlDatabases:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],updateDefaultSetup:["PATCH /repos/{owner}/{repo}/code-scanning/default-setup"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codeSecurity:{attachConfiguration:["POST /orgs/{org}/code-security/configurations/{configuration_id}/attach"],attachEnterpriseConfiguration:["POST /enterprises/{enterprise}/code-security/configurations/{configuration_id}/attach"],createConfiguration:["POST /orgs/{org}/code-security/configurations"],createConfigurationForEnterprise:["POST /enterprises/{enterprise}/code-security/configurations"],deleteConfiguration:["DELETE /orgs/{org}/code-security/configurations/{configuration_id}"],deleteConfigurationForEnterprise:["DELETE /enterprises/{enterprise}/code-security/configurations/{configuration_id}"],detachConfiguration:["DELETE /orgs/{org}/code-security/configurations/detach"],getConfiguration:["GET /orgs/{org}/code-security/configurations/{configuration_id}"],getConfigurationForRepository:["GET /repos/{owner}/{repo}/code-security-configuration"],getConfigurationsForEnterprise:["GET /enterprises/{enterprise}/code-security/configurations"],getConfigurationsForOrg:["GET /orgs/{org}/code-security/configurations"],getDefaultConfigurations:["GET /orgs/{org}/code-security/configurations/defaults"],getDefaultConfigurationsForEnterprise:["GET /enterprises/{enterprise}/code-security/configurations/defaults"],getRepositoriesForConfiguration:["GET /orgs/{org}/code-security/configurations/{configuration_id}/repositories"],getRepositoriesForEnterpriseConfiguration:["GET /enterprises/{enterprise}/code-security/configurations/{configuration_id}/repositories"],getSingleConfigurationForEnterprise:["GET /enterprises/{enterprise}/code-security/configurations/{configuration_id}"],setConfigurationAsDefault:["PUT /orgs/{org}/code-security/configurations/{configuration_id}/defaults"],setConfigurationAsDefaultForEnterprise:["PUT /enterprises/{enterprise}/code-security/configurations/{configuration_id}/defaults"],updateConfiguration:["PATCH /orgs/{org}/code-security/configurations/{configuration_id}"],updateEnterpriseConfiguration:["PATCH /enterprises/{enterprise}/code-security/configurations/{configuration_id}"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct"],getConductCode:["GET /codes_of_conduct/{key}"]},codespaces:{addRepositoryForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],checkPermissionsForDevcontainer:["GET /repos/{owner}/{repo}/codespaces/permissions_check"],codespaceMachinesForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/machines"],createForAuthenticatedUser:["POST /user/codespaces"],createOrUpdateOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],createOrUpdateSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}"],createWithPrForAuthenticatedUser:["POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"],createWithRepoForAuthenticatedUser:["POST /repos/{owner}/{repo}/codespaces"],deleteForAuthenticatedUser:["DELETE /user/codespaces/{codespace_name}"],deleteFromOrganization:["DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"],deleteOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],deleteSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}"],exportForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/exports"],getCodespacesForUserInOrg:["GET /orgs/{org}/members/{username}/codespaces"],getExportDetailsForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/exports/{export_id}"],getForAuthenticatedUser:["GET /user/codespaces/{codespace_name}"],getOrgPublicKey:["GET /orgs/{org}/codespaces/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}"],getPublicKeyForAuthenticatedUser:["GET /user/codespaces/secrets/public-key"],getRepoPublicKey:["GET /repos/{owner}/{repo}/codespaces/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],getSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}"],listDevcontainersInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/devcontainers"],listForAuthenticatedUser:["GET /user/codespaces"],listInOrganization:["GET /orgs/{org}/codespaces",{},{renamedParameters:{org_id:"org"}}],listInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces"],listOrgSecrets:["GET /orgs/{org}/codespaces/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/codespaces/secrets"],listRepositoriesForSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}/repositories"],listSecretsForAuthenticatedUser:["GET /user/codespaces/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],preFlightWithRepoForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/new"],publishForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/publish"],removeRepositoryForSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],repoMachinesForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/machines"],setRepositoriesForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],startForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/start"],stopForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/stop"],stopInOrganization:["POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"],updateForAuthenticatedUser:["PATCH /user/codespaces/{codespace_name}"]},copilot:{addCopilotSeatsForTeams:["POST /orgs/{org}/copilot/billing/selected_teams"],addCopilotSeatsForUsers:["POST /orgs/{org}/copilot/billing/selected_users"],cancelCopilotSeatAssignmentForTeams:["DELETE /orgs/{org}/copilot/billing/selected_teams"],cancelCopilotSeatAssignmentForUsers:["DELETE /orgs/{org}/copilot/billing/selected_users"],copilotMetricsForOrganization:["GET /orgs/{org}/copilot/metrics"],copilotMetricsForTeam:["GET /orgs/{org}/team/{team_slug}/copilot/metrics"],getCopilotOrganizationDetails:["GET /orgs/{org}/copilot/billing"],getCopilotSeatDetailsForUser:["GET /orgs/{org}/members/{username}/copilot"],listCopilotSeats:["GET /orgs/{org}/copilot/billing/seats"],usageMetricsForOrg:["GET /orgs/{org}/copilot/usage"],usageMetricsForTeam:["GET /orgs/{org}/team/{team_slug}/copilot/usage"]},dependabot:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],deleteOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],getAlert:["GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],getOrgPublicKey:["GET /orgs/{org}/dependabot/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}"],getRepoPublicKey:["GET /repos/{owner}/{repo}/dependabot/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/dependabot/alerts"],listAlertsForOrg:["GET /orgs/{org}/dependabot/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/dependabot/alerts"],listOrgSecrets:["GET /orgs/{org}/dependabot/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/dependabot/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],updateAlert:["PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"]},dependencyGraph:{createRepositorySnapshot:["POST /repos/{owner}/{repo}/dependency-graph/snapshots"],diffRange:["GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"],exportSbom:["GET /repos/{owner}/{repo}/dependency-graph/sbom"]},emojis:{get:["GET /emojis"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},hostedCompute:{createNetworkConfigurationForOrg:["POST /orgs/{org}/settings/network-configurations"],deleteNetworkConfigurationFromOrg:["DELETE /orgs/{org}/settings/network-configurations/{network_configuration_id}"],getNetworkConfigurationForOrg:["GET /orgs/{org}/settings/network-configurations/{network_configuration_id}"],getNetworkSettingsForOrg:["GET /orgs/{org}/settings/network-settings/{network_settings_id}"],listNetworkConfigurationsForOrg:["GET /orgs/{org}/settings/network-configurations"],updateNetworkConfigurationForOrg:["PATCH /orgs/{org}/settings/network-configurations/{network_configuration_id}"]},interactions:{getRestrictionsForAuthenticatedUser:["GET /user/interaction-limits"],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits",{},{renamed:["interactions","getRestrictionsForAuthenticatedUser"]}],removeRestrictionsForAuthenticatedUser:["DELETE /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits",{},{renamed:["interactions","removeRestrictionsForAuthenticatedUser"]}],setRestrictionsForAuthenticatedUser:["PUT /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits",{},{renamed:["interactions","setRestrictionsForAuthenticatedUser"]}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],addSubIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/sub_issues"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],checkUserCanBeAssignedToIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],listSubIssues:["GET /repos/{owner}/{repo}/issues/{issue_number}/sub_issues"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],removeSubIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/sub_issue"],reprioritizeSubIssue:["PATCH /repos/{owner}/{repo}/issues/{issue_number}/sub_issues/priority"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getAllVersions:["GET /versions"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive"],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive"],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive"],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}"],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}"],listForAuthenticatedUser:["GET /user/migrations"],listForOrg:["GET /orgs/{org}/migrations"],listReposForAuthenticatedUser:["GET /user/migrations/{migration_id}/repositories"],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories"],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{},{renamed:["migrations","listReposForAuthenticatedUser"]}],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"]},oidc:{getOidcCustomSubTemplateForOrg:["GET /orgs/{org}/actions/oidc/customization/sub"],updateOidcCustomSubTemplateForOrg:["PUT /orgs/{org}/actions/oidc/customization/sub"]},orgs:{addSecurityManagerTeam:["PUT /orgs/{org}/security-managers/teams/{team_slug}",{},{deprecated:"octokit.rest.orgs.addSecurityManagerTeam() is deprecated, see https://docs.github.com/rest/orgs/security-managers#add-a-security-manager-team"}],assignTeamToOrgRole:["PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],assignUserToOrgRole:["PUT /orgs/{org}/organization-roles/users/{username}/{role_id}"],blockUser:["PUT /orgs/{org}/blocks/{username}"],cancelInvitation:["DELETE /orgs/{org}/invitations/{invitation_id}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createInvitation:["POST /orgs/{org}/invitations"],createIssueType:["POST /orgs/{org}/issue-types"],createOrUpdateCustomProperties:["PATCH /orgs/{org}/properties/schema"],createOrUpdateCustomPropertiesValuesForRepos:["PATCH /orgs/{org}/properties/values"],createOrUpdateCustomProperty:["PUT /orgs/{org}/properties/schema/{custom_property_name}"],createWebhook:["POST /orgs/{org}/hooks"],delete:["DELETE /orgs/{org}"],deleteIssueType:["DELETE /orgs/{org}/issue-types/{issue_type_id}"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],enableOrDisableSecurityProductOnAllOrgRepos:["POST /orgs/{org}/{security_product}/{enablement}",{},{deprecated:"octokit.rest.orgs.enableOrDisableSecurityProductOnAllOrgRepos() is deprecated, see https://docs.github.com/rest/orgs/orgs#enable-or-disable-a-security-feature-for-an-organization"}],get:["GET /orgs/{org}"],getAllCustomProperties:["GET /orgs/{org}/properties/schema"],getCustomProperty:["GET /orgs/{org}/properties/schema/{custom_property_name}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getOrgRole:["GET /orgs/{org}/organization-roles/{role_id}"],getOrgRulesetHistory:["GET /orgs/{org}/rulesets/{ruleset_id}/history"],getOrgRulesetVersion:["GET /orgs/{org}/rulesets/{ruleset_id}/history/{version_id}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listAttestations:["GET /orgs/{org}/attestations/{subject_digest}"],listBlockedUsers:["GET /orgs/{org}/blocks"],listCustomPropertiesValuesForRepos:["GET /orgs/{org}/properties/values"],listFailedInvitations:["GET /orgs/{org}/failed_invitations"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listIssueTypes:["GET /orgs/{org}/issue-types"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOrgRoleTeams:["GET /orgs/{org}/organization-roles/{role_id}/teams"],listOrgRoleUsers:["GET /orgs/{org}/organization-roles/{role_id}/users"],listOrgRoles:["GET /orgs/{org}/organization-roles"],listOrganizationFineGrainedPermissions:["GET /orgs/{org}/organization-fine-grained-permissions"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPatGrantRepositories:["GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories"],listPatGrantRequestRepositories:["GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories"],listPatGrantRequests:["GET /orgs/{org}/personal-access-token-requests"],listPatGrants:["GET /orgs/{org}/personal-access-tokens"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listSecurityManagerTeams:["GET /orgs/{org}/security-managers",{},{deprecated:"octokit.rest.orgs.listSecurityManagerTeams() is deprecated, see https://docs.github.com/rest/orgs/security-managers#list-security-manager-teams"}],listWebhookDeliveries:["GET /orgs/{org}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /orgs/{org}/hooks"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeCustomProperty:["DELETE /orgs/{org}/properties/schema/{custom_property_name}"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],removeSecurityManagerTeam:["DELETE /orgs/{org}/security-managers/teams/{team_slug}",{},{deprecated:"octokit.rest.orgs.removeSecurityManagerTeam() is deprecated, see https://docs.github.com/rest/orgs/security-managers#remove-a-security-manager-team"}],reviewPatGrantRequest:["POST /orgs/{org}/personal-access-token-requests/{pat_request_id}"],reviewPatGrantRequestsInBulk:["POST /orgs/{org}/personal-access-token-requests"],revokeAllOrgRolesTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}"],revokeAllOrgRolesUser:["DELETE /orgs/{org}/organization-roles/users/{username}"],revokeOrgRoleTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],revokeOrgRoleUser:["DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateIssueType:["PUT /orgs/{org}/issue-types/{issue_type_id}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updatePatAccess:["POST /orgs/{org}/personal-access-tokens/{pat_id}"],updatePatAccesses:["POST /orgs/{org}/personal-access-tokens"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},packages:{deletePackageForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}"],deletePackageForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],deletePackageForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}"],deletePackageVersionForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getAllPackageVersionsForAPackageOwnedByAnOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByOrg"]}],getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByAuthenticatedUser"]}],getAllPackageVersionsForPackageOwnedByAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions"],getPackageForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}"],getPackageForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}"],getPackageForUser:["GET /users/{username}/packages/{package_type}/{package_name}"],getPackageVersionForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],listDockerMigrationConflictingPackagesForAuthenticatedUser:["GET /user/docker/conflicts"],listDockerMigrationConflictingPackagesForOrganization:["GET /orgs/{org}/docker/conflicts"],listDockerMigrationConflictingPackagesForUser:["GET /users/{username}/docker/conflicts"],listPackagesForAuthenticatedUser:["GET /user/packages"],listPackagesForOrganization:["GET /orgs/{org}/packages"],listPackagesForUser:["GET /users/{username}/packages"],restorePackageForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForUser:["POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageVersionForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForUser:["POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"]},privateRegistries:{createOrgPrivateRegistry:["POST /orgs/{org}/private-registries"],deleteOrgPrivateRegistry:["DELETE /orgs/{org}/private-registries/{secret_name}"],getOrgPrivateRegistry:["GET /orgs/{org}/private-registries/{secret_name}"],getOrgPublicKey:["GET /orgs/{org}/private-registries/public-key"],listOrgPrivateRegistries:["GET /orgs/{org}/private-registries"],updateOrgPrivateRegistry:["PATCH /orgs/{org}/private-registries/{secret_name}"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}",{},{deprecated:"octokit.rest.projects.addCollaborator() is deprecated, see https://docs.github.com/rest/projects/collaborators#add-project-collaborator"}],createCard:["POST /projects/columns/{column_id}/cards",{},{deprecated:"octokit.rest.projects.createCard() is deprecated, see https://docs.github.com/rest/projects/cards#create-a-project-card"}],createColumn:["POST /projects/{project_id}/columns",{},{deprecated:"octokit.rest.projects.createColumn() is deprecated, see https://docs.github.com/rest/projects/columns#create-a-project-column"}],createForAuthenticatedUser:["POST /user/projects",{},{deprecated:"octokit.rest.projects.createForAuthenticatedUser() is deprecated, see https://docs.github.com/rest/projects/projects#create-a-user-project"}],createForOrg:["POST /orgs/{org}/projects",{},{deprecated:"octokit.rest.projects.createForOrg() is deprecated, see https://docs.github.com/rest/projects/projects#create-an-organization-project"}],createForRepo:["POST /repos/{owner}/{repo}/projects",{},{deprecated:"octokit.rest.projects.createForRepo() is deprecated, see https://docs.github.com/rest/projects/projects#create-a-repository-project"}],delete:["DELETE /projects/{project_id}",{},{deprecated:"octokit.rest.projects.delete() is deprecated, see https://docs.github.com/rest/projects/projects#delete-a-project"}],deleteCard:["DELETE /projects/columns/cards/{card_id}",{},{deprecated:"octokit.rest.projects.deleteCard() is deprecated, see https://docs.github.com/rest/projects/cards#delete-a-project-card"}],deleteColumn:["DELETE /projects/columns/{column_id}",{},{deprecated:"octokit.rest.projects.deleteColumn() is deprecated, see https://docs.github.com/rest/projects/columns#delete-a-project-column"}],get:["GET /projects/{project_id}",{},{deprecated:"octokit.rest.projects.get() is deprecated, see https://docs.github.com/rest/projects/projects#get-a-project"}],getCard:["GET /projects/columns/cards/{card_id}",{},{deprecated:"octokit.rest.projects.getCard() is deprecated, see https://docs.github.com/rest/projects/cards#get-a-project-card"}],getColumn:["GET /projects/columns/{column_id}",{},{deprecated:"octokit.rest.projects.getColumn() is deprecated, see https://docs.github.com/rest/projects/columns#get-a-project-column"}],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission",{},{deprecated:"octokit.rest.projects.getPermissionForUser() is deprecated, see https://docs.github.com/rest/projects/collaborators#get-project-permission-for-a-user"}],listCards:["GET /projects/columns/{column_id}/cards",{},{deprecated:"octokit.rest.projects.listCards() is deprecated, see https://docs.github.com/rest/projects/cards#list-project-cards"}],listCollaborators:["GET /projects/{project_id}/collaborators",{},{deprecated:"octokit.rest.projects.listCollaborators() is deprecated, see https://docs.github.com/rest/projects/collaborators#list-project-collaborators"}],listColumns:["GET /projects/{project_id}/columns",{},{deprecated:"octokit.rest.projects.listColumns() is deprecated, see https://docs.github.com/rest/projects/columns#list-project-columns"}],listForOrg:["GET /orgs/{org}/projects",{},{deprecated:"octokit.rest.projects.listForOrg() is deprecated, see https://docs.github.com/rest/projects/projects#list-organization-projects"}],listForRepo:["GET /repos/{owner}/{repo}/projects",{},{deprecated:"octokit.rest.projects.listForRepo() is deprecated, see https://docs.github.com/rest/projects/projects#list-repository-projects"}],listForUser:["GET /users/{username}/projects",{},{deprecated:"octokit.rest.projects.listForUser() is deprecated, see https://docs.github.com/rest/projects/projects#list-user-projects"}],moveCard:["POST /projects/columns/cards/{card_id}/moves",{},{deprecated:"octokit.rest.projects.moveCard() is deprecated, see https://docs.github.com/rest/projects/cards#move-a-project-card"}],moveColumn:["POST /projects/columns/{column_id}/moves",{},{deprecated:"octokit.rest.projects.moveColumn() is deprecated, see https://docs.github.com/rest/projects/columns#move-a-project-column"}],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}",{},{deprecated:"octokit.rest.projects.removeCollaborator() is deprecated, see https://docs.github.com/rest/projects/collaborators#remove-user-as-a-collaborator"}],update:["PATCH /projects/{project_id}",{},{deprecated:"octokit.rest.projects.update() is deprecated, see https://docs.github.com/rest/projects/projects#update-a-project"}],updateCard:["PATCH /projects/columns/cards/{card_id}",{},{deprecated:"octokit.rest.projects.updateCard() is deprecated, see https://docs.github.com/rest/projects/cards#update-an-existing-project-card"}],updateColumn:["PATCH /projects/columns/{column_id}",{},{deprecated:"octokit.rest.projects.updateColumn() is deprecated, see https://docs.github.com/rest/projects/columns#update-an-existing-project-column"}]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],createForRelease:["POST /repos/{owner}/{repo}/releases/{release_id}/reactions"],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"],deleteForRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],listForRelease:["GET /repos/{owner}/{repo}/releases/{release_id}/reactions"],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}",{},{renamed:["repos","acceptInvitationForAuthenticatedUser"]}],acceptInvitationForAuthenticatedUser:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],cancelPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel"],checkAutomatedSecurityFixes:["GET /repos/{owner}/{repo}/automated-security-fixes"],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkPrivateVulnerabilityReporting:["GET /repos/{owner}/{repo}/private-vulnerability-reporting"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts"],codeownersErrors:["GET /repos/{owner}/{repo}/codeowners/errors"],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],compareCommitsWithBasehead:["GET /repos/{owner}/{repo}/compare/{basehead}"],createAttestation:["POST /repos/{owner}/{repo}/attestations"],createAutolink:["POST /repos/{owner}/{repo}/autolinks"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentBranchPolicy:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],createDeploymentProtectionRule:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateCustomPropertiesValues:["PATCH /repos/{owner}/{repo}/properties/values"],createOrUpdateEnvironment:["PUT /repos/{owner}/{repo}/environments/{environment_name}"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createOrgRuleset:["POST /orgs/{org}/rulesets"],createPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments"],createPagesSite:["POST /repos/{owner}/{repo}/pages"],createRelease:["POST /repos/{owner}/{repo}/releases"],createRepoRuleset:["POST /repos/{owner}/{repo}/rulesets"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate"],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}",{},{renamed:["repos","declineInvitationForAuthenticatedUser"]}],declineInvitationForAuthenticatedUser:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteAnEnvironment:["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],deleteAutolink:["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteDeploymentBranchPolicy:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deleteOrgRuleset:["DELETE /orgs/{org}/rulesets/{ruleset_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages"],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteRepoRuleset:["DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes"],disableDeploymentProtectionRule:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],disablePrivateVulnerabilityReporting:["DELETE /repos/{owner}/{repo}/private-vulnerability-reporting"],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts"],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes"],enablePrivateVulnerabilityReporting:["PUT /repos/{owner}/{repo}/private-vulnerability-reporting"],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts"],generateReleaseNotes:["POST /repos/{owner}/{repo}/releases/generate-notes"],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllDeploymentProtectionRules:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],getAllEnvironments:["GET /repos/{owner}/{repo}/environments"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics"],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getAutolink:["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getBranchRules:["GET /repos/{owner}/{repo}/rules/branches/{branch}"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getCustomDeploymentProtectionRule:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],getCustomPropertiesValues:["GET /repos/{owner}/{repo}/properties/values"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentBranchPolicy:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getEnvironment:["GET /repos/{owner}/{repo}/environments/{environment_name}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getOrgRuleSuite:["GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}"],getOrgRuleSuites:["GET /orgs/{org}/rulesets/rule-suites"],getOrgRuleset:["GET /orgs/{org}/rulesets/{ruleset_id}"],getOrgRulesets:["GET /orgs/{org}/rulesets"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getPagesDeployment:["GET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}"],getPagesHealthCheck:["GET /repos/{owner}/{repo}/pages/health"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getReadmeInDirectory:["GET /repos/{owner}/{repo}/readme/{dir}"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getRepoRuleSuite:["GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}"],getRepoRuleSuites:["GET /repos/{owner}/{repo}/rulesets/rule-suites"],getRepoRuleset:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}"],getRepoRulesetHistory:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}/history"],getRepoRulesetVersion:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}/history/{version_id}"],getRepoRulesets:["GET /repos/{owner}/{repo}/rulesets"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"],listActivities:["GET /repos/{owner}/{repo}/activity"],listAttestations:["GET /repos/{owner}/{repo}/attestations/{subject_digest}"],listAutolinks:["GET /repos/{owner}/{repo}/autolinks"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listCustomDeploymentRuleIntegrations:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentBranchPolicies:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhookDeliveries:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],mergeUpstream:["POST /repos/{owner}/{repo}/merge-upstream"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],renameBranch:["POST /repos/{owner}/{repo}/branches/{branch}/rename"],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics"],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateDeploymentBranchPolicy:["PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updateOrgRuleset:["PUT /orgs/{org}/rulesets/{ruleset_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateRepoRuleset:["PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits"],issuesAndPullRequests:["GET /search/issues",{},{deprecated:"octokit.rest.search.issuesAndPullRequests() is deprecated, see https://docs.github.com/rest/search/search#search-issues-and-pull-requests"}],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics"],users:["GET /search/users"]},secretScanning:{createPushProtectionBypass:["POST /repos/{owner}/{repo}/secret-scanning/push-protection-bypasses"],getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],getScanHistory:["GET /repos/{owner}/{repo}/secret-scanning/scan-history"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/secret-scanning/alerts"],listAlertsForOrg:["GET /orgs/{org}/secret-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],listLocationsForAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},securityAdvisories:{createFork:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks"],createPrivateVulnerabilityReport:["POST /repos/{owner}/{repo}/security-advisories/reports"],createRepositoryAdvisory:["POST /repos/{owner}/{repo}/security-advisories"],createRepositoryAdvisoryCveRequest:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve"],getGlobalAdvisory:["GET /advisories/{ghsa_id}"],getRepositoryAdvisory:["GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}"],listGlobalAdvisories:["GET /advisories"],listOrgRepositoryAdvisories:["GET /orgs/{org}/security-advisories"],listRepositoryAdvisories:["GET /repos/{owner}/{repo}/security-advisories"],updateRepositoryAdvisory:["PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}",{},{deprecated:"octokit.rest.teams.addOrUpdateProjectPermissionsInOrg() is deprecated, see https://docs.github.com/rest/teams/teams#add-or-update-team-project-permissions"}],addOrUpdateProjectPermissionsLegacy:["PUT /teams/{team_id}/projects/{project_id}",{},{deprecated:"octokit.rest.teams.addOrUpdateProjectPermissionsLegacy() is deprecated, see https://docs.github.com/rest/teams/teams#add-or-update-team-project-permissions-legacy"}],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}",{},{deprecated:"octokit.rest.teams.checkPermissionsForProjectInOrg() is deprecated, see https://docs.github.com/rest/teams/teams#check-team-permissions-for-a-project"}],checkPermissionsForProjectLegacy:["GET /teams/{team_id}/projects/{project_id}",{},{deprecated:"octokit.rest.teams.checkPermissionsForProjectLegacy() is deprecated, see https://docs.github.com/rest/teams/teams#check-team-permissions-for-a-project-legacy"}],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects",{},{deprecated:"octokit.rest.teams.listProjectsInOrg() is deprecated, see https://docs.github.com/rest/teams/teams#list-team-projects"}],listProjectsLegacy:["GET /teams/{team_id}/projects",{},{deprecated:"octokit.rest.teams.listProjectsLegacy() is deprecated, see https://docs.github.com/rest/teams/teams#list-team-projects-legacy"}],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}",{},{deprecated:"octokit.rest.teams.removeProjectInOrg() is deprecated, see https://docs.github.com/rest/teams/teams#remove-a-project-from-a-team"}],removeProjectLegacy:["DELETE /teams/{team_id}/projects/{project_id}",{},{deprecated:"octokit.rest.teams.removeProjectLegacy() is deprecated, see https://docs.github.com/rest/teams/teams#remove-a-project-from-a-team-legacy"}],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails",{},{renamed:["users","addEmailForAuthenticatedUser"]}],addEmailForAuthenticatedUser:["POST /user/emails"],addSocialAccountForAuthenticatedUser:["POST /user/social_accounts"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys",{},{renamed:["users","createGpgKeyForAuthenticatedUser"]}],createGpgKeyForAuthenticatedUser:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys",{},{renamed:["users","createPublicSshKeyForAuthenticatedUser"]}],createPublicSshKeyForAuthenticatedUser:["POST /user/keys"],createSshSigningKeyForAuthenticatedUser:["POST /user/ssh_signing_keys"],deleteEmailForAuthenticated:["DELETE /user/emails",{},{renamed:["users","deleteEmailForAuthenticatedUser"]}],deleteEmailForAuthenticatedUser:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","deleteGpgKeyForAuthenticatedUser"]}],deleteGpgKeyForAuthenticatedUser:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}",{},{renamed:["users","deletePublicSshKeyForAuthenticatedUser"]}],deletePublicSshKeyForAuthenticatedUser:["DELETE /user/keys/{key_id}"],deleteSocialAccountForAuthenticatedUser:["DELETE /user/social_accounts"],deleteSshSigningKeyForAuthenticatedUser:["DELETE /user/ssh_signing_keys/{ssh_signing_key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getById:["GET /user/{account_id}"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","getGpgKeyForAuthenticatedUser"]}],getGpgKeyForAuthenticatedUser:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}",{},{renamed:["users","getPublicSshKeyForAuthenticatedUser"]}],getPublicSshKeyForAuthenticatedUser:["GET /user/keys/{key_id}"],getSshSigningKeyForAuthenticatedUser:["GET /user/ssh_signing_keys/{ssh_signing_key_id}"],list:["GET /users"],listAttestations:["GET /users/{username}/attestations/{subject_digest}"],listBlockedByAuthenticated:["GET /user/blocks",{},{renamed:["users","listBlockedByAuthenticatedUser"]}],listBlockedByAuthenticatedUser:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails",{},{renamed:["users","listEmailsForAuthenticatedUser"]}],listEmailsForAuthenticatedUser:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following",{},{renamed:["users","listFollowedByAuthenticatedUser"]}],listFollowedByAuthenticatedUser:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys",{},{renamed:["users","listGpgKeysForAuthenticatedUser"]}],listGpgKeysForAuthenticatedUser:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails",{},{renamed:["users","listPublicEmailsForAuthenticatedUser"]}],listPublicEmailsForAuthenticatedUser:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys",{},{renamed:["users","listPublicSshKeysForAuthenticatedUser"]}],listPublicSshKeysForAuthenticatedUser:["GET /user/keys"],listSocialAccountsForAuthenticatedUser:["GET /user/social_accounts"],listSocialAccountsForUser:["GET /users/{username}/social_accounts"],listSshSigningKeysForAuthenticatedUser:["GET /user/ssh_signing_keys"],listSshSigningKeysForUser:["GET /users/{username}/ssh_signing_keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility",{},{renamed:["users","setPrimaryEmailVisibilityForAuthenticatedUser"]}],setPrimaryEmailVisibilityForAuthenticatedUser:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}},K8=w7;var j$=new Map;for(let[$,J]of Object.entries(K8))for(let[X,Q]of Object.entries(J)){let[Y,G,W]=Q,[H,z]=Y.split(/ /),B=Object.assign({method:H,url:z},G);if(!j$.has($))j$.set($,new Map);j$.get($).set(X,{scope:$,methodName:X,endpointDefaults:B,decorations:W})}var R7={has({scope:$},J){return j$.get($).has(J)},getOwnPropertyDescriptor($,J){return{value:this.get($,J),configurable:!0,writable:!0,enumerable:!0}},defineProperty($,J,X){return Object.defineProperty($.cache,J,X),!0},deleteProperty($,J){return delete $.cache[J],!0},ownKeys({scope:$}){return[...j$.get($).keys()]},set($,J,X){return $.cache[J]=X},get({octokit:$,scope:J,cache:X},Q){if(X[Q])return X[Q];let Y=j$.get(J).get(Q);if(!Y)return;let{endpointDefaults:G,decorations:W}=Y;if(W)X[Q]=O7($,J,Q,G,W);else X[Q]=$.request.defaults(G);return X[Q]}};function A6($){let J={};for(let X of j$.keys())J[X]=new Proxy({octokit:$,scope:X,cache:{}},R7);return J}function O7($,J,X,Q,Y){let G=$.request.defaults(Q);function W(...H){let z=G.endpoint.merge(...H);if(Y.mapToData)return z=Object.assign({},z,{data:z[Y.mapToData],[Y.mapToData]:void 0}),G(z);if(Y.renamed){let[B,U]=Y.renamed;$.log.warn(`octokit.${J}.${X}() has been renamed to octokit.${B}.${U}()`)}if(Y.deprecated)$.log.warn(Y.deprecated);if(Y.renamedParameters){let B=G.endpoint.merge(...H);for(let[U,M]of Object.entries(Y.renamedParameters))if(U in B){if($.log.warn(`"${U}" parameter is deprecated for "octokit.${J}.${X}()". Use "${M}" instead`),!(M in B))B[M]=B[U];delete B[U]}return G(B)}return G(...H)}return Object.assign(W,G)}function D7($){return{rest:A6($)}}D7.VERSION=D6;function L6($){let J=A6($);return{...J,rest:J}}L6.VERSION=D6;var w8="21.1.1";var R8=K6.plugin(w6,L6,O6).defaults({userAgent:`octokit-rest.js/${w8}`});v();var v1=null;function p($){if(v1)return v1;let J=$?.repoToken||process.env.GITHUB_TOKEN;if(!J)throw q.error("No GitHub token found"),new Error("No GitHub token found. Please set GITHUB_TOKEN environment variable or provide repoToken in config.");return v1=new R8({auth:J,timeZone:"UTC"}),q.debug("GitHub API client created"),v1}async function b1($,J){try{let X=p(),{data:Q}=await X.repos.get({owner:$,repo:J});return{id:Q.id,name:Q.name,fullName:Q.full_name,owner:Q.owner.login,defaultBranch:Q.default_branch,language:Q.language,private:Q.private}}catch(X){throw q.error(`Error getting repository details for ${$}/${J}`,X),new Error(`Failed to get repository details: ${X instanceof Error?X.message:String(X)}`)}}async function O8($){try{q.info("Detecting issues for automation");let J=process.env.GITHUB_REPOSITORY||"",[X,Q]=J.split("/");if(!X||!Q)throw new Error("Repository information not available in environment variables");let Y=await b1(X,Q),G=[$.issueLabel];if(!$.issueLabel.includes("rsolv"))G.push("rsolv");let W=[],H=new Set;for(let B of G){let U=await A7(X,Q,B);for(let M of U)if(!H.has(M.id))H.add(M.id),W.push(M)}return q.info(`Found ${W.length} issues with labels: ${G.join(" or ")}`),W.map((B)=>({id:`github-${B.id}`,number:B.number,title:B.title,body:B.body||"",labels:B.labels.map((U)=>typeof U==="string"?U:U.name),assignees:B.assignees?.map((U)=>U.login)||[],repository:{owner:X,name:Q,fullName:J,defaultBranch:Y.defaultBranch,language:Y.language},source:"github",createdAt:B.created_at,updatedAt:B.updated_at,metadata:{htmlUrl:B.html_url,state:B.state,locked:B.locked,draft:B.draft}}))}catch(J){throw q.error("Error detecting issues",J),new Error(`Failed to detect issues: ${J instanceof Error?J.message:String(J)}`)}}async function A7($,J,X){try{let Q=p(),{data:Y}=await Q.issues.listForRepo({owner:$,repo:J,labels:X,state:"open",per_page:100});return Y.filter((W)=>!W.pull_request)}catch(Q){throw q.error(`Error getting issues with label ${X}`,Q),new Error(`Failed to get issues with label: ${Q instanceof Error?Q.message:String(Q)}`)}}v();class V1{autofixLabel;rsolvLabel;constructor($){this.autofixLabel=$.autofixLabel||"autofix",this.rsolvLabel=$.rsolvLabel||"rsolv"}validateConfig($,J){let X=J.filter((Q)=>!$[Q]);if(X.length>0)throw new Error(`Missing required configuration fields: ${X.join(", ")}`)}async makeRequest($,J={}){try{let X=await fetch($,{...J,headers:{...this.getAuthHeaders(),...J.headers}});if(!X.ok)throw new Error(`HTTP ${X.status}: ${X.statusText}`);return X}catch(X){throw q.error(`Platform API request failed: ${$}`,X),X}}hasRsolvLabels($){let J=$.map((X)=>X.toLowerCase());return J.includes(this.autofixLabel.toLowerCase())||J.includes(this.rsolvLabel.toLowerCase())}extractIssueId($){let J=[/^#?(\d+)$/,/^([A-Z]+-\d+)$/,/^([A-Z]+-\d+)$/i,/\/(\d+)\/?$/,/\/([A-Z]+-\d+)\/?$/i];for(let X of J){let Q=$.match(X);if(Q)return Q[1]}return $}formatError($,J){let X=J?.message||J?.toString()||"Unknown error";return`${$} failed: ${X}`}}v();class _6 extends V1{config;baseUrl;authHeader;constructor($){super($);this.config=$;this.validateConfig($,["host","email","apiToken"]),this.baseUrl=`https://${$.host}/rest/api/3`,this.authHeader=`Basic ${Buffer.from(`${$.email}:${$.apiToken}`).toString("base64")}`}getAuthHeaders(){return{Authorization:this.authHeader,Accept:"application/json","Content-Type":"application/json"}}async authenticate(){try{await this.makeRequest(`${this.baseUrl}/myself`),q.info("Successfully authenticated with Jira")}catch($){throw new Error(this.formatError("Jira authentication",$))}}async searchIssues($){try{return(await(await this.makeRequest(`${this.baseUrl}/search`,{method:"POST",body:JSON.stringify({jql:$,fields:["summary","description","labels","status","created","updated","assignee","reporter"]})})).json()).issues.map((Q)=>this.convertToUnifiedIssue(Q))}catch(J){throw new Error(this.formatError("Jira issue search",J))}}async getIssue($){try{let J=this.extractIssueId($),Q=await(await this.makeRequest(`${this.baseUrl}/issue/${J}`)).json();return this.convertToUnifiedIssue(Q)}catch(J){if(J.message?.includes("404"))return null;throw new Error(this.formatError("Get Jira issue",J))}}async createComment($,J){try{let X=this.extractIssueId($),Y=await(await this.makeRequest(`${this.baseUrl}/issue/${X}/comment`,{method:"POST",body:JSON.stringify({body:{type:"doc",version:1,content:[{type:"paragraph",content:[{type:"text",text:J}]}]}})})).json();return{id:Y.id,body:J,author:Y.author?.displayName||"Unknown",createdAt:new Date(Y.created)}}catch(X){return q.error("Failed to create Jira comment",X),null}}async updateIssueStatus($,J){try{let X=this.extractIssueId($),Q=await this.makeRequest(`${this.baseUrl}/issue/${X}/transitions`),{transitions:Y}=await Q.json(),G=Y.find((W)=>W.name===J);if(!G)return q.warn(`Status '${J}' not available for issue ${$}`),!1;return await this.makeRequest(`${this.baseUrl}/issue/${X}/transitions`,{method:"POST",body:JSON.stringify({transition:{id:G.id}})}),!0}catch(X){return q.error("Failed to update Jira issue status",X),!1}}async addLink($,J,X){try{let Q=this.extractIssueId($),Y=X||J;return{id:(await(await this.makeRequest(`${this.baseUrl}/issue/${Q}/remotelink`,{method:"POST",body:JSON.stringify({object:{url:J,title:Y,icon:{url16x16:J.includes("github.com")?"https://github.com/favicon.ico":void 0,title:J.includes("github.com")?"GitHub Pull Request":"External Link"}}})})).json()).id,url:J,title:Y,type:"external"}}catch(Q){return q.error("Failed to add link to Jira issue",Q),null}}async addLabel($,J){try{let X=this.extractIssueId($),G=(await(await this.makeRequest(`${this.baseUrl}/issue/${X}?fields=labels`)).json()).fields.labels||[];if(!G.includes(J))await this.makeRequest(`${this.baseUrl}/issue/${X}`,{method:"PUT",body:JSON.stringify({fields:{labels:[...G,J]}})});return!0}catch(X){return q.error("Failed to add label to Jira issue",X),!1}}convertToUnifiedIssue($){return{id:$.id,platform:"jira",key:$.key,title:$.fields.summary,description:$.fields.description||"",labels:$.fields.labels||[],status:$.fields.status.name,url:`https://${this.config.host}/browse/${$.key}`,createdAt:new Date($.fields.created),updatedAt:new Date($.fields.updated),assignee:$.fields.assignee?{id:$.fields.assignee.accountId,name:$.fields.assignee.displayName,email:$.fields.assignee.emailAddress}:void 0,reporter:$.fields.reporter?{id:$.fields.reporter.accountId,name:$.fields.reporter.displayName,email:$.fields.reporter.emailAddress}:void 0}}async searchAutofixIssues(){return this.searchIssues(`labels = "${this.autofixLabel}"`)}async searchRsolvIssues(){let $=`labels in ("${this.autofixLabel}", "${this.rsolvLabel}")`;return this.searchIssues($)}}v();class N6 extends V1{apiKey;baseUrl="https://api.linear.app/graphql";teamId;constructor($){super($);this.validateConfig($,["apiKey"]),this.apiKey=$.apiKey,this.teamId=$.teamId}getAuthHeaders(){return{Authorization:this.apiKey,"Content-Type":"application/json"}}async graphqlRequest($,J){try{let Q=await(await this.makeRequest(this.baseUrl,{method:"POST",body:JSON.stringify({query:$,variables:J})})).json();if(Q.errors)throw new Error(`Linear GraphQL error: ${JSON.stringify(Q.errors)}`);return Q.data}catch(X){throw new Error(this.formatError("Linear GraphQL request",X))}}async searchRsolvIssues(){let J={labels:{or:[{name:{eq:this.autofixLabel}},{name:{eq:this.rsolvLabel}}]}};if(this.teamId)J.team={id:{eq:this.teamId}};try{return(await this.graphqlRequest(`
      query SearchIssues($filter: IssueFilter) {
        issues(filter: $filter) {
          nodes {
            id
            identifier
            title
            description
            state {
              name
              type
            }
            labels {
              nodes {
                name
              }
            }
            assignee {
              name
              email
            }
            createdAt
            updatedAt
            url
          }
        }
      }
    `,{filter:J})).issues.nodes.map((Q)=>this.convertToUnifiedIssue(Q))}catch(X){throw q.error("Failed to search Linear issues:",X),X}}async getIssue($){try{let X=await this.graphqlRequest(`
      query GetIssue($id: String!) {
        issue(id: $id) {
          id
          identifier
          title
          description
          state {
            name
            type
          }
          labels {
            nodes {
              name
            }
          }
          assignee {
            name
            email
          }
          createdAt
          updatedAt
          url
        }
      }
    `,{id:$});return X.issue?this.convertToUnifiedIssue(X.issue):null}catch(X){return q.error(`Failed to get Linear issue ${$}:`,X),null}}async createComment($,J){try{let Q=await this.graphqlRequest(`
      mutation CreateComment($issueId: String!, $body: String!) {
        commentCreate(
          input: {
            issueId: $issueId
            body: $body
          }
        ) {
          success
          comment {
            id
            body
            user {
              name
              email
            }
            createdAt
          }
        }
      }
    `,{issueId:$,body:J});if(!Q.commentCreate.success)throw new Error("Failed to create comment");let Y=Q.commentCreate.comment;return{id:Y.id,body:Y.body,author:Y.user.name,createdAt:new Date(Y.createdAt)}}catch(Q){return q.error(`Failed to create comment on Linear issue ${$}:`,Q),null}}async addLink($,J,X){let Y=`\uD83D\uDD17 Related: ${X?`[${X}](${J})`:J}`,G=await this.createComment($,Y);if(!G)return null;return{id:G.id,url:J,title:X||J,type:"external"}}async updateIssueStatus($,J){try{let Q=await this.graphqlRequest(`
      query GetStates($name: String!) {
        workflowStates(filter: { name: { eq: $name } }) {
          nodes {
            id
            name
            type
          }
        }
      }
    `,{name:J});if(Q.workflowStates.nodes.length===0)return q.error(`No Linear state found with name: ${J}`),!1;let Y=Q.workflowStates.nodes[0].id,G=`
        mutation UpdateIssue($issueId: String!, $stateId: String!) {
          issueUpdate(
            id: $issueId
            input: { stateId: $stateId }
          ) {
            success
          }
        }
      `;return(await this.graphqlRequest(G,{issueId:$,stateId:Y})).issueUpdate.success}catch(Q){return q.error(`Failed to update Linear issue ${$} status:`,Q),!1}}async addLabel($,J){try{let Q=await this.graphqlRequest(`
      query GetLabel($name: String!) {
        issueLabels(filter: { name: { eq: $name } }) {
          nodes {
            id
            name
          }
        }
      }
    `,{name:J}),Y;if(Q.issueLabels.nodes.length===0){let z=await this.graphqlRequest(`
          mutation CreateLabel($name: String!) {
            issueLabelCreate(
              input: { name: $name }
            ) {
              success
              issueLabel {
                id
              }
            }
          }
        `,{name:J});if(!z.issueLabelCreate.success)return!1;Y=z.issueLabelCreate.issueLabel.id}else Y=Q.issueLabels.nodes[0].id;let G=`
        mutation AddLabel($issueId: String!, $labelId: String!) {
          issueAddLabel(
            id: $issueId
            labelId: $labelId
          ) {
            success
          }
        }
      `;return(await this.graphqlRequest(G,{issueId:$,labelId:Y})).issueAddLabel.success}catch(Q){return q.error(`Failed to add label to Linear issue ${$}:`,Q),!1}}convertToUnifiedIssue($){return{id:$.id,platform:"linear",key:$.identifier,title:$.title,description:$.description||"",labels:$.labels.nodes.map((J)=>J.name),status:$.state.name,statusCategory:this.mapLinearStateType($.state.type),assignee:$.assignee?.name,createdAt:new Date($.createdAt),updatedAt:new Date($.updatedAt),url:$.url}}mapLinearStateType($){switch($.toLowerCase()){case"backlog":case"unstarted":return"todo";case"started":case"in_progress":return"in_progress";case"completed":case"done":case"canceled":return"done";default:return"todo"}}}class f1{static create($,J){switch($){case"jira":if(!J.jira)throw new Error("Jira configuration is required");return new _6(J.jira);case"linear":if(!J.linear)throw new Error("Linear configuration is required");return new N6(J.linear);case"gitlab":throw new Error("GitLab integration not yet implemented");default:throw new Error(`Unsupported platform: ${$}`)}}}async function D8($){let J=[];try{let X=await O8($);J.push(...X),q.info(`Found ${X.length} GitHub issues`)}catch(X){q.error("Error detecting GitHub issues",X)}if(process.env.JIRA_HOST&&process.env.JIRA_EMAIL&&process.env.JIRA_API_TOKEN)try{let X=await L7($);J.push(...X),q.info(`Found ${X.length} Jira issues`)}catch(X){q.error("Error detecting Jira issues",X)}if(process.env.LINEAR_API_KEY)try{let X=await _7($);J.push(...X),q.info(`Found ${X.length} Linear issues`)}catch(X){q.error("Error detecting Linear issues",X)}if(process.env.GITLAB_TOKEN)q.info("GitLab integration not yet implemented");return q.info(`Total issues found across all platforms: ${J.length}`),J}async function L7($){let J={jira:{host:process.env.JIRA_HOST,email:process.env.JIRA_EMAIL,apiToken:process.env.JIRA_API_TOKEN,autofixLabel:process.env.JIRA_AUTOFIX_LABEL||"autofix",rsolvLabel:process.env.JIRA_RSOLV_LABEL||"rsolv"}},X=f1.create("jira",J),Q;if(process.env.JIRA_JQL)Q=await X.searchIssues(process.env.JIRA_JQL);else Q=await X.searchRsolvIssues();return q.info(`Found ${Q.length} Jira issues with rsolv/autofix labels`),Q.map((Y)=>A8(Y))}async function _7($){let J={linear:{apiKey:process.env.LINEAR_API_KEY,teamId:process.env.LINEAR_TEAM_ID,autofixLabel:process.env.LINEAR_AUTOFIX_LABEL||"autofix",rsolvLabel:process.env.LINEAR_RSOLV_LABEL||"rsolv"}},Q=await f1.create("linear",J).searchRsolvIssues();return q.info(`Found ${Q.length} Linear issues with rsolv/autofix labels`),Q.map((Y)=>A8(Y))}function A8($){let J=N7($);return{id:$.id,number:parseInt($.key?.split("-")[1]||"0"),title:$.title,body:$.description,labels:$.labels,assignees:$.assignee?[typeof $.assignee==="string"?$.assignee:$.assignee.name]:[],repository:J||{owner:"unknown",name:"unknown",fullName:"unknown/unknown",defaultBranch:"main",language:"unknown"},source:$.platform,createdAt:$.createdAt.toISOString(),updatedAt:$.updatedAt.toISOString(),metadata:{htmlUrl:$.url,state:$.status,locked:!1,draft:!1,platformKey:$.key}}}function N7($){let X=/https?:\/\/github\.com\/([^/]+)\/([^/\s]+)/g.exec($.description);if(X){let[,Q,Y]=X;return{owner:Q,name:Y,fullName:`${Q}/${Y}`,defaultBranch:"main",language:"unknown"}}if($.customFields?.githubRepository){let[Q,Y]=$.customFields.githubRepository.split("/");return{owner:Q,name:Y,fullName:$.customFields.githubRepository,defaultBranch:$.customFields.githubDefaultBranch||"main",language:$.customFields.githubLanguage||"unknown"}}return null}v();async function L8($){try{if(q.info("Performing security checks"),!S7($.apiKey))throw new Error("Invalid API key");return q.debug("API key validated"),await j7(),q.debug("Repository permissions verified"),E7($),q.debug("No sensitive data found in configuration"),I7($.securitySettings),q.debug("Security settings validated"),q.info("All security checks passed"),!0}catch(J){throw q.error("Security check failed",J),new Error(`Security check failed: ${J instanceof Error?J.message:String(J)}`)}}function S7($){if(!$)return q.error("API key is missing"),!1;if($==="rsolv-dev-key-123456789")return q.warn("Using development API key - not secure for production"),!0;let J=/^rsolv_(live|internal|test|prod)_[a-zA-Z0-9_-]+$/,X=/^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;if(!J.test($)&&!X.test($))return q.error("API key has invalid format"),!1;return!0}async function j7(){try{q.debug("Checking repository permissions"),await new Promise(($)=>setTimeout($,100)),q.debug("Repository permissions verified")}catch($){throw q.error("Repository permission check failed",$),new Error("Failed to verify repository permissions")}}function E7($){let J=JSON.stringify($),X=[/password\s*[:=]\s*["'](?!\\$).*["']/i,/secret\s*[:=]\s*["'](?!\\$).*["']/i,/access[_-]?token\s*[:=]\s*["'](?!\\$).*["']/i,/api[_-]?key\s*[:=]\s*["'](?!\\$).*["']/i,/private[_-]?key\s*[:=]\s*["'](?!\\$).*["']/i];for(let Q of X)if(Q.test(J))q.warn("Potential sensitive data found in configuration")}function I7($){if(!$){q.warn("No security settings provided, using defaults");return}if($.disableNetworkAccess===void 0)q.warn("Network access control not specified, defaulting to restricted");if($.preventSecretLeakage===!1)q.warn("Secret leakage prevention is disabled, this is not recommended");if($.timeoutSeconds&&(typeof $.timeoutSeconds!=="number"||$.timeoutSeconds<=0))throw q.error("Invalid timeout value in security settings"),new Error("Invalid timeout value in security settings");if($.maxFileSize&&(typeof $.maxFileSize!=="number"||$.maxFileSize<=0))throw q.error("Invalid max file size in security settings"),new Error("Invalid max file size in security settings")}v();v();I6();v();var V;((k)=>{k.SQL_INJECTION="sql_injection";k.XSS="xss";k.BROKEN_AUTHENTICATION="broken_authentication";k.SENSITIVE_DATA_EXPOSURE="sensitive_data_exposure";k.XML_EXTERNAL_ENTITIES="xml_external_entities";k.BROKEN_ACCESS_CONTROL="broken_access_control";k.SECURITY_MISCONFIGURATION="security_misconfiguration";k.INSECURE_DESERIALIZATION="insecure_deserialization";k.VULNERABLE_COMPONENTS="vulnerable_components";k.INSUFFICIENT_LOGGING="insufficient_logging";k.COMMAND_INJECTION="command_injection";k.PATH_TRAVERSAL="path_traversal";k.WEAK_CRYPTOGRAPHY="weak_cryptography";k.DEBUG_MODE="debug_mode";k.MASS_ASSIGNMENT="mass_assignment";k.OPEN_REDIRECT="open_redirect";k.HARDCODED_SECRETS="hardcoded_secrets";k.XPATH_INJECTION="xpath_injection";k.LDAP_INJECTION="ldap_injection";k.INSECURE_TRANSPORT="insecure_transport";k.UNVALIDATED_REDIRECT="unvalidated_redirect";k.PROTOTYPE_POLLUTION="prototype_pollution";k.SSRF="server_side_request_forgery";k.TYPE_CONFUSION="type_confusion";k.NULL_POINTER_DEREFERENCE="null_pointer_dereference";k.CSRF="cross_site_request_forgery";k.DENIAL_OF_SERVICE="denial_of_service";k.NOSQL_INJECTION="nosql_injection";k.INFORMATION_DISCLOSURE="information_disclosure";k.IMPROPER_INPUT_VALIDATION="improper_input_validation";k.TEMPLATE_INJECTION="template_injection"})(V||={});v();class y1{apiUrl;apiKey;cache=new Map;cacheTTL;fallbackToLocal;constructor($={}){let X=($.apiUrl||process.env.RSOLV_API_URL||"https://api.rsolv.dev").replace(/\/$/,"");if(this.apiUrl=X.includes("/api/v1/patterns")?X:`${X}/api/v1/patterns`,this.apiKey=$.apiKey||process.env.RSOLV_API_KEY,this.cacheTTL=($.cacheTTL||3600)*1000,this.fallbackToLocal=$.fallbackToLocal??!0,!this.apiKey)q.warn("No RSOLV API key provided - only demo patterns available")}async fetchPatterns($){let J=`${$}-${this.apiKey||"demo"}`,X=this.cache.get(J);if(X&&Date.now()-X.timestamp<this.cacheTTL)return q.info(`Using cached patterns for ${$} (${X.patterns.length} patterns)`),X.patterns;try{let Q={"Content-Type":"application/json"};if(this.apiKey)Q.Authorization=`Bearer ${this.apiKey}`;let Y=await fetch(`${this.apiUrl}?language=${$}&format=enhanced`,{headers:Q});if(!Y.ok)throw new Error(`Failed to fetch patterns: ${Y.status} ${Y.statusText}`);let G=await Y.json(),W=G.metadata?.count||G.count||G.patterns.length;q.info(`Fetched ${W} ${$} patterns from API`);let H=G.patterns.map((z)=>this.convertToSecurityPattern(z));return this.cache.set(J,{patterns:H,timestamp:Date.now()}),H}catch(Q){if(q.error(`Failed to fetch ${$} patterns from API:`,Q),this.fallbackToLocal)return q.warn(`Falling back to local patterns for ${$}`),[];throw Q}}async fetchPatternsByTier($,J){if(q.warn(`fetchPatternsByTier is deprecated. Tier '${$}' is ignored. Use fetchPatterns() instead.`),J)return this.fetchPatterns(J);try{return q.warn("fetchPatternsByTier called without language parameter. Returning empty array."),[]}catch(X){throw q.error("Failed to fetch patterns from API:",X),X}}convertToSecurityPattern($){let J=[];if(Array.isArray($.regex_patterns))J=$.regex_patterns;else if(Array.isArray($.patterns))J=$.patterns;else if($.patterns&&typeof $.patterns==="object"&&"regex"in $.patterns&&Array.isArray($.patterns.regex))J=$.patterns.regex;else q.warn(`Unexpected patterns format for ${$.id}:`,$.patterns),J=[];let X=J.map((Y)=>{try{let G=Y.match(/^\/(.*)\/([gimsuvy]*)$/);if(G)return new RegExp(G[1],G[2]);return new RegExp(Y)}catch(G){return q.warn(`Failed to compile regex for pattern ${$.id}: ${Y}`,G),null}}).filter(Boolean),Q=$.context_rules||void 0;return{id:$.id,name:$.name,type:this.mapVulnerabilityType($.type),severity:$.severity,description:$.description,patterns:{regex:X,ast:$.ast_rules?[JSON.stringify($.ast_rules)]:void 0},languages:$.languages,frameworks:$.frameworks||[],cweId:$.cwe_id||$.cweId||"",owaspCategory:$.owasp_category||$.owaspCategory||"",remediation:$.recommendation,examples:{vulnerable:$.test_cases?.vulnerable?.[0]||$.testCases?.vulnerable?.[0]||"",secure:$.test_cases?.safe?.[0]||$.testCases?.safe?.[0]||""},astRules:$.ast_rules,contextRules:Q,confidenceRules:$.confidence_rules,minConfidence:$.min_confidence}}mapVulnerabilityType($){return{sql_injection:"sql_injection",xss:"xss",command_injection:"command_injection",path_traversal:"path_traversal",xxe:V.XXE,ssrf:"server_side_request_forgery",insecure_deserialization:"insecure_deserialization",deserialization:"insecure_deserialization",weak_crypto:V.WEAK_CRYPTO,hardcoded_secret:V.HARDCODED_SECRET,insecure_random:V.INSECURE_RANDOM,open_redirect:"open_redirect",ldap_injection:"ldap_injection",xpath_injection:"xpath_injection",nosql_injection:"nosql_injection",rce:V.RCE,dos:V.DOS,denial_of_service:V.DOS,timing_attack:V.TIMING_ATTACK,csrf:"cross_site_request_forgery",jwt:V.JWT,authentication:V.JWT,debug:"information_disclosure",information_disclosure:"information_disclosure",cve:V.CVE,file_upload:"path_traversal",input_validation:"xss",session_management:"cross_site_request_forgery",resource_exhaustion:V.DOS}[$]||V.UNKNOWN}clearCache(){this.cache.clear(),q.info("Pattern cache cleared")}async checkHealth(){try{let $=await fetch(`${this.apiUrl}/health`,{method:"GET",headers:{"User-Agent":"RSOLV-Action/1.0"}});if($.ok)return{status:"healthy"};else return{status:"unhealthy",message:`API returned status ${$.status}`}}catch($){return{status:"unhealthy",message:$ instanceof Error?$.message:"Unknown error"}}}}var P6=[{id:"basic-sql-injection",name:"Basic SQL Injection",type:"sql_injection",severity:"high",description:"Potential SQL injection via string concatenation",patterns:{regex:[/["'`].*?(SELECT|INSERT|UPDATE|DELETE|DROP|CREATE|ALTER).*?["'`]\s*\+/gi,/execute\s*\(\s*['"`].*\+/gi]},languages:["javascript","typescript"],frameworks:[],cweId:"CWE-89",owaspCategory:"A03:2021",remediation:"Use parameterized queries or prepared statements",testCases:{vulnerable:[],safe:[]}},{id:"basic-xss",name:"Basic Cross-Site Scripting",type:"xss",severity:"high",description:"Potential XSS via innerHTML",patterns:{regex:[/innerHTML\s*=\s*[^'"`;]*(?:req\.|request\.)/gi,/document\.write\s*\(/gi]},languages:["javascript","typescript"],frameworks:[],cweId:"CWE-79",owaspCategory:"A03:2021",remediation:"Use textContent or proper encoding",testCases:{vulnerable:[],safe:[]}},{id:"basic-command-injection",name:"Basic Command Injection",type:"command_injection",severity:"critical",description:"Potential command injection",patterns:{regex:[/exec\s*\(\s*['"`].*\+/gi,/system\s*\(\s*['"`].*\+/gi]},languages:["javascript","python","ruby"],frameworks:[],cweId:"CWE-78",owaspCategory:"A03:2021",remediation:"Validate and sanitize all user input",testCases:{vulnerable:[],safe:[]}},{id:"basic-path-traversal",name:"Basic Path Traversal",type:"path_traversal",severity:"high",description:"Potential path traversal vulnerability",patterns:{regex:[/readFile\s*\([^)]*\.\.\/[^)]*\)/gi,/path\.join\s*\([^)]*req\./gi]},languages:["javascript","typescript"],frameworks:[],cweId:"CWE-22",owaspCategory:"A01:2021",remediation:"Validate and sanitize file paths",testCases:{vulnerable:[],safe:[]}},{id:"python-eval",name:"Python Eval Usage",type:V.RCE,severity:"critical",description:"Use of eval() with user input",patterns:{regex:[/eval\s*\(/gi,/exec\s*\(/gi]},languages:["python"],frameworks:[],cweId:"CWE-94",owaspCategory:"A03:2021",remediation:"Avoid eval(), use ast.literal_eval() for safe evaluation",testCases:{vulnerable:[],safe:[]}},{id:"python-pickle",name:"Insecure Deserialization",type:"insecure_deserialization",severity:"high",description:"Use of pickle with untrusted data",patterns:{regex:[/pickle\.loads?\s*\(/gi,/cPickle\.loads?\s*\(/gi]},languages:["python"],frameworks:[],cweId:"CWE-502",owaspCategory:"A08:2021",remediation:"Use JSON or other safe serialization formats",testCases:{vulnerable:[],safe:[]}},{id:"ruby-eval",name:"Ruby Eval Usage",type:V.RCE,severity:"critical",description:"Use of eval with user input",patterns:{regex:[/eval\s*\(/gi,/instance_eval\s*\(/gi]},languages:["ruby"],frameworks:[],cweId:"CWE-94",owaspCategory:"A03:2021",remediation:"Avoid eval, use safe alternatives",testCases:{vulnerable:[],safe:[]}},{id:"ruby-yaml",name:"YAML Deserialization",type:"insecure_deserialization",severity:"high",description:"Unsafe YAML loading",patterns:{regex:[/YAML\.load\s*\(/gi,/Psych\.load\s*\(/gi]},languages:["ruby"],frameworks:[],cweId:"CWE-502",owaspCategory:"A08:2021",remediation:"Use YAML.safe_load instead",testCases:{vulnerable:[],safe:[]}},{id:"java-sql-injection",name:"Java SQL Injection",type:"sql_injection",severity:"high",description:"SQL injection via string concatenation",patterns:{regex:[/createStatement\s*\(\s*\).*executeQuery\s*\(/gi,/"SELECT.*"\s*\+/gi]},languages:["java"],frameworks:[],cweId:"CWE-89",owaspCategory:"A03:2021",remediation:"Use PreparedStatement with parameters",testCases:{vulnerable:[],safe:[]}},{id:"java-xxe",name:"XML External Entity",type:V.XXE,severity:"high",description:"XML parser vulnerable to XXE",patterns:{regex:[/DocumentBuilderFactory\.newInstance\s*\(\s*\)/gi,/SAXParserFactory\.newInstance\s*\(\s*\)/gi]},languages:["java"],frameworks:[],cweId:"CWE-611",owaspCategory:"A05:2021",remediation:"Disable external entities and DTD processing",testCases:{vulnerable:[],safe:[]}},{id:"php-eval",name:"PHP Eval Usage",type:V.RCE,severity:"critical",description:"Use of eval() function",patterns:{regex:[/eval\s*\(/gi,/assert\s*\(/gi]},languages:["php"],frameworks:[],cweId:"CWE-94",owaspCategory:"A03:2021",remediation:"Avoid eval(), use safe alternatives",testCases:{vulnerable:[],safe:[]}},{id:"php-file-inclusion",name:"File Inclusion",type:"path_traversal",severity:"high",description:"Dynamic file inclusion",patterns:{regex:[/include\s*\(\s*\$_(?:GET|POST|REQUEST)/gi,/require\s*\(\s*\$_(?:GET|POST|REQUEST)/gi]},languages:["php"],frameworks:[],cweId:"CWE-98",owaspCategory:"A03:2021",remediation:"Validate and whitelist file paths",testCases:{vulnerable:[],safe:[]}},{id:"elixir-code-eval",name:"Elixir Code Evaluation",type:V.RCE,severity:"critical",description:"Dynamic code evaluation",patterns:{regex:[/Code\.eval_string\s*\(/gi,/Code\.eval_quoted\s*\(/gi]},languages:["elixir"],frameworks:[],cweId:"CWE-94",owaspCategory:"A03:2021",remediation:"Avoid dynamic code evaluation",testCases:{vulnerable:[],safe:[]}},{id:"elixir-atom-dos",name:"Atom DoS",type:V.DOS,severity:"medium",description:"Creating atoms from user input",patterns:{regex:[/String\.to_atom\s*\(/gi,/binary_to_atom\s*\(/gi]},languages:["elixir"],frameworks:[],cweId:"CWE-400",owaspCategory:"A06:2021",remediation:"Use String.to_existing_atom instead",testCases:{vulnerable:[],safe:[]}},{id:"hardcoded-secret",name:"Hardcoded Secret",type:V.HARDCODED_SECRET,severity:"high",description:"Hardcoded password or API key",patterns:{regex:[/password\s*=\s*["'][^"']{8,}["']/gi,/api_key\s*=\s*["'][^"']{20,}["']/gi]},languages:["javascript","typescript","python","ruby","java","php","elixir"],frameworks:[],cweId:"CWE-798",owaspCategory:"A07:2021",remediation:"Use environment variables or secure key management",testCases:{vulnerable:[],safe:[]}},{id:"weak-crypto",name:"Weak Cryptography",type:V.WEAK_CRYPTO,severity:"medium",description:"Use of weak cryptographic algorithms",patterns:{regex:[/MD5\s*\(/gi,/SHA1\s*\(/gi]},languages:["javascript","typescript","python","ruby","java","php"],frameworks:[],cweId:"CWE-327",owaspCategory:"A02:2021",remediation:"Use SHA-256 or stronger algorithms",testCases:{vulnerable:[],safe:[]}},{id:"jwt-none-algorithm",name:"JWT None Algorithm",type:V.JWT,severity:"critical",description:"JWT allowing none algorithm",patterns:{regex:[/algorithm\s*:\s*["']none["']/gi,/verify\s*:\s*false/gi]},languages:["javascript","typescript","python","ruby"],frameworks:[],cweId:"CWE-347",owaspCategory:"A02:2021",remediation:"Always verify JWT signatures",testCases:{vulnerable:[],safe:[]}},{id:"open-redirect",name:"Open Redirect",type:"open_redirect",severity:"medium",description:"Unvalidated redirect",patterns:{regex:[/redirect\s*\(\s*req\./gi,/location\.href\s*=\s*req\./gi]},languages:["javascript","typescript"],frameworks:[],cweId:"CWE-601",owaspCategory:"A03:2021",remediation:"Validate redirect URLs against whitelist",testCases:{vulnerable:[],safe:[]}},{id:"nosql-injection",name:"NoSQL Injection",type:"nosql_injection",severity:"high",description:"MongoDB injection vulnerability",patterns:{regex:[/\$where\s*:/gi,/find\s*\(\s*{[^}]*\$ne\s*:/gi]},languages:["javascript","typescript"],frameworks:[],cweId:"CWE-943",owaspCategory:"A03:2021",remediation:"Sanitize user input and use parameterized queries",testCases:{vulnerable:[],safe:[]}},{id:"log4j-jndi",name:"Log4j JNDI Injection (CVE-2021-44228)",type:V.CVE,severity:"critical",description:"Log4Shell vulnerability pattern",patterns:{regex:[/\$\{jndi:/gi,/logger\.(?:info|warn|error|debug)\s*\([^)]*\$\{/gi]},languages:["java"],frameworks:[],cweId:"CWE-502",owaspCategory:"A08:2021",remediation:"Update Log4j to version 2.17.0 or later",testCases:{vulnerable:[],safe:[]}}];function k8($){let J=$.toLowerCase();return P6.filter((X)=>X.languages.includes(J)||J==="typescript"&&X.languages.includes("javascript"))}v();class F1{patterns=[];constructor(){this.initializePatterns()}initializePatterns(){this.patterns=P6,q.warn("Using minimal fallback patterns - API connection recommended for full pattern coverage")}async getPatternsByLanguage($){let J=k8($);return q.info(`LocalPatternSource: Returning ${J.length} minimal ${$} patterns`),J}async getPatternsByType($){let J=this.patterns.filter((X)=>X.type===$);return q.info(`LocalPatternSource: Returning ${J.length} minimal patterns of type ${$}`),J}async getAllPatterns(){return q.info(`LocalPatternSource: Returning ${this.patterns.length} minimal patterns total`),this.patterns}}class C6{client;supportedLanguages=["javascript","typescript","python","ruby","java","php","elixir"];constructor($,J){this.client=new y1({apiKey:$,apiUrl:J,cacheEnabled:!0,cacheTTL:3600,fallbackToLocal:!1})}async getPatternsByLanguage($){try{let J=await this.client.fetchPatterns($.toLowerCase());return q.info(`ApiPatternSource: Fetched ${J.length} ${$} patterns from API`),J}catch(J){throw q.error(`ApiPatternSource: Failed to fetch ${$} patterns`,J),J}}async getPatternsByType($){let X=(await this.getAllPatterns()).filter((Q)=>Q.type===$);return q.info(`ApiPatternSource: Returning ${X.length} patterns of type ${$}`),X}async getAllPatterns(){let $=[];for(let J of this.supportedLanguages)try{let X=await this.client.fetchPatterns(J);$.push(...X)}catch(X){q.warn(`Failed to fetch ${J} patterns, continuing...`,X)}return q.info(`ApiPatternSource: Fetched ${$.length} total patterns from API`),$}}class Z6{apiSource;localSource;constructor($,J){this.apiSource=new C6($,J),this.localSource=new F1}async getPatternsByLanguage($){try{return await this.apiSource.getPatternsByLanguage($)}catch(J){return q.warn(`Falling back to local patterns for ${$} due to API error`,J),await this.localSource.getPatternsByLanguage($)}}async getPatternsByType($){try{return await this.apiSource.getPatternsByType($)}catch(J){return q.warn(`Falling back to local patterns for type ${$} due to API error`,J),await this.localSource.getPatternsByType($)}}async getAllPatterns(){try{return await this.apiSource.getAllPatterns()}catch($){return q.warn("Falling back to local patterns due to API error",$),await this.localSource.getAllPatterns()}}}function E$(){let $=process.env.RSOLV_API_KEY,J=process.env.RSOLV_API_URL;if(process.env.USE_LOCAL_PATTERNS==="true")return q.info("Using local pattern source (USE_LOCAL_PATTERNS=true)"),new F1;if($)return q.info("Using hybrid pattern source with API key"),new Z6($,J);return q.warn("No API key provided, using local pattern source only"),new F1}v();class O${patternSource;cachedPatterns=new Map;constructor($){this.patternSource=$||E$()}async detect($,J){let X=[],Q=$.split(`
`),Y=new Set;try{let G=await this.patternSource.getPatternsByLanguage(J);q.info(`SecurityDetectorV2: Analyzing ${J} code with ${G.length} patterns`);for(let W of G)if(W.patterns.regex)for(let H of W.patterns.regex){let z;H.lastIndex=0;while((z=H.exec($))!==null){let B=this.getLineNumber($,z.index),U=Q[B-1]?.trim()||"";if(this.isSafeUsage(U,W.type))continue;let M=`${B}:${W.type}`;if(Y.has(M))continue;if(Y.add(M),X.push({type:W.type,severity:W.severity,line:B,message:`${W.name}: ${W.description}`,description:W.description,confidence:this.getConfidence(U,W.type),cweId:W.cweId,owaspCategory:W.owaspCategory,remediation:W.remediation}),!H.global)break}}}catch(G){q.error("Error detecting vulnerabilities:",G)}return X}async detectIssues($){return(await this.detect($.content,$.language)).map((X)=>({patternId:X.cweId||`${X.type}-001`,severity:X.severity,line:X.line,column:1,message:X.message,description:X.description,file:$.filePath,type:X.type,remediation:X.remediation,confidence:X.confidence}))}async scanDirectory($){return q.info(`SecurityDetectorV2: Starting directory scan of ${$}`),{vulnerabilities:[],fileCount:0,totalIssues:0,criticalCount:0,highCount:0,mediumCount:0,lowCount:0,byType:new Map,byFile:new Map}}getLineNumber($,J){return $.substring(0,J).split(`
`).length}isSafeUsage($,J){return({sql_injection:[/\?.+\?/,/\$\d+/,/:\w+/,/prepare\s*\(/i,/setParameter/i,/bindParam/i],xss:[/escape/i,/sanitize/i,/encode/i,/textContent/,/innerText/,/createTextNode/],command_injection:[/escapeshellarg/i,/escapeshellcmd/i,/quote/i]}[J]||[]).some((Y)=>Y.test($))}getConfidence($,J){if(({sql_injection:[/\+\s*req\./,/\+\s*request\./,/\$\{.*req\./,/`.*\$\{.*req\./],xss:[/innerHTML\s*=\s*[^'"]*req\./,/document\.write\s*\([^)]*req\./,/\$\([^)]+\)\.html\s*\([^)]*req\./]}[J]||[]).some((Y)=>Y.test($)))return"high";if(this.isSafeUsage($,J))return"low";return"medium"}}var S2=new O$;class k6{securityDetector;constructor(){let $=E$();this.securityDetector=new O$($)}async analyzeWithSecurity($,J,X){q.info(`Analyzing issue #${$.number} with security-aware analysis`);let Q=await this.performStandardAnalysis($,J),Y;if(X&&X.size>0){if(Y=await this.performSecurityAnalysis(X,$),Y.hasSecurityIssues)Q.issueType="security",Q.estimatedComplexity=this.adjustComplexityForSecurity(Q.estimatedComplexity,Y.riskLevel)}return{...Q,securityAnalysis:Y}}async performSecurityAnalysis($,J){q.info("=== SECURITY ANALYSIS v2.0 ACTIVE ==="),q.info(`Performing security analysis on ${$.size} codebase files`);let X=[],Q=[];for(let[H,z]of $.entries()){let B=this.getLanguageFromPath(H);if(!B)continue;let U=await this.securityDetector.detect(z,B);if(U.length>0){let M=U.map((F)=>({...F,file:H}));X.push(...M),Q.push(H),q.info(`Found ${U.length} vulnerabilities in ${H}`)}}let Y=this.calculateRiskLevel(X),G=this.generateSecurityRecommendations(X),W={total:X.length,byType:{},bySeverity:{}};return X.forEach((H)=>{W.byType[H.type]=(W.byType[H.type]||0)+1,W.bySeverity[H.severity]=(W.bySeverity[H.severity]||0)+1}),{hasSecurityIssues:X.length>0,vulnerabilities:X,riskLevel:Y,recommendations:G,affectedFiles:Q,summary:W}}getLanguageFromPath($){switch($.split(".").pop()?.toLowerCase()){case"js":case"jsx":return"javascript";case"ts":case"tsx":return"typescript";case"py":return"python";case"rb":return"ruby";case"php":return"php";case"java":return"java";case"rs":return"rust";default:return null}}calculateRiskLevel($){if($.length===0)return"low";let J=$.filter((Y)=>Y.severity==="critical").length,X=$.filter((Y)=>Y.severity==="high").length,Q=$.filter((Y)=>Y.severity==="medium").length;if(J>0)return"critical";if(X>=3)return"critical";if(X>=1)return"high";if(Q>=3)return"high";if(Q>=1)return"medium";return"low"}generateSecurityRecommendations($){let J=new Set;for(let X of $){if(X.remediation)J.add(X.remediation);switch(X.type){case"sql_injection":J.add("Implement parameterized queries throughout the codebase"),J.add("Add input validation and sanitization");break;case"xss":J.add("Use secure DOM manipulation methods (textContent, not innerHTML)"),J.add("Implement Content Security Policy (CSP)");break;default:J.add("Review security best practices for this vulnerability type")}}return Array.from(J)}adjustComplexityForSecurity($,J){if(J==="critical")return"complex";if(J==="high"&&$==="simple")return"medium";if(J==="high"&&$==="medium")return"complex";return $}async performStandardAnalysis($,J){let{analyzeIssue:X}=await Promise.resolve().then(() => (I6(),Z8));return await X($,J)}determineIssueType($){let J=$.title.toLowerCase(),X=$.body.toLowerCase(),Q=`${J} ${X}`;if(Q.includes("secur")||Q.includes("vulnerab")||Q.includes("hack")||Q.includes("attack")||Q.includes("xss")||Q.includes("sql injection"))return"security";if(Q.includes("fix")||Q.includes("bug"))return"bug";else if(Q.includes("add")||Q.includes("feature"))return"feature";else if(Q.includes("refactor"))return"refactoring";else if(Q.includes("performance"))return"performance";return"other"}}v();m1();class T6{generateLineLevelExplanation($,J){let X=`Line ${$.line}: ${this.getVulnerabilityDisplayName($.type)} Vulnerability`,Q=this.generateLineLevelContent($,J),Y=this.generateSecureExample($.type,J);return{tier:"line",vulnerabilityId:`${$.type}-${$.line}`,title:X,content:Q,secureExample:Y,riskLevel:$.severity,lineNumber:$.line,codeSnippet:J}}generateConceptLevelExplanation($,J){let X=`Understanding ${this.getVulnerabilityDisplayName($)}`,Q=this.generateConceptLevelContent($),Y=this.getPreventionMethods($),G=this.getAttackScenarios($),W=this.getRelatedConcepts($);return{tier:"concept",vulnerabilityType:$,title:X,content:Q,preventionMethods:Y,attackScenarios:G,relatedConcepts:W,affectedVulnerabilities:J.filter((H)=>H.type===$)}}generateBusinessLevelExplanation($){let J=this.calculateRiskScore($),X=this.analyzeBusinessImpact($),Q=this.analyzeComplianceImpact($),Y=this.determinePriorities($),G=this.estimateTimeline($);return{tier:"business",title:"Security Risk Assessment and Business Impact",content:this.generateBusinessLevelContent($),businessImpact:X,complianceImpact:Q,riskScore:J,priorities:Y,timeline:G}}generateCompleteExplanation($,J){let X=[];for(let H of $){let z=this.extractCodeSnippet(H,J);X.push(this.generateLineLevelExplanation(H,z))}let Y=[...new Set($.map((H)=>H.type))].map((H)=>this.generateConceptLevelExplanation(H,$)),G=this.generateBusinessLevelExplanation($),W=this.generateSummary($);return{lineLevelExplanations:X,conceptLevelExplanations:Y,businessLevelExplanation:G,summary:W,timestamp:new Date().toISOString()}}formatAsMarkdown($){if($.tier==="line")return this.formatLineLevelMarkdown($);else if($.tier==="concept")return this.formatConceptLevelMarkdown($);else return this.formatBusinessLevelMarkdown($)}generateMarkdownReport($){let J=`# Security Vulnerability Explanation

`;J+=`**Generated:** ${new Date($.timestamp).toLocaleDateString()}

`,J+=`## Summary

`,J+=`- **Total Vulnerabilities:** ${$.summary.totalVulnerabilities}
`,J+=`- **Estimated Fix Time:** ${$.summary.estimatedFixTime}
`,J+=`- **Risk Score:** ${$.businessLevelExplanation.riskScore}/100

`,J+=`## Line-Level Analysis

`;for(let X of $.lineLevelExplanations)J+=this.formatLineLevelMarkdown(X)+`
`;J+=`## Concept-Level Analysis

`;for(let X of $.conceptLevelExplanations)J+=this.formatConceptLevelMarkdown(X)+`
`;return J+=`## Business Impact Analysis

`,J+=this.formatBusinessLevelMarkdown($.businessLevelExplanation),J}generateLineLevelContent($,J){return{sql_injection:"This line contains a SQL injection vulnerability because it uses string concatenation to build a database query. User input is directly embedded into the SQL statement without proper sanitization, allowing attackers to manipulate the query logic.",xss:"This line contains a cross-site scripting (XSS) vulnerability because it directly assigns user-controlled content to innerHTML without sanitization. This allows attackers to inject malicious scripts that execute in other users' browsers.",broken_access_control:"This endpoint lacks proper access control checks, allowing unauthorized users to access restricted functionality or data.",sensitive_data_exposure:"This line exposes sensitive data in plain text, making it vulnerable to unauthorized access or accidental disclosure."}[$.type]||`This line contains a ${$.type} vulnerability that poses security risks.`}generateSecureExample($,J){return{sql_injection:`const query = "SELECT * FROM users WHERE id = ?";
db.query(query, [userId], callback);`,xss:`element.textContent = userInput;
// or use a sanitization library:
element.innerHTML = DOMPurify.sanitize(userInput);`,broken_access_control:`app.get("/admin/users", authenticateUser, authorizeAdmin, (req, res) => {
  // handler code
});`,sensitive_data_exposure:`const hashedPassword = await bcrypt.hash(password, 10);
// Never log sensitive data`}[$]||"Use secure coding practices for this vulnerability type."}generateConceptLevelContent($){return{sql_injection:"SQL injection is a code injection technique that exploits vulnerabilities in an application's database layer. Attackers insert malicious SQL code into application queries, potentially gaining unauthorized access to sensitive data, modifying database contents, or executing administrative operations.",xss:"Cross-Site Scripting (XSS) allows attackers to inject client-side scripts into web pages viewed by other users. When successful, XSS attacks can access sensitive page content, session tokens, or other sensitive information, and can perform actions on behalf of the victim.",broken_access_control:"Broken access control occurs when applications fail to properly restrict what authenticated users are allowed to do. This can lead to unauthorized information disclosure, modification, or destruction of data, or performing business functions outside the user's limits."}[$]||`${$} represents a security vulnerability that requires attention.`}getPreventionMethods($){return{sql_injection:["Use parameterized queries or prepared statements","Implement input validation and sanitization","Apply principle of least privilege for database accounts"],xss:["Output encoding and escaping","Input validation and sanitization","Content Security Policy (CSP) implementation"],broken_access_control:["Implement proper authentication mechanisms","Use role-based access control (RBAC)","Apply principle of least privilege"]}[$]||["Implement secure coding practices"]}getAttackScenarios($){return{sql_injection:["Data extraction through UNION-based attacks","Authentication bypass via boolean-based attacks"],xss:["Script injection to steal session cookies","Phishing attacks through content manipulation"],broken_access_control:["Privilege escalation to admin functions","Horizontal privilege escalation to other users' data"]}[$]||["Various attack vectors possible"]}getRelatedConcepts($){return{sql_injection:["Input validation","Database security","Query parameterization"],xss:["Content Security Policy","Input sanitization","Output encoding"],broken_access_control:["Authentication","Authorization","Session management"]}[$]||["Security fundamentals"]}calculateRiskScore($){let J=0;for(let X of $)switch(X.severity){case"critical":J+=25;break;case"high":J+=20;break;case"medium":J+=15;break;case"low":J+=10;break}return Math.min(100,J)}analyzeBusinessImpact($){let J=$.some((X)=>X.severity==="critical"||X.severity==="high");return{dataLoss:J?"High risk of sensitive data exposure or theft":"Moderate risk of data exposure",reputationalDamage:J?"Severe impact on customer trust and brand reputation":"Potential minor impact on reputation",financialImpact:J?"Significant costs from breaches, compliance fines, and recovery":"Minimal direct financial impact",operationalDisruption:J?"Potential system compromise affecting business operations":"Limited operational impact"}}analyzeComplianceImpact($){let J=[];if($.some((X)=>X.type==="sql_injection"||X.type==="xss"))J.push("OWASP Top 10 compliance violation");if($.some((X)=>X.type==="sensitive_data_exposure"))J.push("GDPR/CCPA data protection requirements at risk");return J.length>0?J:["Monitor compliance requirements"]}determinePriorities($){let J=[];if($.some((X)=>X.severity==="critical"))J.push("Immediate action required for critical vulnerabilities");if($.some((X)=>X.severity==="high"))J.push("High priority fixes should be completed within 24-48 hours");return J.push("Implement comprehensive security testing"),J}estimateTimeline($){let J=$.filter((Q)=>Q.severity==="critical").length,X=$.filter((Q)=>Q.severity==="high").length;if(J>0)return"Immediate (within 24 hours)";if(X>0)return"Urgent (within 48 hours)";return"Standard (within 1 week)"}generateBusinessLevelContent($){let J=this.calculateRiskScore($),X=this.groupBySeverity($);return`Your application has ${$.length} security vulnerabilities with a risk score of ${J}/100. 
    This includes ${X.critical} critical, ${X.high} high, ${X.medium} medium, 
    and ${X.low} low severity issues. These vulnerabilities pose significant risks to your business 
    operations, customer data, and regulatory compliance.`}extractCodeSnippet($,J){for(let X of Object.values(J)){let Q=X.split(`
`);if($.line<=Q.length)return Q[$.line-1]||"Code snippet not available"}return"Code snippet not available"}generateSummary($){let J=this.groupBySeverity($),X=this.identifyPrimaryRisks($),Q=this.estimateFixTime($);return{totalVulnerabilities:$.length,severityBreakdown:J,primaryRisks:X,estimatedFixTime:Q}}groupBySeverity($){let J={critical:0,high:0,medium:0,low:0};for(let X of $)J[X.severity]++;return J}identifyPrimaryRisks($){return[...new Set($.map((X)=>this.getVulnerabilityDisplayName(X.type)))].slice(0,3)}estimateFixTime($){let J=$.length*2;if(J<8)return`${J} hours`;return`${Math.ceil(J/8)} days`}getVulnerabilityDisplayName($){return{sql_injection:"SQL Injection",xss:"Cross-Site Scripting (XSS)",broken_access_control:"Broken Access Control",sensitive_data_exposure:"Sensitive Data Exposure",xml_external_entities:"XML External Entities (XXE)",security_misconfiguration:"Security Misconfiguration",vulnerable_components:"Vulnerable Components",broken_authentication:"Broken Authentication",insecure_deserialization:"Insecure Deserialization",insufficient_logging:"Insufficient Logging"}[$]||$}formatLineLevelMarkdown($){return`### ${$.title}

**Risk Level:** ${$.riskLevel}

${$.content}

**Vulnerable Code:**
\`\`\`javascript
${$.codeSnippet}
\`\`\`

**Secure Example:**
\`\`\`javascript
${$.secureExample}
\`\`\`

`}formatConceptLevelMarkdown($){let J=`### ${$.title}

${$.content}

**Prevention Methods:**
`;for(let X of $.preventionMethods)J+=`- ${X}
`;J+=`
**Common Attack Scenarios:**
`;for(let X of $.attackScenarios)J+=`- ${X}
`;return J+`
`}formatBusinessLevelMarkdown($){return`### ${$.title}

**Risk Score:** ${$.riskScore}/100

${$.content}

**Business Impact:**
- **Data Loss Risk:** ${$.businessImpact.dataLoss}
- **Reputational Damage:** ${$.businessImpact.reputationalDamage}  
- **Financial Impact:** ${$.businessImpact.financialImpact}
- **Operational Disruption:** ${$.businessImpact.operationalDisruption}

**Timeline:** ${$.timeline}

`}}v();import{spawn as T8}from"child_process";import g1 from"path";import X$ from"fs";class K1{executablePath;repoPath;config;claudeConfig;tempDir;usageData=[];credentialManager;constructor($,J=process.cwd(),X){if(this.config=$,this.repoPath=J,this.credentialManager=X,this.claudeConfig=$.claudeCodeConfig||{},this.executablePath=this.claudeConfig.executablePath||"claude",this.tempDir=this.claudeConfig.tempDir||g1.join(process.cwd(),"temp"),!X$.existsSync(this.tempDir))try{X$.mkdirSync(this.tempDir,{recursive:!0})}catch(Q){q.warn(`Failed to create temp directory: ${Q}`)}if(this.claudeConfig.verboseLogging)q.info("Claude Code adapter initialized with config:",JSON.stringify({executablePath:this.executablePath,tempDir:this.tempDir,contextOptions:this.claudeConfig.contextOptions,retryOptions:this.claudeConfig.retryOptions,timeout:this.claudeConfig.timeout},null,2))}async isAvailable(){try{return new Promise(($)=>{let J=setTimeout(()=>{q.warn("Claude Code availability check timed out"),$(!1)},5000),X;try{X=T8(this.executablePath,["-v"],{shell:!1,stdio:["ignore","pipe","pipe"]})}catch(Q){q.error("Failed to spawn Claude Code for availability check",Q),clearTimeout(J),$(!1);return}if(!X){clearTimeout(J),$(!1);return}X.on("error",(Q)=>{q.error("Claude Code process error during availability check",Q),clearTimeout(J),$(!1)}),X.on("close",(Q)=>{clearTimeout(J),$(Q===0)})})}catch($){return q.error("Error checking Claude Code availability",$),!1}}async generateSolution($,J,X){let Q=null,Y=0,G=this.claudeConfig.retryOptions?.maxRetries??2,W=this.claudeConfig.retryOptions?.baseDelay??1000,H=this.claudeConfig.timeout??900000,z={startTime:Date.now(),issueId:$.id,successful:!1};try{if(q.info(`Generating solution using Claude Code for issue: ${$.id}`),!await this.isAvailable())return q.warn("Claude Code CLI not available, falling back to standard method"),z.errorType="cli_not_available",this.trackUsage(z),{success:!1,message:"Claude Code CLI not available",error:`Claude Code CLI not available. Please ensure Claude Code is installed and in your PATH.

Installation instructions:
1. Visit https://claude.ai/console/claude-code
2. Follow the installation steps for your platform
3. Verify installation with: claude -v`};let U=this.constructPrompt($,J,X);try{if(!X$.existsSync(this.tempDir))X$.mkdirSync(this.tempDir,{recursive:!0});Q=g1.join(this.tempDir,`prompt-${$.id}-${Date.now()}.txt`),X$.writeFileSync(Q,U)}catch(A){return q.error("Error creating temporary files",A),z.errorType="temp_file_error",this.trackUsage(z),{success:!1,message:"Error creating temporary files",error:"Error creating temporary files for Claude Code. Please check file permissions."}}let M=g1.join(this.tempDir,`solution-${$.id}-${Date.now()}.json`),F,O=async()=>{try{return await this.executeClaudeCode(Q,M,z,H)}catch(A){if(Y++,z.retryCount=Y,Y<G){if(q.warn(`Claude Code execution failed, retrying (${Y}/${G})...`),this.claudeConfig.verboseLogging)q.info(`Retry reason: ${A.message}`);let S=W*Math.pow(2,Y);return await new Promise((P)=>setTimeout(P,S)),O()}else throw A}};try{let A=O(),S=new Promise((P,x)=>{setTimeout(()=>{x(new Error(`Claude Code execution timed out after ${H/1000} seconds`))},H)});F=await Promise.race([A,S])}catch(A){return q.error("Claude Code execution failed after retries",A),z.errorType="execution_error",z.endTime=Date.now(),this.trackUsage(z),{success:!1,message:"Claude Code execution failed",error:`Claude Code execution failed: ${A.message}`}}try{if(Q)X$.unlinkSync(Q)}catch(A){q.warn("Error cleaning up prompt file",A)}try{let A=this.parseSolution(F,M,$);z.successful=!0,z.endTime=Date.now(),this.trackUsage(z);let S={};return A.files.forEach((P)=>{S[P.path]=P.changes}),{success:!0,message:"Solution generated with Claude Code",changes:S}}catch(A){return q.error("Error parsing Claude Code solution",A),z.errorType="parsing_error",z.endTime=Date.now(),this.trackUsage(z),{success:!1,message:"Error parsing Claude Code output",error:"Error parsing Claude Code output. Raw output preview: "+F.slice(0,500)}}}catch(B){return q.error("Unexpected error generating solution with Claude Code",B),z.errorType="unexpected_error",z.endTime=Date.now(),this.trackUsage(z),{success:!1,message:"Unexpected error using Claude Code",error:B instanceof Error?B.message:String(B)}}}trackUsage($){if(this.claudeConfig.trackUsage!==!1){this.usageData.push($);let J=g1.join(this.tempDir,"claude-code-analytics.json");try{let X=[];if(X$.existsSync(J))X=JSON.parse(X$.readFileSync(J,"utf-8"));if(X.push($),X.length>100)X=X.slice(-100);X$.writeFileSync(J,JSON.stringify(X,null,2))}catch(X){q.warn("Error saving analytics data",X)}if(this.claudeConfig.verboseLogging){let X=$.endTime?($.endTime-$.startTime)/1000:0;q.info(`Usage stats for issue ${$.issueId}: ${$.successful?"Success":"Failed"} in ${X.toFixed(1)}s (cost: ${$.cost?"$"+$.cost:"unknown"})`)}}}getUsageData(){return this.usageData}constructPrompt($,J,X){if(X)return X;let Q=[];if(this.claudeConfig.contextOptions){let G=this.claudeConfig.contextOptions;if(G.maxDepth!==void 0)Q.push(`Use a maximum exploration depth of ${G.maxDepth} when gathering context.`);if(G.explorationBreadth!==void 0)Q.push(`Use a context exploration breadth of ${G.explorationBreadth} (on a scale of 1-5).`);if(G.includeDirs&&G.includeDirs.length>0)Q.push(`Focus on examining these directories: ${G.includeDirs.join(", ")}`);if(G.excludeDirs&&G.excludeDirs.length>0)Q.push(`Skip examining these directories: ${G.excludeDirs.join(", ")}`);if(G.includeFiles&&G.includeFiles.length>0)Q.push(`Focus on files matching these patterns: ${G.includeFiles.join(", ")}`);if(G.excludeFiles&&G.excludeFiles.length>0)Q.push(`Skip files matching these patterns: ${G.excludeFiles.join(", ")}`)}let Y=Q.length>0?`
Context Gathering Instructions:
${Q.join(`
`)}
`:"";return`
      You are an expert developer tasked with fixing issues in a codebase.
      
      Issue Title: ${$.title}
      Issue Description: ${$.body}
      
      Complexity: ${J.complexity}
      Estimated Time: ${J.estimatedTime} minutes
      ${Y}
      Related Files:
      ${J.relatedFiles?.join(`
`)||"To be determined by context analysis"}
      
      Generate a solution for this issue including:
      1. Code changes with file paths
      2. Tests to validate the fix
      3. A clear explanation of the approach
      
      Format your response as a JSON object with the following structure:
      {
        "title": "Brief title for the PR",
        "description": "Detailed description of the solution",
        "files": [
          {
            "path": "path/to/file",
            "changes": "The complete new content for the file"
          }
        ],
        "tests": [
          "Description of test 1",
          "Description of test 2"
        ]
      }
    `}async executeClaudeCode($,J,X,Q){return new Promise((Y,G)=>{let W;try{W=X$.readFileSync($,"utf-8")}catch(T){G(new Error(`Could not read prompt file: ${T}`));return}let H=["--print"];if(this.claudeConfig.verboseLogging)H.push("--verbose");let z=this.claudeConfig.outputFormat||"stream-json";if(z==="stream-json"&&!this.claudeConfig.verboseLogging)H.push("--verbose");if(H.push("--output-format",z),this.claudeConfig.contextOptions){let T=this.claudeConfig.contextOptions;if(T.maxDepth!==void 0)H.push("--max-depth",T.maxDepth.toString());if(T.includeDirs&&T.includeDirs.length>0)H.push("--include-dirs",T.includeDirs.join(","));if(T.excludeDirs&&T.excludeDirs.length>0)H.push("--exclude-dirs",T.excludeDirs.join(","))}let B=this.config.apiKey;if(q.info(`Claude Code config - useVendedCredentials: ${this.config.useVendedCredentials}, credentialManager: ${!!this.credentialManager}, apiKey: ${this.config.apiKey?"config":"none"}`),this.config.useVendedCredentials&&this.credentialManager)try{B=this.credentialManager.getCredential("anthropic"),q.info("Using vended Anthropic credential for Claude Code"),q.info(`Vended API key retrieved: ${B?"yes (length: "+B.length+")":"no"}`)}catch(T){q.warn("Failed to get vended credential, falling back to config API key",T)}else q.info(`Not using vended credentials - config API key: ${B?"yes":"no"}`);let U={...process.env,ANTHROPIC_API_KEY:B};if(this.claudeConfig.verboseLogging)q.info("Executing Claude Code with args:",H.join(" "));q.info(`Claude Code executable path: ${this.executablePath}`),q.info(`Working directory: ${this.repoPath}`),q.info(`API key present: ${B?"yes":"no"}`);let M;try{M=T8(this.executablePath,H,{cwd:this.repoPath,shell:!1,env:U,stdio:["pipe","pipe","pipe"]})}catch(T){q.error("Failed to spawn Claude Code process",T),G(new Error(`Failed to spawn Claude Code: ${T}`));return}if(!M||!M.stdin){q.error("Claude Code process spawn returned invalid handle"),G(new Error("Claude Code process failed to start properly"));return}try{M.stdin.write(W),M.stdin.end()}catch(T){q.error("Failed to write to Claude Code stdin",T),G(new Error(`Failed to write to Claude Code stdin: ${T}`));return}let F="",O="",A=!1,S=!1,P=!1,x,Z=0,R1=Date.now(),y6=setTimeout(()=>{q.error(`Claude Code execution timed out after ${Q/1000}s`),M.kill(),G(new Error(`Execution timed out after ${Q/1000} seconds`))},Q);M.on("error",(T)=>{q.error("Claude Code process error",T),clearTimeout(y6),G(new Error(`Claude Code process error: ${T.message}`))}),M.stdout.on("data",(T)=>{let H$=T.toString();F+=H$,Z++;let O1=(Date.now()-R1)/1000;if(!A)A=!0,q.info(`Received first Claude response chunk after ${O1.toFixed(1)}s`);if(H$.includes('"type": "tool_use"')&&!S)S=!0,q.info(`Claude is gathering context... (${O1.toFixed(1)}s elapsed)`);else if(H$.includes('"type": "tool_result"')&&!P&&S)P=!0,x=Date.now()-R1,X.contextGatheringTime=x,q.info(`Context gathering completed in ${(x/1000).toFixed(1)}s`),q.info(`Claude is analyzing the issue... (${O1.toFixed(1)}s elapsed)`);else if(H$.includes('"type": "text"')&&P)q.info(`Claude is generating solution... (${O1.toFixed(1)}s elapsed)`);else if(H$.includes('"cost_usd"')){let g6=H$.match(/"cost_usd": ([0-9.]+)/);if(g6){let u6=parseFloat(g6[1]);X.cost=u6,q.info(`Claude completed response (cost: $${u6.toFixed(4)})`)}}}),M.stderr.on("data",(T)=>{O+=T.toString(),q.warn(`Claude CLI stderr: ${T.toString().trim()}`)}),M.on("close",(T)=>{clearTimeout(y6);let H$=(Date.now()-R1)/1000;if(q.info(`Claude Code process completed in ${H$.toFixed(1)}s (${Z} chunks)`),X.totalChunks=Z,X.solutionGenerationTime=Date.now()-(R1+(X.contextGatheringTime||0)),T!==0)G(new Error(`Claude Code exited with code ${T}: ${O}`));else Y(F)})})}parseSolution($,J,X){try{let Q=$.match(/"text": "(\\{\\\\n[^"]*\\\\n\\})"/);if(Q)try{let G=Q[1].replace(/\\\\n/g,`
`).replace(/\\"/g,'"').replace(/\\\\\\\\/g,"\\");q.debug("Found direct JSON solution in Claude response");let W=JSON.parse(G);if(W.title&&W.description&&Array.isArray(W.files))return{title:W.title,description:W.description,files:W.files,tests:W.tests||[]}}catch(G){q.warn("Failed to parse direct JSON solution",G)}let Y=$.match(/"text": "([^"]+(?:\\.[^"]+)*)"/);if(Y)try{let W=Y[1].replace(/\\n/g,`
`).replace(/\\"/g,'"').replace(/\\\\/g,"\\").match(/```(?:json)?\s*([\s\S]*?)\s*```/);if(W){q.debug("Found JSON in code block in Claude response");let H=JSON.parse(W[1]);if(H.title&&H.description&&Array.isArray(H.files))return{title:H.title,description:H.description,files:H.files,tests:H.tests||[]}}}catch(G){q.warn("Failed to parse JSON code block",G)}try{let G=$.split(/}\s*{/).map((W,H)=>{if(H===0)return W+"}";if(H===$.split(/}\s*{/).length-1)return"{"+W;return"{"+W+"}"});for(let W of G)try{let H=JSON.parse(W);if(H.result){let z=typeof H.result==="string"?JSON.parse(H.result):H.result;if(z.title&&z.description&&Array.isArray(z.files))return q.debug("Found solution in result field"),{title:z.title,description:z.description,files:z.files,tests:z.tests||[]}}}catch(H){continue}}catch(G){q.error("Error parsing JSON from Claude Code output",G)}return q.warn("Could not parse Claude Code output, using default solution"),{title:`Fix for: ${X.title}`,description:"Could not parse Claude Code output. Please check the logs for more information.",files:[],tests:[]}}catch(Q){return q.error("Error parsing solution",Q),{title:`Fix for: ${X.title}`,description:"Error occurred while parsing Claude Code solution.",files:[],tests:[]}}}getAnalyticsSummary(){let $=this.usageData.length;if($===0)return{total:0};let J=this.usageData.filter((W)=>W.successful).length,X=J/$*100,Q=this.usageData.filter((W)=>W.endTime!==void 0).map((W)=>(W.endTime-W.startTime)/1000).reduce((W,H)=>W+H,0)/$,Y=this.usageData.filter((W)=>W.cost!==void 0).map((W)=>W.cost).reduce((W,H)=>W+H,0),G=this.usageData.filter((W)=>W.errorType).reduce((W,H)=>{let z=H.errorType;return W[z]=(W[z]||0)+1,W},{});return{total:$,successful:J,successRate:X.toFixed(1)+"%",avgDuration:Q.toFixed(1)+"s",totalCost:"$"+Y.toFixed(4),errorTypes:G}}}async function v6($,J,X,Q,Y,G){try{if(q.info(`Generating solution for issue #${$.number}`),X.aiProvider.provider==="claude-code"&&!Q){q.info("Using Claude Code for solution generation");let A;if(X.aiProvider.useVendedCredentials&&X.rsolvApiKey){let{RSOLVCredentialManager:x}=await Promise.resolve().then(() => (h1(),S6));A=new x,await A.initialize(X.rsolvApiKey)}let P=await new K1(X.aiProvider,process.cwd(),A).generateSolution($,J);if(P.success)return{success:!0,message:"Solution generated with Claude Code",changes:P.changes};if(P.error&&P.error.includes("Claude Code CLI not available"))q.info("Claude Code not available, falling back to standard AI provider API");else return{success:!1,message:P.message,error:P.error}}let W=X.aiProvider.provider==="claude-code"?{...X.aiProvider,provider:"anthropic",model:"claude-3-5-sonnet-20241022"}:X.aiProvider,H=Q||await a$(W),z=await Z7($,J,Y);if(Object.keys(z).length===0)return q.warn(`No files found for analysis in issue #${$.number}`),{success:!1,message:"No relevant files found for analysis"};let B=C8(J.issueType),U=`${I8($,J,z)}

${B}`,M;if(G&&G.vulnerabilities&&G.vulnerabilities.length>0)q.info(`Including ${G.vulnerabilities.length} security vulnerabilities in solution prompt`),M=new T6().generateCompleteExplanation(G.vulnerabilities,z),q.info(`Generated three-tier explanations for ${M.lineLevelExplanations.length} vulnerabilities`),U+=`

## Security Analysis Results

The following security vulnerabilities were detected and MUST be addressed in your solution:

${G.vulnerabilities.map((S)=>`- **${S.severity} Severity**: ${S.type} in ${S.file}:${S.line}
   Pattern: ${S.pattern}
   Risk: ${S.risk}
   Recommendation: ${S.recommendation}`).join(`

`)}

Please ensure your solution addresses these security issues as a priority.`;q.info(`Calling AI with prompt length: ${U.length} chars`),q.info("Prompt preview (first 500 chars):",U.substring(0,500)),q.info("Prompt preview (last 500 chars):",U.substring(U.length-500));let F=await H.complete(U,{temperature:0.2,maxTokens:4000,model:X.aiProvider.model||"claude-3-sonnet-20240229"});q.info(`AI response length: ${F.length} chars`),q.info("Raw AI solution response (first 1000 chars):",F.substring(0,1000));let O=k7(F);if(q.debug(`Parsed ${Object.keys(O).length} file changes from response`),Object.keys(O).length===0)return q.warn(`No changes extracted from solution for issue #${$.number}`),{success:!1,message:"Failed to extract file changes from AI solution"};return{success:!0,message:"Solution generated successfully",changes:O,explanations:M}}catch(W){return q.error(`Error generating solution for issue #${$.number}`,W),{success:!1,message:`Error generating solution: ${W instanceof Error?W.message:String(W)}`,error:String(W)}}}async function Z7($,J,X){try{let Q=[...J.filesToModify||[]];if(Q.length===0){q.info("No files explicitly identified, inferring from issue content");let G=`${$.title} ${$.body}`,W=/\.([a-zA-Z0-9]+)\b/g,H=[],z;while((z=W.exec(G))!==null)if(!H.includes(z[1]))H.push(z[1]);q.debug(`Inferred file extensions: ${H.join(", ")}`)}q.info(`Fetching content for ${Q.length} files`);let Y={};for(let G of Q)try{if(X)Y[G]=await X(G);else Y[G]=await T7(G);q.debug(`Fetched content for ${G}`)}catch(W){q.warn(`Failed to fetch content for ${G}`,W)}return Y}catch(Q){return q.error("Error getting files for analysis",Q),{}}}function k7($){let J={};try{let X=/---\s*([\w./-]+)\s*---\s*```[\w]*\n?([\s\S]*?)```/gm,Q;while((Q=X.exec($))!==null){let[,Y,G]=Q;if(Y&&G)J[Y]=G.trim()}if(Object.keys(J).length===0){let Y=/```(\w+)\s+([\w./-]+)\n([\s\S]*?)```/gm;while((Q=Y.exec($))!==null){let[,,G,W]=Q;if(G&&W)J[G]=W.trim()}}if(Object.keys(J).length===0){let Y=/([\w./-]+):\s*```[\w]*\n?([\s\S]*?)```/gm;while((Q=Y.exec($))!==null){let[,G,W]=Q;if(G&&W)J[G]=W.trim()}}if(Object.keys(J).length===0){let Y=/```[\w]*\n?([\s\S]*?)```/gm,G=/([\w./-]+\.\w+)/;while((Q=Y.exec($))!==null){let W=Q[1],H=Math.max(0,Q.index-100),B=$.substring(H,Q.index).match(G);if(B&&W)J[B[1]]=W.trim()}}return J}catch(X){return q.error("Error parsing solution response",X),{}}}async function T7($){switch(await new Promise((X)=>setTimeout(X,100)),$.split(".").pop()?.toLowerCase()){case"js":return`// Example JavaScript file content for ${$}
function processData(input) {
  // TODO: Implement proper validation
  return input.map(item => item.value);
}

module.exports = { processData };
`;case"ts":return`// Example TypeScript file content for ${$}
interface DataItem {
  id: string;
  value: number;
}

function processData(input: DataItem[]): number[] {
  // TODO: Implement proper validation
  return input.map(item => item.value);
}

export { DataItem, processData };
`;case"py":return`# Example Python file content for ${$}
def process_data(input_data):
    # TODO: Implement proper validation
    return [item['value'] for item in input_data]

if __name__ == "__main__":
    print(process_data([{'value': 1}, {'value': 2}]))
`;case"md":return`# Documentation for ${$.split("/").pop()?.replace(".md","")}

## Overview

This documentation describes the usage and implementation details.

## Installation

\`\`\`bash
npm install example-package
\`\`\`

## Usage

\`\`\`javascript
const { processData } = require('example-package');
const result = processData([{ id: '1', value: 42 }]);
\`\`\`
`;default:return`// Example file content for ${$}
// This is a placeholder for demonstration purposes
`}}v();m1();class b6{baseUrl;apiKey;constructor($){if(typeof $==="string")this.apiKey=$,this.baseUrl=process.env.RSOLV_API_URL||"https://api.rsolv.dev";else this.baseUrl=$.baseUrl,this.apiKey=$.apiKey}async createFixAttempt($){let J={github_org:$.repository_full_name?.split("/")[0]||"unknown",repo_name:$.repository_full_name?.split("/")[1]||"unknown",issue_number:$.issue_number,pr_number:parseInt($.github_pr_url?.split("/").pop()||"0"),pr_title:$.issue_title||"RSOLV Fix",pr_url:$.github_pr_url,issue_title:$.issue_title,issue_url:$.github_issue_url,api_key_used:this.apiKey,metadata:{ai_provider:$.ai_provider,ai_model:$.ai_model,security_vulnerabilities_found:$.security_vulnerabilities_found,estimated_time_saved_hours:$.estimated_time_saved_hours}};return this.recordFixAttempt(J)}async recordFixAttempt($){try{let J=await fetch(`${this.baseUrl}/api/v1/fix-attempts`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.apiKey}`},body:JSON.stringify($)});if(J.ok)return{success:!0,data:await J.json()};else{let X=await J.json();return{success:!1,error:`API Error: ${J.status} - ${JSON.stringify(X)}`}}}catch(J){return{success:!1,error:J instanceof Error?J.message:"Unknown error"}}}}async function v8($,J,X,Q,Y,G){try{q.info(`Creating pull request for issue #${$.number}`);let W=await v7($);await f7(W,J,$);let H=await x7($,X,J,Q,Y,G),z=await h7($,W,H,X);return q.info(`Successfully created PR #${z.pullRequestNumber} for issue #${$.number}`),z}catch(W){return q.error(`Error creating pull request for issue #${$.number}`,W),{success:!1,message:`Error creating pull request: ${W instanceof Error?W.message:String(W)}`,error:String(W)}}}async function v7($){let J=$.title.toLowerCase().replace(/[^\w\s-]/g,"").trim().replace(/[\s]+/g,"-").substring(0,30),X=`rsolv/${$.number}-${J}`;try{q.info(`Creating branch: ${X}`);let Q=p(),{owner:Y,name:G}=$.repository;try{await Q.git.createRef({owner:Y,repo:G,ref:`refs/heads/${X}`,sha:await b7(Y,G,$.repository.defaultBranch)}),q.info(`Branch ${X} created successfully`)}catch(W){if(W.status===422)q.warn(`Branch ${X} already exists, using existing branch`);else throw W}return X}catch(Q){return q.error(`Error creating branch ${X}`,Q),q.warn("Development mode: continuing with simulated branch"),X;throw new Error(`Failed to create branch: ${Q instanceof Error?Q.message:String(Q)}`)}}async function b7($,J,X){try{let Q=p(),{data:Y}=await Q.git.getRef({owner:$,repo:J,ref:`heads/${X}`});return Y.object.sha}catch(Q){throw q.error(`Error getting SHA for ${X}`,Q),new Error(`Failed to get SHA for ${X}: ${Q instanceof Error?Q.message:String(Q)}`)}}async function f7($,J,X){try{q.info(`Applying ${Object.keys(J).length} file changes to branch ${$}`);let Q=p(),{owner:Y,name:G}=X.repository,W=5,H=Object.keys(J);for(let z=0;z<H.length;z+=W){let B=H.slice(z,z+W);if(await Promise.all(B.map(async(U)=>{try{let M;try{let F=await Q.repos.getContent({owner:Y,repo:G,path:U,ref:$});if(!Array.isArray(F.data))M=F.data.sha}catch(F){if(F.status!==404)throw F}await Q.repos.createOrUpdateFileContents({owner:Y,repo:G,path:U,message:`Update ${U} for issue #${X.number}`,content:Buffer.from(J[U]).toString("base64"),branch:$,sha:M}),q.debug(`Updated file: ${U}`)}catch(M){throw q.error(`Error updating file ${U}`,M),M}})),z+W<H.length)await new Promise((U)=>setTimeout(U,200))}q.info("All changes applied successfully")}catch(Q){q.error("Error applying changes to branch",Q),q.warn("Development mode: continuing despite errors in applying changes");return}}async function x7($,J,X,Q,Y,G){try{q.info(`Generating PR description for issue #${$.number}`);let W=a$(Q.aiProvider),H=P8($,J,X),B=await W.complete(H,{temperature:0.3,maxTokens:1000,model:Q.aiProvider.model});if(Y&&Y.vulnerabilities&&Y.vulnerabilities.length>0)B+=`

## \uD83D\uDD12 Security Fixes

This PR addresses the following security vulnerabilities:

`,Y.vulnerabilities.forEach((U)=>{B+=`- **${U.severity}**: ${U.type} in \`${U.file}:${U.line}\`
`,B+=`  - Risk: ${U.risk}
`,B+=`  - Fixed by: ${U.recommendation}

`}),B+=`
### Security Impact
`,B+=`- **Vulnerabilities Fixed**: ${Y.vulnerabilities.length}
`,B+=`- **Risk Level**: ${Y.riskLevel||"Medium"}
`,B+=`- **Compliance**: OWASP Top 10 coverage
`;if(G){q.info("Including three-tier explanations in PR description"),B+=`

## \uD83D\uDCDA Educational Explanations

`;let U=G.businessLevelExplanation;if(B+=`### Executive Summary

`,B+=`**Risk Score**: ${U.riskScore}/100

`,B+=`${U.content}

`,B+=`**Key Business Impacts:**
`,B+=`- \uD83D\uDCB0 Financial: ${U.businessImpact.financialImpact}
`,B+=`- \uD83C\uDFE2 Reputation: ${U.businessImpact.reputationalDamage}
`,B+=`- \uD83D\uDCCA Operations: ${U.businessImpact.operationalDisruption}
`,B+=`- \uD83D\uDD12 Data: ${U.businessImpact.dataLoss}

`,U.priorities.length>0)B+=`**Recommended Actions:**
`,U.priorities.forEach((M)=>{B+=`- ${M}
`}),B+=`
`;if(B+=`<details>
<summary>View detailed technical explanations</summary>

`,G.conceptLevelExplanations.length>0)B+=`### Security Concepts

`,G.conceptLevelExplanations.forEach((M)=>{if(B+=`**${M.title}**
`,B+=`${M.content}

`,M.preventionMethods.length>0)B+=`Prevention methods:
`,M.preventionMethods.forEach((F)=>{B+=`- ${F}
`}),B+=`
`});B+=`</details>
`}return B+=`

This PR was automatically generated by [RSOLV](https://rsolv.dev) to address issue #${$.number}.`,B}catch(W){return q.error("Error generating PR description",W),`Fix for issue #${$.number}

This PR addresses the issue "${$.title}" by making changes to ${Object.keys(X).length} files.

This PR was automatically generated by [RSOLV](https://rsolv.dev).`}}async function h7($,J,X,Q){try{let Y=`[RSOLV] ${$.title} (fixes #${$.number})`;q.info(`Creating PR: ${Y}`);let G=p(),{owner:W,name:H}=$.repository,{data:z}=await G.pulls.create({owner:W,repo:H,title:Y,body:X,head:J,base:$.repository.defaultBranch,draft:!1});return q.info(`Pull request created: ${z.html_url}`),await G.issues.addLabels({owner:W,repo:H,issue_number:z.number,labels:["rsolv:automated",`type:${Q.issueType}`]}),await G.issues.createComment({owner:W,repo:H,issue_number:$.number,body:`I've created a pull request to address this issue: ${z.html_url}

This was automatically generated by [RSOLV](https://rsolv.dev).`}),await m7($,z,Y,config),{success:!0,message:"Pull request created successfully",pullRequestUrl:z.html_url,pullRequestNumber:z.number}}catch(Y){q.error("Error creating GitHub PR",Y);{q.warn("Development mode: returning mock PR due to error");let G=Math.floor(Math.random()*1000)+1;return{success:!0,message:"Pull request created successfully (dev fallback)",pullRequestUrl:`https://github.com/${$.repository.fullName}/pull/${G}`,pullRequestNumber:G}}throw new Error(`Failed to create GitHub PR: ${Y instanceof Error?Y.message:String(Y)}`)}}async function m7($,J,X,Q){try{let Y=process.env.RSOLV_API_URL||"https://api.rsolv.dev",G=process.env.RSOLV_API_KEY||Q.rsolvApiKey;if(!G){q.warn("RSOLV API key not configured, skipping fix attempt recording");return}let W=new b6({baseUrl:Y,apiKey:G}),H={github_org:$.repository.owner,repo_name:$.repository.name,issue_number:$.number,pr_number:J.number,pr_title:X,pr_url:J.html_url,issue_title:$.title,issue_url:$.url,api_key_used:G,metadata:{branch:J.head?.ref||`rsolv/${$.number}`,labels:["rsolv:automated"],created_by:"rsolv-action"}};q.info(`Recording fix attempt for PR #${J.number}`);let z=await W.recordFixAttempt(H);if(z.success)q.info(`Fix attempt recorded successfully: ID ${z.data?.id}`);else q.error(`Failed to record fix attempt: ${z.error}`)}catch(Y){q.error("Error recording fix attempt",Y)}}v();import f6 from"fs";import b8 from"path";class x6 extends K1{contextCache=new Map;cacheTimeout=3600000;constructor($,J=process.cwd(),X){super($,J,X);if($.claudeCodeConfig?.contextCacheDuration)this.cacheTimeout=$.claudeCodeConfig.contextCacheDuration}async gatherDeepContext($,J){let X=`${$.repository.fullName}-${J.contextDepth}`;if(this.contextCache.has(X)){let Y=this.contextCache.get(X);return q.info("Using cached repository context"),Y}q.info(`Starting deep context gathering with depth: ${J.contextDepth}`);let Q=Date.now();try{let Y=this.buildContextGatheringPrompt($,J),G=b8.join(this.tempDir,`context-prompt-${Date.now()}.txt`);f6.writeFileSync(G,Y);let W=b8.join(this.tempDir,`context-${Date.now()}.json`),H=await this.executeClaudeCode(G,W,{startTime:Q,issueId:$.id,successful:!1},J.maxExplorationTime),z=await this.parseContextResult(H);this.contextCache.set(X,z),this.cleanupTempFiles([G,W]);let B=Date.now()-Q;return q.info(`Deep context gathering completed in ${B}ms`),z}catch(Y){return q.error("Error gathering deep context",Y),this.createMinimalContext()}}async generateEnhancedSolution($,J,X){q.info("Generating enhanced solution with deep context");let Q=await this.gatherDeepContext($,{enableUltraThink:!0,maxExplorationTime:this.config.claudeCodeConfig?.contextGatheringTimeout||300000,contextDepth:this.config.claudeCodeConfig?.contextDepth||"deep",includeArchitectureAnalysis:!0,includeTestPatterns:!0,includeStyleGuide:!0,includeDependencyAnalysis:!0}),Y=this.buildEnhancedSolutionPrompt($,J,Q,X);return await this.generateSolution($,J,Y)}buildContextGatheringPrompt($,J){return`${J.enableUltraThink?`ultrathink

`:""}I need you to perform a comprehensive analysis of this repository to gather deep context for solving an issue.

Issue Context:
Title: ${$.title}
Description: ${$.body}

Repository: ${$.repository.fullName}
Language: ${$.repository.language||"Unknown"}

Exploration Depth: ${J.contextDepth}

Please analyze the repository and provide detailed information about:

1. Architecture and Design Patterns
   - Overall architecture style
   - Main design patterns used
   - Component organization
   - Module structure

2. Code Conventions and Style
   - Naming conventions for files, functions, variables
   - Import/export patterns
   - Comment and documentation style
   - Error handling patterns

3. Testing Framework and Patterns
   - Test framework(s) used
   - Test file organization
   - Test naming conventions
   - Mocking strategies

4. Dependencies and External Libraries
   - Runtime dependencies and their usage
   - Development dependencies
   - Build tools and configurations
   - External API integrations

5. Related Components
   - Files likely to be affected by this issue
   - Related modules and interfaces
   - Shared utilities or helpers
   - Configuration files

${J.includeStyleGuide?`6. Style Guide and Best Practices
   - Code formatting rules
   - Documentation requirements
   - Security practices
   - Performance considerations
`:""}

Explore the repository comprehensively, examining:
- Configuration files (package.json, tsconfig.json, etc.)
- README and documentation
- Build and CI/CD configurations
- Test suites and examples
- Similar implementations to the requested feature

Take your time to understand the codebase deeply. Look for patterns, conventions, and architectural decisions that should be followed when implementing the solution.

Format your response as a JSON object with the structure defined in the RepositoryContext interface.`}buildEnhancedSolutionPrompt($,J,X,Q){if(Q)return`ultrathink

${Q}

Additional Repository Context:
${JSON.stringify(X,null,2)}

Use this deep understanding of the repository to ensure your solution:
- Follows all established patterns and conventions
- Integrates seamlessly with existing architecture
- Includes tests that match the project's testing style
- Handles errors consistently with the rest of the codebase`;return`ultrathink

Using the comprehensive repository context I've gathered, generate a solution for:

Issue: ${$.title}
Description: ${$.body}

Repository Context Summary:
- Architecture: ${X.architecture.patterns.join(", ")}
- Main Components: ${X.architecture.mainComponents.join(", ")}
- Testing Framework: ${X.testingPatterns.framework}
- Code Style: ${X.codeConventions.namingPatterns.join(", ")}
- Error Handling: ${X.styleGuide.errorHandling}

Related Components that may need updates:
${X.relatedComponents.files.join(`
`)}

Generate a solution that:
1. Follows the exact patterns found in: ${X.codeConventions.fileOrganization}
2. Uses the same naming conventions as existing code
3. Includes comprehensive tests matching the style in the test directory
4. Handles errors using the pattern: ${X.styleGuide.errorHandling}
5. Updates all related components identified above
6. Maintains architectural consistency with the ${X.architecture.structure} structure
7. Uses appropriate dependencies from: ${X.dependencies.runtime.join(", ")}

Take time to think through all implications and create a production-ready solution that feels native to this codebase.

Format your response as a JSON object with title, description, files, and tests.`}async parseContextResult($){try{let J;if($.includes(`
`)){let X=$.split(`
`).filter((Y)=>Y.trim()),Q=X[X.length-1];J=JSON.parse(Q)}else J=JSON.parse($);return{architecture:J.architecture||this.createMinimalContext().architecture,codeConventions:J.codeConventions||this.createMinimalContext().codeConventions,testingPatterns:J.testingPatterns||this.createMinimalContext().testingPatterns,dependencies:J.dependencies||this.createMinimalContext().dependencies,relatedComponents:J.relatedComponents||this.createMinimalContext().relatedComponents,styleGuide:J.styleGuide||this.createMinimalContext().styleGuide}}catch(J){return q.error("Error parsing context result",J),this.createMinimalContext()}}createMinimalContext(){return{architecture:{patterns:["Unknown"],structure:"Standard",mainComponents:[]},codeConventions:{namingPatterns:["camelCase"],fileOrganization:"Standard",importPatterns:[]},testingPatterns:{framework:"Unknown",structure:"Standard",conventions:[]},dependencies:{runtime:[],dev:[],patterns:[]},relatedComponents:{files:[],modules:[],interfaces:[]},styleGuide:{formatting:"Standard",documentation:"JSDoc",errorHandling:"try-catch"}}}cleanupTempFiles($){for(let J of $)try{if(f6.existsSync(J))f6.unlinkSync(J)}catch(X){q.warn(`Failed to clean up temp file: ${J}`,X)}}clearContextCache(){this.contextCache.clear(),q.info("Context cache cleared")}getCacheStats(){return{size:this.contextCache.size,keys:Array.from(this.contextCache.keys())}}}async function f8($,J,X={},Q){q.info(`Processing ${$.length} issues with AI`);let Y=[];for(let G of $)try{q.info(`Processing issue #${G.number}: ${G.title}`);let W=await y7(G,J,X,Q);if(Y.push(W),W.success)q.info(`Successfully processed issue #${G.number}. PR: ${W.pullRequestUrl}`);else q.warn(`Failed to process issue #${G.number}: ${W.message}`)}catch(W){q.error(`Error processing issue #${G.number}`,W),Y.push({issueId:G.id,success:!1,message:n(`Error processing issue: ${W instanceof Error?W.message:String(W)}`),error:n(String(W))})}return Y}async function y7($,J,X={},Q){let Y=Date.now();try{q.info(`Analyzing issue #${$.number}`);let G,W;if(X.enableSecurityAnalysis&&J.enableSecurityAnalysis!==!1){q.info(`Using security-aware analysis for issue #${$.number}`);let F=await new k6().analyzeWithSecurity($,J);G=F,W=F.securityAnalysis}else G=await E6($,J,Q?.aiClient);if(!G||!G.canBeFixed)return{issueId:$.id,success:!1,message:"Issue cannot be automatically fixed based on analysis"};q.info(`Generating solution for issue #${$.number}`);let H,z,B;if(X.enableEnhancedContext&&J.aiProvider.provider==="claude-code"){let M={provider:J.aiProvider.provider,apiKey:J.aiProvider.apiKey,model:J.aiProvider.model,temperature:J.aiProvider.temperature,maxTokens:J.aiProvider.maxTokens,useVendedCredentials:J.aiProvider.useVendedCredentials,claudeCodeConfig:{...J.claudeCodeConfig,enableDeepContext:!0,enableUltraThink:X.contextDepth==="ultra",contextDepth:X.contextDepth||"deep",contextGatheringTimeout:X.contextGatheringTimeout||600000,verboseLogging:X.verboseLogging||!1}},F;if(q.info(`Enhanced context setup - useVendedCredentials: ${J.aiProvider.useVendedCredentials}, rsolvApiKey: ${J.rsolvApiKey?"present":"missing"}`),J.aiProvider.useVendedCredentials&&J.rsolvApiKey){q.info("Creating credential manager for vended credentials");let{RSOLVCredentialManager:S}=await Promise.resolve().then(() => (h1(),S6));F=new S,await F.initialize(J.rsolvApiKey),q.info("Credential manager initialized successfully")}else q.info(`Skipping credential manager - useVended: ${J.aiProvider.useVendedCredentials}, apiKey: ${J.rsolvApiKey?"present":"missing"}`);let O=Date.now();q.info(`Creating EnhancedClaudeCodeAdapter with credentialManager: ${!!F}`),B=await new x6(M,process.cwd(),F).gatherDeepContext($,{contextDepth:X.contextDepth||"standard",maxExplorationTime:X.contextGatheringTimeout||600000,includeTests:!0,includeStyleGuide:!0}),z=Date.now()-O,H=await v6($,G,J,Q?.aiClient,Q?.fileGetter,W)}else H=await v6($,G,J,Q?.aiClient,Q?.fileGetter,W);if(!H||!H.success||!H.changes||Object.keys(H.changes).length===0)return{issueId:$.id,success:!1,message:H?.message||"No solution generated"};q.info(`Creating pull request for issue #${$.number}`);let U=await v8($,H.changes,G,J,W,H.explanations);return{issueId:$.id,success:U.success,pullRequestUrl:U.pullRequestUrl,message:U.message,analysisData:G,contextGatheringTime:z,deepContext:X.verboseLogging?B:void 0,enhancedSolution:X.enableEnhancedContext,securityAnalysis:W}}catch(G){return q.error(`Error processing issue #${$.number}`,G),{issueId:$.id,success:!1,message:n(`Error processing issue: ${G instanceof Error?G.message:String(G)}`),error:n(String(G)),processingTime:Date.now()-Y}}}v();v();import{exec as g7}from"child_process";import{promisify as u7}from"util";var w1=u7(g7);class x8{async checkAvailability(){let{stdout:$}=await w1('docker version --format "{{.Server.Version}}"');return $.trim()}async pullImage($){let{stdout:J,stderr:X}=await w1(`docker pull ${$}`);if(q.debug(`Docker pull output: ${J}`),X)q.warn(`Docker pull stderr: ${X}`)}async runContainer($){return await w1($)}async stopContainer($){await w1(`docker stop ${$}`)}async removeContainer($){await w1(`docker rm ${$}`)}}function h8(){return new x8}async function m8($,J){try{if(!$.containerConfig.enabled){q.info("Container analysis is disabled, skipping container setup");return}q.info("Setting up analysis container"),d7($.containerConfig);let X=J||h8();try{await c7(X)}catch(Q){q.warn("Docker not available, disabling container analysis",Q),$.containerConfig.enabled=!1;return}await l7($.containerConfig,X),await p7($.containerConfig,$.securitySettings),q.info("Container setup completed successfully")}catch(X){throw q.error("Container setup failed",X),new Error(`Failed to set up analysis container: ${X instanceof Error?X.message:String(X)}`)}}function d7($){if(!$.image)throw new Error("Container image is required when container analysis is enabled");if($.memoryLimit&&!/^\d+[gmk]?b?$/i.test($.memoryLimit))throw new Error(`Invalid memory limit format: ${$.memoryLimit}`);if($.cpuLimit&&!/^\d+(\.\d+)?$/i.test($.cpuLimit))throw new Error(`Invalid CPU limit format: ${$.cpuLimit}`);if($.timeout&&(typeof $.timeout!=="number"||$.timeout<=0))throw new Error(`Invalid timeout value: ${$.timeout}`)}async function c7($){try{q.debug("Checking Docker availability");let J=await $.checkAvailability();q.debug(`Docker version: ${J}`)}catch(J){throw q.error("Docker is not available",J),new Error("Docker is required for container analysis but is not available or running")}}async function l7($,J){try{let X=$.image||"rsolv/code-analysis:latest";q.info(`Pulling container image: ${X}`);try{await J.pullImage(X)}catch(Q){q.warn(`Failed to pull image but continuing in development mode: ${Q instanceof Error?Q.message:String(Q)}`)}q.info(`Container image ${X} is ready`)}catch(X){throw q.error("Failed to pull container image",X),new Error(`Failed to pull container image: ${X instanceof Error?X.message:String(X)}`)}}async function p7($,J){try{switch(q.info("Configuring container with security settings"),$.securityProfile||"default"){case"strict":q.info("Applying strict security profile to container");break;case"relaxed":q.info("Applying relaxed security profile to container");break;case"default":default:q.info("Applying default security profile to container");break}if(J.disableNetworkAccess)q.info("Disabling network access for container");else if(J.allowedDomains&&J.allowedDomains.length>0)q.info(`Restricting network access to domains: ${J.allowedDomains.join(", ")}`);if($.memoryLimit)q.info(`Setting container memory limit: ${$.memoryLimit}`);if($.cpuLimit)q.info(`Setting container CPU limit: ${$.cpuLimit}`);if($.environmentVariables&&Object.keys($.environmentVariables).length>0)q.info(`Setting ${Object.keys($.environmentVariables).length} environment variables`);q.info("Container configuration completed")}catch(X){throw q.error("Failed to configure container",X),new Error(`Failed to configure container: ${X instanceof Error?X.message:String(X)}`)}}v();class h6{detector;github;constructor(){this.detector=new O$(E$()),this.github=p()}async scan($){q.info(`Starting vulnerability scan for ${$.repository.owner}/${$.repository.name}`);let J=Date.now(),X=await this.getRepositoryFiles($),Q=[];q.info(`Found ${X.length} files to scan`);for(let W of X)if(W.language&&this.isSupportedLanguage(W.language))try{let H=await this.detector.detect(W.content,W.language);if(H.forEach((z)=>{z.filePath=W.path}),Q.push(...H),H.length>0)q.info(`Found ${H.length} vulnerabilities in ${W.path}`)}catch(H){q.error(`Error scanning file ${W.path}:`,H)}let Y=this.groupVulnerabilities(Q),G=Date.now()-J;return q.info(`Scan completed in ${G}ms. Found ${Q.length} vulnerabilities`),{repository:`${$.repository.owner}/${$.repository.name}`,branch:$.repository.defaultBranch,scanDate:new Date().toISOString(),totalFiles:X.length,scannedFiles:X.filter((W)=>W.language&&this.isSupportedLanguage(W.language)).length,vulnerabilities:Q,groupedVulnerabilities:Y,createdIssues:[]}}async getRepositoryFiles($){let J=[];try{let{data:X}=await this.github.git.getTree({owner:$.repository.owner,repo:$.repository.name,tree_sha:$.repository.defaultBranch,recursive:"1"}),Q=X.tree.filter((Y)=>Y.type==="blob"&&Y.path&&this.isCodeFile(Y.path)&&Y.size&&Y.size<1e6);for(let Y of Q){if(!Y.path||!Y.sha)continue;try{let{data:G}=await this.github.git.getBlob({owner:$.repository.owner,repo:$.repository.name,file_sha:Y.sha}),W=Buffer.from(G.content,"base64").toString("utf-8"),H=this.detectLanguage(Y.path);if(H)J.push({path:Y.path,content:W,language:H})}catch(G){q.error(`Error fetching content for ${Y.path}:`,G)}}}catch(X){throw q.error("Error getting repository files:",X),X}return J}isCodeFile($){return[".js",".jsx",".ts",".tsx",".mjs",".cjs",".py",".pyw",".rb",".rake",".java",".php",".phtml",".ex",".exs"].some((X)=>$.endsWith(X))}detectLanguage($){let J={".js":"javascript",".jsx":"javascript",".ts":"typescript",".tsx":"typescript",".mjs":"javascript",".cjs":"javascript",".py":"python",".pyw":"python",".rb":"ruby",".rake":"ruby",".java":"java",".php":"php",".phtml":"php",".ex":"elixir",".exs":"elixir"},X=$.substring($.lastIndexOf("."));return J[X]||null}isSupportedLanguage($){return["javascript","typescript","python","ruby","java","php","elixir"].includes($.toLowerCase())}groupVulnerabilities($){let J=new Map;for(let X of $){let Q=`${X.type}-${X.severity}`;if(!J.has(Q))J.set(Q,{type:X.type,severity:X.severity,count:0,files:[],vulnerabilities:[]});let Y=J.get(Q);if(Y.count++,Y.vulnerabilities.push(X),X.filePath&&!Y.files.includes(X.filePath))Y.files.push(X.filePath)}return Array.from(J.values()).sort((X,Q)=>{let Y={high:0,medium:1,low:2},G=Y[X.severity]-Y[Q.severity];return G!==0?G:Q.count-X.count})}}v();class m6{github;constructor(){this.github=p()}async createIssuesFromGroups($,J){let X=[];if(!J.createIssues)return q.info("Issue creation disabled, skipping"),X;q.info(`Creating issues for ${$.length} vulnerability groups`);for(let Q of $)try{let Y=await this.createIssueForGroup(Q,J);X.push(Y),q.info(`Created issue #${Y.number} for ${Q.type} vulnerabilities`)}catch(Y){q.error(`Failed to create issue for ${Q.type}:`,Y)}return X}async createIssueForGroup($,J){let X=this.generateIssueTitle($),Q=this.generateIssueBody($,J),{data:Y}=await this.github.issues.create({owner:J.repository.owner,repo:J.repository.name,title:X,body:Q,labels:[J.issueLabel,"security",$.severity,"automated-scan"]});return{number:Y.number,title:Y.title,url:Y.html_url,vulnerabilityType:$.type,fileCount:$.files.length}}generateIssueTitle($){let J={"sql-injection":"SQL Injection",xss:"Cross-Site Scripting (XSS)","command-injection":"Command Injection","path-traversal":"Path Traversal","weak-crypto":"Weak Cryptography","hardcoded-secret":"Hardcoded Secrets","insecure-random":"Insecure Random Number Generation","open-redirect":"Open Redirect",xxe:"XML External Entity (XXE)",ssrf:"Server-Side Request Forgery (SSRF)","nosql-injection":"NoSQL Injection","ldap-injection":"LDAP Injection","xpath-injection":"XPath Injection","weak-hash":"Weak Hashing Algorithm","insecure-deserialization":"Insecure Deserialization"},X=$.type||"security-vulnerability",Q=J[X]||X.replace(/-/g," ").replace(/\b\w/g,(W)=>W.toUpperCase()),Y=$.files.length;return`\uD83D\uDD12 ${Q} vulnerabilities found in ${Y} ${Y===1?"file":"files"}`}generateIssueBody($,J){let X=[];X.push("## Security Vulnerability Report"),X.push("");let Q=$.type||"security-vulnerability";X.push(`**Type**: ${Q.replace(/-/g," ").replace(/\b\w/g,(G)=>G.toUpperCase())}`),X.push(`**Severity**: ${$.severity.toUpperCase()}`),X.push(`**Total Instances**: ${$.count}`),X.push(`**Affected Files**: ${$.files.length}`),X.push(""),X.push("### Description"),X.push(this.getVulnerabilityDescription(Q)),X.push(""),X.push("### Affected Files"),X.push("");let Y=new Map;for(let G of $.vulnerabilities){if(!G.filePath)continue;if(!Y.has(G.filePath))Y.set(G.filePath,[]);Y.get(G.filePath).push(G)}for(let[G,W]of Y){X.push(`#### \`${G}\``),X.push("");for(let H of W.slice(0,3))if(X.push(`- **Line ${H.line}**: ${H.description}`),H.snippet)X.push("  ```"+this.detectLanguageFromPath(G)),X.push("  "+H.snippet.trim()),X.push("  ```");if(W.length>3)X.push(`- ... and ${W.length-3} more instances`);X.push("")}return X.push("### Recommendation"),X.push(this.getVulnerabilityRecommendation(Q)),X.push(""),X.push("---"),X.push("*This issue was automatically generated by RSOLV security scanner*"),X.push(`*Repository: ${J.repository.owner}/${J.repository.name}*`),X.push(`*Branch: ${J.repository.defaultBranch}*`),X.push(`*Scan Date: ${new Date().toISOString()}*`),X.join(`
`)}getVulnerabilityDescription($){return{"sql-injection":"SQL injection vulnerabilities occur when user input is directly concatenated into SQL queries without proper sanitization or parameterization. This can allow attackers to execute arbitrary SQL commands.",xss:"Cross-Site Scripting (XSS) vulnerabilities occur when user input is rendered in HTML without proper escaping. This can allow attackers to inject malicious scripts that execute in other users' browsers.","command-injection":"Command injection vulnerabilities occur when user input is passed directly to system commands. This can allow attackers to execute arbitrary system commands on the server.","path-traversal":"Path traversal vulnerabilities occur when user input is used to construct file paths without proper validation. This can allow attackers to access files outside the intended directory.","weak-crypto":"Weak cryptography vulnerabilities occur when outdated or insecure cryptographic algorithms are used. This can make encrypted data vulnerable to decryption by attackers.","hardcoded-secret":"Hardcoded secrets in source code can be exposed if the code is leaked or accessed by unauthorized parties. This includes API keys, passwords, and other sensitive credentials.","insecure-random":"Using insecure random number generators for security-critical operations can make systems predictable and vulnerable to attacks.","open-redirect":"Open redirect vulnerabilities occur when user input is used to construct redirect URLs without validation. This can be used in phishing attacks.",xxe:"XML External Entity (XXE) vulnerabilities occur when XML parsers process external entity references. This can lead to file disclosure, SSRF, or denial of service.",ssrf:"Server-Side Request Forgery (SSRF) vulnerabilities occur when user input is used to make HTTP requests from the server. This can allow access to internal resources.","nosql-injection":"NoSQL injection vulnerabilities occur when user input is used in NoSQL queries without proper sanitization. This can allow attackers to manipulate queries and access unauthorized data.","ldap-injection":"LDAP injection vulnerabilities occur when user input is used in LDAP queries without proper escaping. This can allow attackers to modify LDAP queries and bypass authentication.","xpath-injection":"XPath injection vulnerabilities occur when user input is used in XPath queries without proper sanitization. This can allow attackers to extract sensitive data from XML documents.","weak-hash":"Weak hashing algorithms like MD5 or SHA1 are vulnerable to collision attacks and should not be used for security-critical operations.","insecure-deserialization":"Insecure deserialization vulnerabilities occur when untrusted data is deserialized without proper validation. This can lead to remote code execution."}[$]||"This type of vulnerability can compromise the security of your application."}getVulnerabilityRecommendation($){return{"sql-injection":"Use parameterized queries or prepared statements instead of string concatenation. Never trust user input and always validate and sanitize it before use in SQL queries.",xss:"Always escape user input before rendering it in HTML. Use context-appropriate escaping functions and consider using a templating engine that provides automatic escaping.","command-injection":"Avoid executing system commands with user input. If necessary, use a whitelist of allowed values and escape shell metacharacters. Consider using language-specific APIs instead of shell commands.","path-traversal":"Validate and sanitize file paths. Use a whitelist of allowed directories and files. Resolve paths to their canonical form and ensure they stay within allowed boundaries.","weak-crypto":"Replace weak cryptographic algorithms with strong, modern alternatives. Use AES for encryption, SHA-256 or better for hashing, and ensure proper key management.","hardcoded-secret":"Remove hardcoded secrets from source code. Use environment variables, secure key management systems, or configuration files that are not committed to version control.","insecure-random":"Use cryptographically secure random number generators (CSPRNGs) for security-critical operations. Most languages provide secure alternatives to standard random functions.","open-redirect":"Validate redirect URLs against a whitelist of allowed domains. Avoid using user input directly in redirect locations.",xxe:"Disable XML external entity processing in XML parsers. Configure parsers to not resolve external entities or DTDs.",ssrf:"Validate and whitelist URLs before making requests. Implement network segmentation to limit access to internal resources.","nosql-injection":"Sanitize and validate user input before using it in NoSQL queries. Use parameterized queries where available and avoid string concatenation.","ldap-injection":"Escape special LDAP characters in user input. Use parameterized LDAP queries and validate input against expected patterns.","xpath-injection":"Use parameterized XPath queries or escape user input properly. Validate input against expected patterns and avoid dynamic query construction.","weak-hash":"Replace MD5 and SHA1 with SHA-256 or better for security operations. For password hashing, use bcrypt, scrypt, or Argon2.","insecure-deserialization":"Avoid deserializing untrusted data. If necessary, use safe serialization formats like JSON and validate the structure before processing."}[$]||"Review and fix the identified vulnerabilities according to security best practices."}detectLanguageFromPath($){let J=$.substring($.lastIndexOf("."));return{".js":"javascript",".jsx":"javascript",".ts":"typescript",".tsx":"typescript",".py":"python",".rb":"ruby",".java":"java",".php":"php",".ex":"elixir",".exs":"elixir"}[J]||""}}v();class u1{scanner;issueCreator;constructor(){this.scanner=new h6,this.issueCreator=new m6}async performScan($){q.info("Starting proactive security scan");try{let J=await this.scanner.scan($);if($.createIssues&&J.groupedVulnerabilities.length>0){q.info(`Creating issues for ${J.groupedVulnerabilities.length} vulnerability groups`);let X=await this.issueCreator.createIssuesFromGroups(J.groupedVulnerabilities,$);J.createdIssues=X,q.info(`Created ${X.length} issues`)}return this.logScanSummary(J),J}catch(J){throw q.error("Scan failed:",J),J}}logScanSummary($){if(q.info(""),q.info("=== SECURITY SCAN SUMMARY ==="),q.info(`Repository: ${$.repository}`),q.info(`Branch: ${$.branch}`),q.info(`Files scanned: ${$.scannedFiles}/${$.totalFiles}`),q.info(`Total vulnerabilities: ${$.vulnerabilities.length}`),q.info(""),$.groupedVulnerabilities.length>0){q.info("Vulnerabilities by type:");for(let J of $.groupedVulnerabilities)q.info(`  - ${J.type} (${J.severity}): ${J.count} instances in ${J.files.length} files`);q.info("")}if($.createdIssues.length>0){q.info("Created issues:");for(let J of $.createdIssues)q.info(`  - #${J.number}: ${J.title}`),q.info(`    ${J.url}`);q.info("")}q.info("=============================")}}async function n7(){try{q.info("Starting RSOLV action v2.0 - Enhanced Logging Active"),q.info(`Build timestamp: ${new Date().toISOString()}`);let $=await d0();if(q.info("Configuration loaded successfully"),(process.env.RSOLV_SCAN_MODE||"fix")==="scan"){q.info("Running in SCAN mode - proactive vulnerability detection");let H=process.env.GITHUB_REPOSITORY;if(!H)throw new Error("GITHUB_REPOSITORY environment variable not set");let[z,B]=H.split("/"),U=await b1(z,B),F=await new u1().performScan({mode:"scan",repository:{owner:z,name:B,defaultBranch:U.defaultBranch||"main"},createIssues:!0,batchSimilar:!0,issueLabel:$.issueLabel||"rsolv:automate"});if(process.env.GITHUB_OUTPUT){let O=await import("fs");O.appendFileSync(process.env.GITHUB_OUTPUT,`scan_results=${JSON.stringify(F)}
`),O.appendFileSync(process.env.GITHUB_OUTPUT,`created_issues=${JSON.stringify(F.createdIssues)}
`)}return{success:!0,message:`Security scan completed. Found ${F.vulnerabilities.length} vulnerabilities and created ${F.createdIssues.length} issues.`}}q.info("Running in FIX mode - processing existing issues"),await L8($),q.info("Security check passed"),await m8($),q.info("Analysis container ready");let X=await D8($);if(q.info(`Found ${X.length} issues for automation across all platforms`),X.length===0)return q.info("No issues to process, exiting"),{success:!0,message:"No issues found for automation"};let Q={enableSecurityAnalysis:$.enableSecurityAnalysis!==!1,enableEnhancedContext:!0,verboseLogging:process.env.DEBUG==="true"},Y=1200000,G=new Promise((H,z)=>{setTimeout(()=>{z(new Error(`Workflow timeout: Processing ${X.length} issues took longer than ${Y/1000} seconds`))},Y)}),W=await Promise.race([f8(X,$,Q),G]);return q.info(`Successfully processed ${W.filter((H)=>H.success).length}/${X.length} issues`),{success:!0,message:`RSOLV action completed successfully. Processed ${W.length} issues.`}}catch($){return q.error("Action failed",$),{success:!1,message:`RSOLV action failed: ${$ instanceof Error?$.message:String($)}`}}}n7().then(($)=>{if($.success)process.exit(0);else process.exit(1)});
