{"numTotalTestSuites":76,"numPassedTestSuites":69,"numFailedTestSuites":7,"numPendingTestSuites":0,"numTotalTests":141,"numPassedTests":123,"numFailedTests":4,"numPendingTests":14,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1760046912086,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Memory Investigation"],"fullName":"Memory Investigation should check pattern loading without detection","status":"passed","title":"should check pattern loading without detection","duration":220.32967400000052,"failureMessages":[],"meta":{}},{"ancestorTitles":["Memory Investigation"],"fullName":"Memory Investigation should test small code detection","status":"passed","title":"should test small code detection","duration":7.260943000001134,"failureMessages":[],"meta":{}},{"ancestorTitles":["Memory Investigation"],"fullName":"Memory Investigation should check AST interpreter directly","status":"passed","title":"should check AST interpreter directly","duration":0.21316900000056194,"failureMessages":[],"meta":{}}],"startTime":1760046927586,"endTime":1760046927814.2131,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/test/memory-investigation.test.ts"},{"assertionResults":[{"ancestorTitles":["GREEN Phase - Server AST Integration Working","New Detector with Server AST"],"fullName":"GREEN Phase - Server AST Integration Working New Detector with Server AST should use ElixirASTAnalyzer when API key is provided","status":"passed","title":"should use ElixirASTAnalyzer when API key is provided","duration":0.2198580000003858,"failureMessages":[],"meta":{}},{"ancestorTitles":["GREEN Phase - Server AST Integration Working","New Detector with Server AST"],"fullName":"GREEN Phase - Server AST Integration Working New Detector with Server AST should fall back to client-side AST when no API key","status":"passed","title":"should fall back to client-side AST when no API key","duration":0.1877329999988433,"failureMessages":[],"meta":{}},{"ancestorTitles":["GREEN Phase - Server AST Integration Working","New Detector with Server AST"],"fullName":"GREEN Phase - Server AST Integration Working New Detector with Server AST should support multiple languages with server AST","status":"passed","title":"should support multiple languages with server AST","duration":0.36188899999979185,"failureMessages":[],"meta":{}},{"ancestorTitles":["GREEN Phase - Server AST Integration Working","New Detector with Server AST"],"fullName":"GREEN Phase - Server AST Integration Working New Detector with Server AST should only support JS/TS without server AST","status":"passed","title":"should only support JS/TS without server AST","duration":0.19165699999939534,"failureMessages":[],"meta":{}},{"ancestorTitles":["GREEN Phase - Server AST Integration Working","Mock Server AST Detection"],"fullName":"GREEN Phase - Server AST Integration Working Mock Server AST Detection should handle Python code through server AST","status":"skipped","title":"should handle Python code through server AST","failureMessages":[],"meta":{}},{"ancestorTitles":["GREEN Phase - Server AST Integration Working","Mock Server AST Detection"],"fullName":"GREEN Phase - Server AST Integration Working Mock Server AST Detection should reject unsupported languages gracefully","status":"passed","title":"should reject unsupported languages gracefully","duration":0.312208000001192,"failureMessages":[],"meta":{}},{"ancestorTitles":["GREEN Phase - Server AST Integration Working","Configuration Options"],"fullName":"GREEN Phase - Server AST Integration Working Configuration Options should respect useServerAST=false even with API key","status":"passed","title":"should respect useServerAST=false even with API key","duration":0.1867050000000745,"failureMessages":[],"meta":{}},{"ancestorTitles":["GREEN Phase - Server AST Integration Working","Configuration Options"],"fullName":"GREEN Phase - Server AST Integration Working Configuration Options should use environment variables as fallback","status":"passed","title":"should use environment variables as fallback","duration":0.1319130000010773,"failureMessages":[],"meta":{}}],"startTime":1760046927556,"endTime":1760046927558.1868,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/test/server-ast-green-phase.test.ts"},{"assertionResults":[{"ancestorTitles":["Server-Side AST Integration","AST Integration Tests"],"fullName":"Server-Side AST Integration AST Integration Tests should use ASTPatternInterpreter for vulnerability detection","status":"passed","title":"should use ASTPatternInterpreter for vulnerability detection","duration":0.7489839999998367,"failureMessages":[],"meta":{}},{"ancestorTitles":["Server-Side AST Integration","AST Integration Tests"],"fullName":"Server-Side AST Integration AST Integration Tests should detect JavaScript eval injection","status":"passed","title":"should detect JavaScript eval injection","duration":33.74695400000019,"failureMessages":[],"meta":{}},{"ancestorTitles":["Server-Side AST Integration","AST Integration Tests"],"fullName":"Server-Side AST Integration AST Integration Tests should detect Python SQL injection via server AST","status":"skipped","title":"should detect Python SQL injection via server AST","failureMessages":[],"meta":{}},{"ancestorTitles":["Server-Side AST Integration","AST Integration Tests"],"fullName":"Server-Side AST Integration AST Integration Tests should detect Ruby command injection via server AST","status":"skipped","title":"should detect Ruby command injection via server AST","failureMessages":[],"meta":{}},{"ancestorTitles":["Server-Side AST Integration","AST Integration Tests"],"fullName":"Server-Side AST Integration AST Integration Tests should detect PHP XSS via server AST","status":"skipped","title":"should detect PHP XSS via server AST","failureMessages":[],"meta":{}},{"ancestorTitles":["Server-Side AST Integration","AST Integration Tests"],"fullName":"Server-Side AST Integration AST Integration Tests should achieve >90% accuracy on mixed language corpus","status":"skipped","title":"should achieve >90% accuracy on mixed language corpus","failureMessages":[],"meta":{}},{"ancestorTitles":["Server-Side AST Integration","AST Integration Tests"],"fullName":"Server-Side AST Integration AST Integration Tests should use server-side AST service endpoint","status":"skipped","title":"should use server-side AST service endpoint","failureMessages":[],"meta":{}},{"ancestorTitles":["Server-Side AST Integration","Test Infrastructure"],"fullName":"Server-Side AST Integration Test Infrastructure should have ElixirASTAnalyzer class available","status":"passed","title":"should have ElixirASTAnalyzer class available","duration":0.2159030000002531,"failureMessages":[],"meta":{}}],"startTime":1760046927468,"endTime":1760046927503.2158,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/test/server-ast-integration.test.ts"},{"assertionResults":[{"ancestorTitles":["Vendor Detection File Extraction (RFC-047 Fix)"],"fullName":"Vendor Detection File Extraction (RFC-047 Fix) should extract files from vulnerabilities with singular \"file\" property","status":"passed","title":"should extract files from vulnerabilities with singular \"file\" property","duration":0.1871530000007624,"failureMessages":[],"meta":{}},{"ancestorTitles":["Vendor Detection File Extraction (RFC-047 Fix)"],"fullName":"Vendor Detection File Extraction (RFC-047 Fix) should extract files from vulnerabilities with plural \"files\" property","status":"passed","title":"should extract files from vulnerabilities with plural \"files\" property","duration":0.10413800000060291,"failureMessages":[],"meta":{}},{"ancestorTitles":["Vendor Detection File Extraction (RFC-047 Fix)"],"fullName":"Vendor Detection File Extraction (RFC-047 Fix) should handle mixed vulnerabilities with both file and files properties","status":"passed","title":"should handle mixed vulnerabilities with both file and files properties","duration":0.10594900000069174,"failureMessages":[],"meta":{}},{"ancestorTitles":["Vendor Detection File Extraction (RFC-047 Fix)"],"fullName":"Vendor Detection File Extraction (RFC-047 Fix) should return empty array for vulnerabilities without file properties","status":"passed","title":"should return empty array for vulnerabilities without file properties","duration":0.058487000000241096,"failureMessages":[],"meta":{}},{"ancestorTitles":["Vendor Detection File Extraction (RFC-047 Fix)"],"fullName":"Vendor Detection File Extraction (RFC-047 Fix) OLD BROKEN CODE: should demonstrate the bug","status":"passed","title":"OLD BROKEN CODE: should demonstrate the bug","duration":0.04877200000009907,"failureMessages":[],"meta":{}}],"startTime":1760046927818,"endTime":1760046927819.0488,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/test/vendor-detection-file-extraction.test.ts"},{"assertionResults":[{"ancestorTitles":["Issue Limiting Logic"],"fullName":"Issue Limiting Logic should slice issues array when maxIssues is set","status":"passed","title":"should slice issues array when maxIssues is set","duration":0.21794799999952374,"failureMessages":[],"meta":{}},{"ancestorTitles":["Issue Limiting Logic"],"fullName":"Issue Limiting Logic should return all issues when maxIssues is not set","status":"passed","title":"should return all issues when maxIssues is not set","duration":0.11686899999949674,"failureMessages":[],"meta":{}},{"ancestorTitles":["Issue Limiting Logic"],"fullName":"Issue Limiting Logic should return all issues when maxIssues is 0","status":"passed","title":"should return all issues when maxIssues is 0","duration":0.07523899999978312,"failureMessages":[],"meta":{}},{"ancestorTitles":["Issue Limiting Logic"],"fullName":"Issue Limiting Logic should return all issues when maxIssues is greater than issue count","status":"passed","title":"should return all issues when maxIssues is greater than issue count","duration":0.05765099999916856,"failureMessages":[],"meta":{}},{"ancestorTitles":["Issue Limiting Logic"],"fullName":"Issue Limiting Logic should handle single issue limit","status":"passed","title":"should handle single issue limit","duration":0.07721200000014505,"failureMessages":[],"meta":{}},{"ancestorTitles":["Issue Limiting Logic"],"fullName":"Issue Limiting Logic should handle exact match of maxIssues and issue count","status":"passed","title":"should handle exact match of maxIssues and issue count","duration":0.0523910000010801,"failureMessages":[],"meta":{}}],"startTime":1760046927849,"endTime":1760046927850.117,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/__tests__/index-maxissues.test.ts"},{"assertionResults":[{"ancestorTitles":["Workflow Timeout Behavior"],"fullName":"Workflow Timeout Behavior should timeout workflow after 2 minutes","status":"passed","title":"should timeout workflow after 2 minutes","duration":100.06241799999952,"failureMessages":[],"meta":{}},{"ancestorTitles":["Workflow Timeout Behavior"],"fullName":"Workflow Timeout Behavior should complete successfully before timeout","status":"passed","title":"should complete successfully before timeout","duration":0.35111999999935506,"failureMessages":[],"meta":{}},{"ancestorTitles":["Workflow Timeout Behavior"],"fullName":"Workflow Timeout Behavior should handle no issues gracefully without timeout","status":"passed","title":"should handle no issues gracefully without timeout","duration":0.19668099999944388,"failureMessages":[],"meta":{}},{"ancestorTitles":["Workflow Timeout Behavior"],"fullName":"Workflow Timeout Behavior should include timeout information in error message","status":"passed","title":"should include timeout information in error message","duration":100.82442499999888,"failureMessages":[],"meta":{}},{"ancestorTitles":["Workflow Timeout Behavior"],"fullName":"Workflow Timeout Behavior should use configured processing options","status":"passed","title":"should use configured processing options","duration":0.5134369999996125,"failureMessages":[],"meta":{}}],"startTime":1760046927241,"endTime":1760046927443.5134,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/__tests__/workflow-timeout.test.ts"},{"assertionResults":[{"ancestorTitles":["Validation Branch Persistence","Phase 1 RED: Define expected behavior"],"fullName":"Validation Branch Persistence Phase 1 RED: Define expected behavior should create a feature branch during validation","status":"passed","title":"should create a feature branch during validation","duration":36.62897099999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Branch Persistence","Phase 1 RED: Define expected behavior"],"fullName":"Validation Branch Persistence Phase 1 RED: Define expected behavior should commit generated red tests to the validation branch","status":"passed","title":"should commit generated red tests to the validation branch","duration":38.86182100000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Branch Persistence","Phase 1 RED: Define expected behavior"],"fullName":"Validation Branch Persistence Phase 1 RED: Define expected behavior should store branch name in validation results","status":"passed","title":"should store branch name in validation results","duration":21.239201999999977,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Branch Persistence","Phase 1 RED: Define expected behavior"],"fullName":"Validation Branch Persistence Phase 1 RED: Define expected behavior should checkout validation branch in mitigation phase","status":"failed","title":"should checkout validation branch in mitigation phase","duration":34.348266000000024,"failureMessages":["AssertionError: expected 'main' to be 'rsolv/validate/issue-123' // Object.is equality\n    at /var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/__tests__/modes/validation-branch-persistence.test.ts:183:29\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at file:///var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"],"meta":{}},{"ancestorTitles":["Validation Branch Persistence","Phase 1 RED: Define expected behavior"],"fullName":"Validation Branch Persistence Phase 1 RED: Define expected behavior should handle missing validation branch gracefully","status":"passed","title":"should handle missing validation branch gracefully","duration":17.21086200000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Branch Persistence","Phase 1 RED: Define expected behavior"],"fullName":"Validation Branch Persistence Phase 1 RED: Define expected behavior should preserve test files between validation and mitigation phases","status":"failed","title":"should preserve test files between validation and mitigation phases","duration":42.19117600000004,"failureMessages":["AssertionError: expected false to be true // Object.is equality\n    at /var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/__tests__/modes/validation-branch-persistence.test.ts:245:39\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at file:///var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"],"meta":{}}],"startTime":1760046912485,"endTime":1760046912676.1912,"status":"failed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/__tests__/modes/validation-branch-persistence.test.ts"},{"assertionResults":[{"ancestorTitles":["Claude Code Live API Tests"],"fullName":"Claude Code Live API Tests should check if Claude Code CLI is actually available","status":"passed","title":"should check if Claude Code CLI is actually available","duration":0.4628769999999349,"failureMessages":[],"meta":{}},{"ancestorTitles":["Claude Code Live API Tests"],"fullName":"Claude Code Live API Tests should generate real solution using Claude Code","status":"passed","title":"should generate real solution using Claude Code","duration":7585.9421649999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Claude Code Live API Tests"],"fullName":"Claude Code Live API Tests should work with enhanced prompts in live mode","status":"passed","title":"should work with enhanced prompts in live mode","duration":2639.101439,"failureMessages":[],"meta":{}},{"ancestorTitles":["Claude Code File System Integration"],"fullName":"Claude Code File System Integration should handle real file operations","status":"passed","title":"should handle real file operations","duration":0.2034829999993235,"failureMessages":[],"meta":{}}],"startTime":1760046916856,"endTime":1760046927082.2034,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/ai/__tests__/claude-code-live.test.ts"},{"assertionResults":[{"ancestorTitles":["DISABLE_FIX_VALIDATION bug reproduction","when DISABLE_FIX_VALIDATION is set"],"fullName":"DISABLE_FIX_VALIDATION bug reproduction when DISABLE_FIX_VALIDATION is set should skip validation regardless of other settings","status":"passed","title":"should skip validation regardless of other settings","duration":2.905297999999675,"failureMessages":[],"meta":{}},{"ancestorTitles":["DISABLE_FIX_VALIDATION bug reproduction","when DISABLE_FIX_VALIDATION is set"],"fullName":"DISABLE_FIX_VALIDATION bug reproduction when DISABLE_FIX_VALIDATION is set should skip validation even if testGeneration.enabled is true","status":"passed","title":"should skip validation even if testGeneration.enabled is true","duration":0.5043599999989965,"failureMessages":[],"meta":{}},{"ancestorTitles":["DISABLE_FIX_VALIDATION bug reproduction","proper validation skip logic"],"fullName":"DISABLE_FIX_VALIDATION bug reproduction proper validation skip logic should skip when fixValidation.enabled is false","status":"passed","title":"should skip when fixValidation.enabled is false","duration":0.09006999999837717,"failureMessages":[],"meta":{}},{"ancestorTitles":["DISABLE_FIX_VALIDATION bug reproduction","proper validation skip logic"],"fullName":"DISABLE_FIX_VALIDATION bug reproduction proper validation skip logic should not skip when fixValidation.enabled is true","status":"passed","title":"should not skip when fixValidation.enabled is true","duration":0.05495299999893177,"failureMessages":[],"meta":{}},{"ancestorTitles":["DISABLE_FIX_VALIDATION bug reproduction","proper validation skip logic"],"fullName":"DISABLE_FIX_VALIDATION bug reproduction proper validation skip logic should skip regardless of testGeneration settings when disabled","status":"passed","title":"should skip regardless of testGeneration settings when disabled","duration":0.047158999999737716,"failureMessages":[],"meta":{}}],"startTime":1760046927510,"endTime":1760046927514.09,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/ai/__tests__/disable-validation-bug.test.ts"},{"assertionResults":[{"ancestorTitles":["generateSolutionWithFeedback"],"fullName":"generateSolutionWithFeedback generates a solution with feedback integration","status":"passed","title":"generates a solution with feedback integration","duration":0.1980729999995674,"failureMessages":[],"meta":{}},{"ancestorTitles":["generateSolutionWithFeedback"],"fullName":"generateSolutionWithFeedback should integrate feedback when enhancing AI prompts","status":"passed","title":"should integrate feedback when enhancing AI prompts","duration":0.13472100000035425,"failureMessages":[],"meta":{}}],"startTime":1760046927833,"endTime":1760046927833.198,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/ai/__tests__/feedbackEnhanced.test.ts"},{"assertionResults":[{"ancestorTitles":["GitBasedProcessor - Test Mode (RFC-059)","Test Mode Environment Variable"],"fullName":"GitBasedProcessor - Test Mode (RFC-059) Test Mode Environment Variable should recognize RSOLV_TESTING_MODE environment variable","status":"passed","title":"should recognize RSOLV_TESTING_MODE environment variable","duration":0.1562709999998333,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitBasedProcessor - Test Mode (RFC-059)","Code Coverage - Test Mode Logic Exists"],"fullName":"GitBasedProcessor - Test Mode (RFC-059) Code Coverage - Test Mode Logic Exists should have test mode logic in git-based-processor.ts","status":"passed","title":"should have test mode logic in git-based-processor.ts","duration":0.6662910000013653,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitBasedProcessor - Test Mode (RFC-059)","Integration Test - Manual Verification"],"fullName":"GitBasedProcessor - Test Mode (RFC-059) Integration Test - Manual Verification documents how to manually test test mode behavior","status":"passed","title":"documents how to manually test test mode behavior","duration":0.1192190000001574,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitBasedProcessor - Test Mode (RFC-059)","Type Safety - Result Interface"],"fullName":"GitBasedProcessor - Test Mode (RFC-059) Type Safety - Result Interface should have test mode fields in GitProcessingResult type","status":"passed","title":"should have test mode fields in GitProcessingResult type","duration":0.19706700000097044,"failureMessages":[],"meta":{}}],"startTime":1760046927837,"endTime":1760046927838.6663,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/ai/__tests__/git-based-processor-test-mode.test.ts"},{"assertionResults":[{"ancestorTitles":["SecurityAwareAnalyzer","Security Analysis"],"fullName":"SecurityAwareAnalyzer Security Analysis should detect SQL injection vulnerabilities in code","status":"passed","title":"should detect SQL injection vulnerabilities in code","duration":3.333247999999003,"failureMessages":[],"meta":{}},{"ancestorTitles":["SecurityAwareAnalyzer","Security Analysis"],"fullName":"SecurityAwareAnalyzer Security Analysis should detect XSS vulnerabilities in code","status":"passed","title":"should detect XSS vulnerabilities in code","duration":0.6592759999984992,"failureMessages":[],"meta":{}},{"ancestorTitles":["SecurityAwareAnalyzer","Security Analysis"],"fullName":"SecurityAwareAnalyzer Security Analysis should calculate appropriate risk levels","status":"passed","title":"should calculate appropriate risk levels","duration":0.5742799999989074,"failureMessages":[],"meta":{}},{"ancestorTitles":["SecurityAwareAnalyzer","Security Analysis"],"fullName":"SecurityAwareAnalyzer Security Analysis should adjust complexity based on security risk","status":"passed","title":"should adjust complexity based on security risk","duration":0.7448389999990468,"failureMessages":[],"meta":{}},{"ancestorTitles":["SecurityAwareAnalyzer","Security Analysis"],"fullName":"SecurityAwareAnalyzer Security Analysis should handle files with no vulnerabilities","status":"passed","title":"should handle files with no vulnerabilities","duration":0.5672429999995074,"failureMessages":[],"meta":{}},{"ancestorTitles":["SecurityAwareAnalyzer","Security Analysis"],"fullName":"SecurityAwareAnalyzer Security Analysis should handle mixed languages","status":"passed","title":"should handle mixed languages","duration":0.5373400000007678,"failureMessages":[],"meta":{}},{"ancestorTitles":["SecurityAwareAnalyzer","Issue Type Detection"],"fullName":"SecurityAwareAnalyzer Issue Type Detection should detect security issues from title and body","status":"passed","title":"should detect security issues from title and body","duration":0.21540099999947415,"failureMessages":[],"meta":{}},{"ancestorTitles":["SecurityAwareAnalyzer","Issue Type Detection"],"fullName":"SecurityAwareAnalyzer Issue Type Detection should detect bug issues","status":"passed","title":"should detect bug issues","duration":0.22448799999983748,"failureMessages":[],"meta":{}}],"startTime":1760046927532,"endTime":1760046927539.2246,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/ai/__tests__/security-analyzer.test.ts"},{"assertionResults":[{"ancestorTitles":["Validation Skip Logic","shouldSkipValidation (correct logic)"],"fullName":"Validation Skip Logic shouldSkipValidation (correct logic) should skip when fixValidation.enabled is false","status":"passed","title":"should skip when fixValidation.enabled is false","duration":0.14129700000012235,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Skip Logic","shouldSkipValidation (correct logic)"],"fullName":"Validation Skip Logic shouldSkipValidation (correct logic) should not skip when fixValidation.enabled is true","status":"passed","title":"should not skip when fixValidation.enabled is true","duration":0.08758699999998498,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Skip Logic","shouldSkipValidation (correct logic)"],"fullName":"Validation Skip Logic shouldSkipValidation (correct logic) should not skip when fixValidation.enabled is undefined","status":"passed","title":"should not skip when fixValidation.enabled is undefined","duration":0.0888489999997546,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Skip Logic","buggyValidationCondition (current bug)"],"fullName":"Validation Skip Logic buggyValidationCondition (current bug) FAILS to skip validation when DISABLE_FIX_VALIDATION is set but testGeneration.validateFixes is true","status":"passed","title":"FAILS to skip validation when DISABLE_FIX_VALIDATION is set but testGeneration.validateFixes is true","duration":0.09653400000024703,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Skip Logic","buggyValidationCondition (current bug)"],"fullName":"Validation Skip Logic buggyValidationCondition (current bug) correctly skips when both are false","status":"passed","title":"correctly skips when both are false","duration":0.08105199999954493,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Skip Logic","Fixed validation condition"],"fullName":"Validation Skip Logic Fixed validation condition should NOT enter validation when DISABLE_FIX_VALIDATION is set","status":"passed","title":"should NOT enter validation when DISABLE_FIX_VALIDATION is set","duration":0.10157000000072003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Skip Logic","Fixed validation condition"],"fullName":"Validation Skip Logic Fixed validation condition should enter validation when fixValidation.enabled is true","status":"passed","title":"should enter validation when fixValidation.enabled is true","duration":0.07940899999994144,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Skip Logic","Fixed validation condition"],"fullName":"Validation Skip Logic Fixed validation condition should enter validation when testGeneration.validateFixes is true and not disabled","status":"passed","title":"should enter validation when testGeneration.validateFixes is true and not disabled","duration":0.07488700000067183,"failureMessages":[],"meta":{}},{"ancestorTitles":["Validation Skip Logic","Fixed validation condition"],"fullName":"Validation Skip Logic Fixed validation condition should not enter validation when both are false/undefined","status":"passed","title":"should not enter validation when both are false/undefined","duration":0.07819799999924726,"failureMessages":[],"meta":{}}],"startTime":1760046927859,"endTime":1760046927860.1016,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/ai/__tests__/validation-skip-logic.test.ts"},{"assertionResults":[{"ancestorTitles":["Phase Decomposition - processIssueWithGit refactoring","Scan Phase Extraction"],"fullName":"Phase Decomposition - processIssueWithGit refactoring Scan Phase Extraction executeScanForIssue should analyze issue and determine if fixable","status":"passed","title":"executeScanForIssue should analyze issue and determine if fixable","duration":70.79455600000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["Phase Decomposition - processIssueWithGit refactoring","Scan Phase Extraction"],"fullName":"Phase Decomposition - processIssueWithGit refactoring Scan Phase Extraction executeScanForIssue should fail if git has uncommitted changes","status":"passed","title":"executeScanForIssue should fail if git has uncommitted changes","duration":0.3608040000000301,"failureMessages":[],"meta":{}},{"ancestorTitles":["Phase Decomposition - processIssueWithGit refactoring","Scan Phase Extraction"],"fullName":"Phase Decomposition - processIssueWithGit refactoring Scan Phase Extraction executeScanForIssue should store scan results in PhaseDataClient","status":"passed","title":"executeScanForIssue should store scan results in PhaseDataClient","duration":0.9906190000000379,"failureMessages":[],"meta":{}},{"ancestorTitles":["Phase Decomposition - processIssueWithGit refactoring","Validate Phase Extraction"],"fullName":"Phase Decomposition - processIssueWithGit refactoring Validate Phase Extraction executeValidateForIssue should generate tests for vulnerability","status":"failed","title":"executeValidateForIssue should generate tests for vulnerability","duration":12.025701000000026,"failureMessages":["AssertionError: expected { validated: true, …(3) } to have property \"testResults\"\n    at /var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/modes/__tests__/phase-decomposition.test.ts:157:48\n    at file:///var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"],"meta":{}},{"ancestorTitles":["Phase Decomposition - processIssueWithGit refactoring","Validate Phase Extraction"],"fullName":"Phase Decomposition - processIssueWithGit refactoring Validate Phase Extraction executeValidateForIssue should use TestGeneratingSecurityAnalyzer","status":"failed","title":"executeValidateForIssue should use TestGeneratingSecurityAnalyzer","duration":3.701793000000066,"failureMessages":["AssertionError: expected undefined to be defined\n    at /var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/modes/__tests__/phase-decomposition.test.ts:189:60\n    at file:///var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"],"meta":{}},{"ancestorTitles":["Phase Decomposition - processIssueWithGit refactoring","Validate Phase Extraction"],"fullName":"Phase Decomposition - processIssueWithGit refactoring Validate Phase Extraction executeValidateForIssue should store validation results","status":"passed","title":"executeValidateForIssue should store validation results","duration":2.2074059999999918,"failureMessages":[],"meta":{}},{"ancestorTitles":["Phase Decomposition - processIssueWithGit refactoring","Mitigate Phase Extraction"],"fullName":"Phase Decomposition - processIssueWithGit refactoring Mitigate Phase Extraction executeMitigateForIssue should apply fix using Claude Code","status":"passed","title":"executeMitigateForIssue should apply fix using Claude Code","duration":3.510395000000017,"failureMessages":[],"meta":{}},{"ancestorTitles":["Phase Decomposition - processIssueWithGit refactoring","Mitigate Phase Extraction"],"fullName":"Phase Decomposition - processIssueWithGit refactoring Mitigate Phase Extraction executeMitigateForIssue should validate fix with generated tests","status":"passed","title":"executeMitigateForIssue should validate fix with generated tests","duration":3.475447999999915,"failureMessages":[],"meta":{}},{"ancestorTitles":["Phase Decomposition - processIssueWithGit refactoring","Mitigate Phase Extraction"],"fullName":"Phase Decomposition - processIssueWithGit refactoring Mitigate Phase Extraction executeMitigateForIssue should retry on validation failure","status":"passed","title":"executeMitigateForIssue should retry on validation failure","duration":3.4970109999999295,"failureMessages":[],"meta":{}},{"ancestorTitles":["Phase Decomposition - processIssueWithGit refactoring","Full Three-Phase Execution"],"fullName":"Phase Decomposition - processIssueWithGit refactoring Full Three-Phase Execution executeThreePhaseForIssue should run all phases sequentially","status":"passed","title":"executeThreePhaseForIssue should run all phases sequentially","duration":11.78299299999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["Phase Decomposition - processIssueWithGit refactoring","Full Three-Phase Execution"],"fullName":"Phase Decomposition - processIssueWithGit refactoring Full Three-Phase Execution executeThreePhaseForIssue should abort if scan determines not fixable","status":"passed","title":"executeThreePhaseForIssue should abort if scan determines not fixable","duration":0.33811100000002625,"failureMessages":[],"meta":{}},{"ancestorTitles":["Phase Decomposition - processIssueWithGit refactoring","Full Three-Phase Execution"],"fullName":"Phase Decomposition - processIssueWithGit refactoring Full Three-Phase Execution executeThreePhaseForIssue should pass data between phases","status":"passed","title":"executeThreePhaseForIssue should pass data between phases","duration":0.655304000000001,"failureMessages":[],"meta":{}}],"startTime":1760046912765,"endTime":1760046912878.6553,"status":"failed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/modes/__tests__/phase-decomposition.test.ts"},{"assertionResults":[{"ancestorTitles":["Feedback Types"],"fullName":"Feedback Types should allow creating a valid FeedbackEvent","status":"passed","title":"should allow creating a valid FeedbackEvent","duration":0.09823900000083086,"failureMessages":[],"meta":{}},{"ancestorTitles":["Feedback Types"],"fullName":"Feedback Types should allow creating a valid FeedbackEvent with modifications","status":"passed","title":"should allow creating a valid FeedbackEvent with modifications","duration":0.06602999999995518,"failureMessages":[],"meta":{}},{"ancestorTitles":["Feedback Types"],"fullName":"Feedback Types should allow creating a valid PromptEnhancementContext","status":"passed","title":"should allow creating a valid PromptEnhancementContext","duration":0.1634749999993801,"failureMessages":[],"meta":{}},{"ancestorTitles":["Feedback Types"],"fullName":"Feedback Types should enforce proper enumeration values","status":"passed","title":"should enforce proper enumeration values","duration":0.12462500000037835,"failureMessages":[],"meta":{}}],"startTime":1760046927854,"endTime":1760046927854.1636,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/feedback/__tests__/types.test.ts"},{"assertionResults":[{"ancestorTitles":["Ruby Vulnerability Detection"],"fullName":"Ruby Vulnerability Detection should have Ruby SQL injection pattern","status":"passed","title":"should have Ruby SQL injection pattern","duration":0.14804000000003725,"failureMessages":[],"meta":{}},{"ancestorTitles":["Ruby Vulnerability Detection"],"fullName":"Ruby Vulnerability Detection should match Ruby SQL injection with regex","status":"passed","title":"should match Ruby SQL injection with regex","duration":0.13542899999993097,"failureMessages":[],"meta":{}},{"ancestorTitles":["Ruby Vulnerability Detection"],"fullName":"Ruby Vulnerability Detection should detect Ruby SQL injection with detector","status":"passed","title":"should detect Ruby SQL injection with detector","duration":0.6511960000007093,"failureMessages":[],"meta":{}},{"ancestorTitles":["Ruby Vulnerability Detection"],"fullName":"Ruby Vulnerability Detection should detect Ruby SQL injection in full code","status":"passed","title":"should detect Ruby SQL injection in full code","duration":0.46474399999897287,"failureMessages":[],"meta":{}}],"startTime":1760046927545,"endTime":1760046927546.4648,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/security/__tests__/ruby-detection.test.ts"},{"assertionResults":[{"ancestorTitles":["Safe Usage Detection","SQL Injection Safe Patterns"],"fullName":"Safe Usage Detection SQL Injection Safe Patterns should recognize parameterized queries as safe","status":"passed","title":"should recognize parameterized queries as safe","duration":0.09511600000041653,"failureMessages":[],"meta":{}},{"ancestorTitles":["Safe Usage Detection","SQL Injection Safe Patterns"],"fullName":"Safe Usage Detection SQL Injection Safe Patterns should recognize prepared statements as safe","status":"passed","title":"should recognize prepared statements as safe","duration":0.04925100000036764,"failureMessages":[],"meta":{}},{"ancestorTitles":["Safe Usage Detection","SQL Injection Safe Patterns"],"fullName":"Safe Usage Detection SQL Injection Safe Patterns should NOT consider Ruby hash syntax as safe SQL","status":"passed","title":"should NOT consider Ruby hash syntax as safe SQL","duration":0.03250000000116415,"failureMessages":[],"meta":{}},{"ancestorTitles":["Safe Usage Detection","SQL Injection Safe Patterns"],"fullName":"Safe Usage Detection SQL Injection Safe Patterns should NOT consider Ruby string interpolation as safe","status":"passed","title":"should NOT consider Ruby string interpolation as safe","duration":0.027949000001171953,"failureMessages":[],"meta":{}},{"ancestorTitles":["Safe Usage Detection","SQL Injection Safe Patterns"],"fullName":"Safe Usage Detection SQL Injection Safe Patterns should recognize actual named parameters as safe","status":"passed","title":"should recognize actual named parameters as safe","duration":0.028179000000818633,"failureMessages":[],"meta":{}},{"ancestorTitles":["Safe Usage Detection","Language-specific patterns"],"fullName":"Safe Usage Detection Language-specific patterns should handle Ruby ActiveRecord safe patterns","status":"passed","title":"should handle Ruby ActiveRecord safe patterns","duration":0.03223400000024412,"failureMessages":[],"meta":{}},{"ancestorTitles":["Safe Usage Detection","Language-specific patterns"],"fullName":"Safe Usage Detection Language-specific patterns should handle Python parameterized queries","status":"passed","title":"should handle Python parameterized queries","duration":0.031355999999505,"failureMessages":[],"meta":{}}],"startTime":1760046927867,"endTime":1760046927867.0952,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/security/__tests__/safe-usage.test.ts"},{"assertionResults":[{"ancestorTitles":["buildTestAwarePrompt"],"fullName":"buildTestAwarePrompt includes issue context in prompt","status":"passed","title":"includes issue context in prompt","duration":0.12505699999928765,"failureMessages":[],"meta":{}},{"ancestorTitles":["buildTestAwarePrompt"],"fullName":"buildTestAwarePrompt includes test file path","status":"passed","title":"includes test file path","duration":0.042353999999249936,"failureMessages":[],"meta":{}},{"ancestorTitles":["buildTestAwarePrompt"],"fullName":"buildTestAwarePrompt includes test content in code block","status":"passed","title":"includes test content in code block","duration":0.04994500000066182,"failureMessages":[],"meta":{}},{"ancestorTitles":["buildTestAwarePrompt"],"fullName":"buildTestAwarePrompt includes test framework when provided","status":"passed","title":"includes test framework when provided","duration":0.028884999999718275,"failureMessages":[],"meta":{}},{"ancestorTitles":["buildTestAwarePrompt"],"fullName":"buildTestAwarePrompt includes test command when provided","status":"passed","title":"includes test command when provided","duration":0.02646900000036112,"failureMessages":[],"meta":{}},{"ancestorTitles":["buildTestAwarePrompt"],"fullName":"buildTestAwarePrompt omits framework when not provided","status":"passed","title":"omits framework when not provided","duration":0.04016299999966577,"failureMessages":[],"meta":{}},{"ancestorTitles":["buildTestAwarePrompt"],"fullName":"buildTestAwarePrompt omits command when not provided","status":"passed","title":"omits command when not provided","duration":0.031872999999905005,"failureMessages":[],"meta":{}},{"ancestorTitles":["buildTestAwarePrompt"],"fullName":"buildTestAwarePrompt includes RED phase instruction","status":"passed","title":"includes RED phase instruction","duration":0.026902999999947497,"failureMessages":[],"meta":{}},{"ancestorTitles":["buildTestAwarePrompt"],"fullName":"buildTestAwarePrompt includes fix requirements","status":"passed","title":"includes fix requirements","duration":0.049637000000075204,"failureMessages":[],"meta":{}},{"ancestorTitles":["buildTestAwarePrompt"],"fullName":"buildTestAwarePrompt uses custom base prompt when provided","status":"passed","title":"uses custom base prompt when provided","duration":0.02886399999988498,"failureMessages":[],"meta":{}},{"ancestorTitles":["buildTestAwarePrompt"],"fullName":"buildTestAwarePrompt generates default prompt when base not provided","status":"passed","title":"generates default prompt when base not provided","duration":0.030382999999346794,"failureMessages":[],"meta":{}},{"ancestorTitles":["getTrustScoreExplanation"],"fullName":"getTrustScoreExplanation explains perfect fix (pre-fail, post-pass)","status":"passed","title":"explains perfect fix (pre-fail, post-pass)","duration":0.06004199999915727,"failureMessages":[],"meta":{}},{"ancestorTitles":["getTrustScoreExplanation"],"fullName":"getTrustScoreExplanation explains false positive (both pass)","status":"passed","title":"explains false positive (both pass)","duration":0.052109999998720014,"failureMessages":[],"meta":{}},{"ancestorTitles":["getTrustScoreExplanation"],"fullName":"getTrustScoreExplanation explains failed fix (both fail)","status":"passed","title":"explains failed fix (both fail)","duration":0.04185499999948661,"failureMessages":[],"meta":{}},{"ancestorTitles":["getTrustScoreExplanation"],"fullName":"getTrustScoreExplanation explains regression (pre-pass, post-fail)","status":"passed","title":"explains regression (pre-pass, post-fail)","duration":0.0405109999992419,"failureMessages":[],"meta":{}}],"startTime":1760046927845,"endTime":1760046927846.06,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/prompts/__tests__/test-aware-mitigation.test.ts"},{"assertionResults":[{"ancestorTitles":["RFC-047: Vendor Library Detection","Vendor Directory Detection"],"fullName":"RFC-047: Vendor Library Detection Vendor Directory Detection should detect node_modules as vendor","status":"passed","title":"should detect node_modules as vendor","duration":0.2349080000003596,"failureMessages":[],"meta":{}},{"ancestorTitles":["RFC-047: Vendor Library Detection","Vendor Directory Detection"],"fullName":"RFC-047: Vendor Library Detection Vendor Directory Detection should detect vendor directory as vendor","status":"passed","title":"should detect vendor directory as vendor","duration":0.08396800000082294,"failureMessages":[],"meta":{}},{"ancestorTitles":["RFC-047: Vendor Library Detection","Vendor Directory Detection"],"fullName":"RFC-047: Vendor Library Detection Vendor Directory Detection should detect bower_components as vendor","status":"passed","title":"should detect bower_components as vendor","duration":0.05644899999970221,"failureMessages":[],"meta":{}},{"ancestorTitles":["RFC-047: Vendor Library Detection","Vendor Directory Detection"],"fullName":"RFC-047: Vendor Library Detection Vendor Directory Detection should detect minified files as vendor","status":"passed","title":"should detect minified files as vendor","duration":0.04767600000013772,"failureMessages":[],"meta":{}},{"ancestorTitles":["RFC-047: Vendor Library Detection","Vendor Directory Detection"],"fullName":"RFC-047: Vendor Library Detection Vendor Directory Detection should not detect application code as vendor","status":"passed","title":"should not detect application code as vendor","duration":0.2509460000001127,"failureMessages":[],"meta":{}},{"ancestorTitles":["RFC-047: Vendor Library Detection","Vendor Directory Detection"],"fullName":"RFC-047: Vendor Library Detection Vendor Directory Detection should detect by file header comment","status":"passed","title":"should detect by file header comment","duration":0.13373200000023644,"failureMessages":[],"meta":{}},{"ancestorTitles":["RFC-047: Vendor Library Detection","Library Identification"],"fullName":"RFC-047: Vendor Library Detection Library Identification should identify jQuery from file path","status":"passed","title":"should identify jQuery from file path","duration":0.1887059999990015,"failureMessages":[],"meta":{}},{"ancestorTitles":["RFC-047: Vendor Library Detection","Library Identification"],"fullName":"RFC-047: Vendor Library Detection Library Identification should identify Bootstrap from file content","status":"passed","title":"should identify Bootstrap from file content","duration":0.1638650000004418,"failureMessages":[],"meta":{}},{"ancestorTitles":["RFC-047: Vendor Library Detection","Library Identification"],"fullName":"RFC-047: Vendor Library Detection Library Identification should return null for non-vendor files","status":"passed","title":"should return null for non-vendor files","duration":0.18974200000047858,"failureMessages":[],"meta":{}},{"ancestorTitles":["RFC-047: Vendor Library Detection","Dependency Analysis"],"fullName":"RFC-047: Vendor Library Detection Dependency Analysis should find package.json dependencies","status":"passed","title":"should find package.json dependencies","duration":0.18303600000035658,"failureMessages":[],"meta":{}},{"ancestorTitles":["RFC-047: Vendor Library Detection","Dependency Analysis"],"fullName":"RFC-047: Vendor Library Detection Dependency Analysis should check if file belongs to known dependency","status":"passed","title":"should check if file belongs to known dependency","duration":0.14112399999976333,"failureMessages":[],"meta":{}},{"ancestorTitles":["RFC-047: Vendor Library Detection","Vulnerability Handling"],"fullName":"RFC-047: Vendor Library Detection Vulnerability Handling should return update action for vendor vulnerabilities","status":"passed","title":"should return update action for vendor vulnerabilities","duration":0.19289300000127696,"failureMessages":[],"meta":{}},{"ancestorTitles":["RFC-047: Vendor Library Detection","Vulnerability Handling"],"fullName":"RFC-047: Vendor Library Detection Vulnerability Handling should return fix action for application vulnerabilities","status":"passed","title":"should return fix action for application vulnerabilities","duration":0.08771799999885843,"failureMessages":[],"meta":{}},{"ancestorTitles":["RFC-047: Vendor Library Detection","Vulnerability Handling"],"fullName":"RFC-047: Vendor Library Detection Vulnerability Handling should not attempt to patch vendor code","status":"passed","title":"should not attempt to patch vendor code","duration":0.10000699999909557,"failureMessages":[],"meta":{}},{"ancestorTitles":["RFC-047: Vendor Library Detection","Update Recommendations"],"fullName":"RFC-047: Vendor Library Detection Update Recommendations should recommend safe update version","status":"passed","title":"should recommend safe update version","duration":0.23345599999993283,"failureMessages":[],"meta":{}},{"ancestorTitles":["RFC-047: Vendor Library Detection","Update Recommendations"],"fullName":"RFC-047: Vendor Library Detection Update Recommendations should provide update commands","status":"passed","title":"should provide update commands","duration":0.1212150000010297,"failureMessages":[],"meta":{}},{"ancestorTitles":["RFC-047: Vendor Library Detection","Issue Creation"],"fullName":"RFC-047: Vendor Library Detection Issue Creation should create vendor-specific issue","status":"passed","title":"should create vendor-specific issue","duration":0.22163300000102026,"failureMessages":[],"meta":{}},{"ancestorTitles":["RFC-047: Vendor Library Detection","Issue Creation"],"fullName":"RFC-047: Vendor Library Detection Issue Creation should not create patch PR for vendor files","status":"passed","title":"should not create patch PR for vendor files","duration":0.1142390000004525,"failureMessages":[],"meta":{}}],"startTime":1760046927575,"endTime":1760046927578.2217,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/vendor/__tests__/vendor-detector.test.ts"},{"assertionResults":[{"ancestorTitles":["Claude CLI Usage in Mitigation"],"fullName":"Claude CLI Usage in Mitigation should use Claude CLI when vended credentials are enabled","status":"skipped","title":"should use Claude CLI when vended credentials are enabled","failureMessages":[],"meta":{}},{"ancestorTitles":["Claude CLI Usage in Mitigation"],"fullName":"Claude CLI Usage in Mitigation should use Claude CLI when RSOLV_USE_CLI is true","status":"skipped","title":"should use Claude CLI when RSOLV_USE_CLI is true","failureMessages":[],"meta":{}},{"ancestorTitles":["Claude CLI Usage in Mitigation"],"fullName":"Claude CLI Usage in Mitigation should use Claude CLI when structured phases are enabled","status":"skipped","title":"should use Claude CLI when structured phases are enabled","failureMessages":[],"meta":{}},{"ancestorTitles":["Claude CLI Usage in Mitigation"],"fullName":"Claude CLI Usage in Mitigation should NOT fall back to SDK when vended credentials are enabled and CLI fails","status":"skipped","title":"should NOT fall back to SDK when vended credentials are enabled and CLI fails","failureMessages":[],"meta":{}}],"startTime":1760046912086,"endTime":1760046912086,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/ai/adapters/__tests__/claude-cli-mitigation.test.ts"},{"assertionResults":[{"ancestorTitles":["GitBasedClaudeCodeAdapter - Data Flow Tests","specificVulnerabilities data flow"],"fullName":"GitBasedClaudeCodeAdapter - Data Flow Tests specificVulnerabilities data flow should pass specificVulnerabilities from issueContext to prompt","status":"skipped","title":"should pass specificVulnerabilities from issueContext to prompt","failureMessages":[],"meta":{}},{"ancestorTitles":["GitBasedClaudeCodeAdapter - Data Flow Tests","specificVulnerabilities data flow"],"fullName":"GitBasedClaudeCodeAdapter - Data Flow Tests specificVulnerabilities data flow should log debug info when specificVulnerabilities are present","status":"skipped","title":"should log debug info when specificVulnerabilities are present","failureMessages":[],"meta":{}},{"ancestorTitles":["GitBasedClaudeCodeAdapter - Data Flow Tests","specificVulnerabilities data flow"],"fullName":"GitBasedClaudeCodeAdapter - Data Flow Tests specificVulnerabilities data flow should handle missing specificVulnerabilities gracefully","status":"skipped","title":"should handle missing specificVulnerabilities gracefully","failureMessages":[],"meta":{}},{"ancestorTitles":["GitBasedClaudeCodeAdapter - Data Flow Tests","generateSolution data flow"],"fullName":"GitBasedClaudeCodeAdapter - Data Flow Tests generateSolution data flow should preserve specificVulnerabilities through generateSolution call","status":"skipped","title":"should preserve specificVulnerabilities through generateSolution call","failureMessages":[],"meta":{}}],"startTime":1760046912086,"endTime":1760046912086,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/ai/adapters/__tests__/claude-code-git-data-flow.test.ts"},{"assertionResults":[],"startTime":1760046912086,"endTime":1760046912086,"status":"failed","message":"API key required but not found in environment","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/security/analyzers/__tests__/elixir-ast-analyzer.test.ts"}]}