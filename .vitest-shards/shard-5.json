{"numTotalTestSuites":98,"numPassedTestSuites":98,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":170,"numPassedTests":139,"numFailedTests":0,"numPendingTests":31,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1760046944125,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["Server-Side AST Unit Tests - RED Phase","Current Implementation Check"],"fullName":"Server-Side AST Unit Tests - RED Phase Current Implementation Check should show that detector uses ASTPatternInterpreter (not ElixirASTAnalyzer)","status":"passed","title":"should show that detector uses ASTPatternInterpreter (not ElixirASTAnalyzer)","duration":0.4711050000000796,"failureMessages":[],"meta":{}},{"ancestorTitles":["Server-Side AST Unit Tests - RED Phase","Current Implementation Check"],"fullName":"Server-Side AST Unit Tests - RED Phase Current Implementation Check should show that ASTPatternInterpreter only supports JS/TS","status":"passed","title":"should show that ASTPatternInterpreter only supports JS/TS","duration":0.10082499999998618,"failureMessages":[],"meta":{}},{"ancestorTitles":["Server-Side AST Unit Tests - RED Phase","Desired State - These should guide GREEN phase"],"fullName":"Server-Side AST Unit Tests - RED Phase Desired State - These should guide GREEN phase detector should use ElixirASTAnalyzer for multi-language support","status":"passed","title":"detector should use ElixirASTAnalyzer for multi-language support","duration":0.10735500000009779,"failureMessages":[],"meta":{}},{"ancestorTitles":["Server-Side AST Unit Tests - RED Phase","Memory Safety Check"],"fullName":"Server-Side AST Unit Tests - RED Phase Memory Safety Check should not create detector in a way that causes memory issues","status":"passed","title":"should not create detector in a way that causes memory issues","duration":0.3154190000000199,"failureMessages":[],"meta":{}}],"startTime":1760046946346,"endTime":1760046946346.4712,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/test/server-ast-unit.test.ts"},{"assertionResults":[{"ancestorTitles":["PatternAPIClient - Tier Removal (TDD)","Tier-less Pattern Access"],"fullName":"PatternAPIClient - Tier Removal (TDD) Tier-less Pattern Access fetchPatterns should not include tier parameter in request","status":"passed","title":"fetchPatterns should not include tier parameter in request","duration":0.6668839999999818,"failureMessages":[],"meta":{}},{"ancestorTitles":["PatternAPIClient - Tier Removal (TDD)","Tier-less Pattern Access"],"fullName":"PatternAPIClient - Tier Removal (TDD) Tier-less Pattern Access fetchPatterns response should not contain tier fields","status":"passed","title":"fetchPatterns response should not contain tier fields","duration":0.46397300000012365,"failureMessages":[],"meta":{}},{"ancestorTitles":["PatternAPIClient - Tier Removal (TDD)","Tier-less Pattern Access"],"fullName":"PatternAPIClient - Tier Removal (TDD) Tier-less Pattern Access fetchPatterns should return all patterns with valid API key","status":"passed","title":"fetchPatterns should return all patterns with valid API key","duration":0.25327100000004066,"failureMessages":[],"meta":{}},{"ancestorTitles":["PatternAPIClient - Tier Removal (TDD)","Tier-less Pattern Access"],"fullName":"PatternAPIClient - Tier Removal (TDD) Tier-less Pattern Access fetchPatterns without API key should return demo patterns only","status":"passed","title":"fetchPatterns without API key should return demo patterns only","duration":0.314145999999937,"failureMessages":[],"meta":{}},{"ancestorTitles":["PatternAPIClient - Tier Removal (TDD)","Tier-less Pattern Access"],"fullName":"PatternAPIClient - Tier Removal (TDD) Tier-less Pattern Access deprecated fetchPatternsByTier should still work for backward compatibility","status":"passed","title":"deprecated fetchPatternsByTier should still work for backward compatibility","duration":0.32445099999995364,"failureMessages":[],"meta":{}},{"ancestorTitles":["PatternAPIClient - Tier Removal (TDD)","Tier-less Pattern Access"],"fullName":"PatternAPIClient - Tier Removal (TDD) Tier-less Pattern Access PatternResponse type should not require tier fields","status":"passed","title":"PatternResponse type should not require tier fields","duration":0.2636889999998857,"failureMessages":[],"meta":{}},{"ancestorTitles":["PatternAPIClient - Tier Removal (TDD)","Tier-less Pattern Access"],"fullName":"PatternAPIClient - Tier Removal (TDD) Tier-less Pattern Access error messages should not mention tiers","status":"passed","title":"error messages should not mention tiers","duration":1.3936879999998837,"failureMessages":[],"meta":{}},{"ancestorTitles":["PatternAPIClient - Tier Removal (TDD)","Pattern counting without tiers"],"fullName":"PatternAPIClient - Tier Removal (TDD) Pattern counting without tiers should return total pattern count across all languages","status":"passed","title":"should return total pattern count across all languages","duration":0.9992259999999078,"failureMessages":[],"meta":{}}],"startTime":1760046946186,"endTime":1760046946189.9993,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/security/pattern-api-client-tier-removal.test.ts"},{"assertionResults":[{"ancestorTitles":["Vended Credentials Environment Variable"],"fullName":"Vended Credentials Environment Variable should verify environment variable is set when using vended credentials","status":"passed","title":"should verify environment variable is set when using vended credentials","duration":0.1368649999999434,"failureMessages":[],"meta":{}},{"ancestorTitles":["Vended Credentials Environment Variable"],"fullName":"Vended Credentials Environment Variable should not set RSOLV_API_KEY when not using vended credentials","status":"passed","title":"should not set RSOLV_API_KEY when not using vended credentials","duration":0.07484399999975722,"failureMessages":[],"meta":{}},{"ancestorTitles":["Vended Credentials Environment Variable"],"fullName":"Vended Credentials Environment Variable should not set RSOLV_API_KEY when rsolvApiKey is missing","status":"passed","title":"should not set RSOLV_API_KEY when rsolvApiKey is missing","duration":0.058651999999710824,"failureMessages":[],"meta":{}}],"startTime":1760046946365,"endTime":1760046946365.137,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/test/ai/vended-credentials-env.test.ts"},{"assertionResults":[{"ancestorTitles":["API Endpoint Integration Tests","Pattern API"],"fullName":"API Endpoint Integration Tests Pattern API should fetch patterns from real API","status":"skipped","title":"should fetch patterns from real API","failureMessages":[],"meta":{}},{"ancestorTitles":["API Endpoint Integration Tests","Pattern API"],"fullName":"API Endpoint Integration Tests Pattern API should handle language-specific pattern requests","status":"skipped","title":"should handle language-specific pattern requests","failureMessages":[],"meta":{}},{"ancestorTitles":["API Endpoint Integration Tests","Validation API"],"fullName":"API Endpoint Integration Tests Validation API should validate vulnerabilities through real API","status":"skipped","title":"should validate vulnerabilities through real API","failureMessages":[],"meta":{}},{"ancestorTitles":["API Endpoint Integration Tests","Credential Exchange API"],"fullName":"API Endpoint Integration Tests Credential Exchange API should exchange credentials with real API","status":"skipped","title":"should exchange credentials with real API","failureMessages":[],"meta":{}},{"ancestorTitles":["API Endpoint Integration Tests","Credential Exchange API"],"fullName":"API Endpoint Integration Tests Credential Exchange API should handle credential refresh","status":"skipped","title":"should handle credential refresh","failureMessages":[],"meta":{}},{"ancestorTitles":["API Endpoint Integration Tests","Fix Tracking API"],"fullName":"API Endpoint Integration Tests Fix Tracking API should record fix attempts","status":"skipped","title":"should record fix attempts","failureMessages":[],"meta":{}},{"ancestorTitles":["API Error Handling"],"fullName":"API Error Handling should handle rate limiting gracefully","status":"skipped","title":"should handle rate limiting gracefully","failureMessages":[],"meta":{}},{"ancestorTitles":["API Error Handling"],"fullName":"API Error Handling should handle network errors with retry","status":"skipped","title":"should handle network errors with retry","failureMessages":[],"meta":{}}],"startTime":1760046944125,"endTime":1760046944125,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/test/integration/api-endpoints.test.ts"},{"assertionResults":[{"ancestorTitles":["GitHub Multi-Label Search"],"fullName":"GitHub Multi-Label Search should search for both configured label and rsolv label","status":"passed","title":"should search for both configured label and rsolv label","duration":0.30949999999984357,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitHub Multi-Label Search"],"fullName":"GitHub Multi-Label Search should deduplicate issues when they have multiple matching labels","status":"passed","title":"should deduplicate issues when they have multiple matching labels","duration":0.2218630000002122,"failureMessages":[],"meta":{}}],"startTime":1760046946332,"endTime":1760046946332.3096,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/tests/github/multi-label.test.ts"},{"assertionResults":[{"ancestorTitles":["XSS Pattern Detection"],"fullName":"XSS Pattern Detection should detect XSS via document.write with string concatenation","status":"passed","title":"should detect XSS via document.write with string concatenation","duration":10.659823000000188,"failureMessages":[],"meta":{}},{"ancestorTitles":["XSS Pattern Detection"],"fullName":"XSS Pattern Detection should detect various XSS patterns","status":"passed","title":"should detect various XSS patterns","duration":0.48525500000005195,"failureMessages":[],"meta":{}}],"startTime":1760046946088,"endTime":1760046946099.4854,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/tests/regression/xss-pattern-detection.test.ts"},{"assertionResults":[{"ancestorTitles":["SecurityAwareAnalyzer Integration"],"fullName":"SecurityAwareAnalyzer Integration should return analysis with security vulnerabilities","status":"passed","title":"should return analysis with security vulnerabilities","duration":4.132309999999961,"failureMessages":[],"meta":{}},{"ancestorTitles":["SecurityAwareAnalyzer Integration"],"fullName":"SecurityAwareAnalyzer Integration should handle case with no security issues","status":"passed","title":"should handle case with no security issues","duration":4.099684000000025,"failureMessages":[],"meta":{}},{"ancestorTitles":["SecurityAwareAnalyzer Integration"],"fullName":"SecurityAwareAnalyzer Integration should work without codebase files","status":"passed","title":"should work without codebase files","duration":1.451090000000022,"failureMessages":[],"meta":{}}],"startTime":1760046946169,"endTime":1760046946179.4512,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/tests/security/security-analyzer-integration.test.ts"},{"assertionResults":[{"ancestorTitles":["AdaptiveTestGenerator","Framework-Specific Test Generation"],"fullName":"AdaptiveTestGenerator Framework-Specific Test Generation should generate Vitest tests with proper imports and syntax","status":"passed","title":"should generate Vitest tests with proper imports and syntax","duration":1.2139170000000377,"failureMessages":[],"meta":{}},{"ancestorTitles":["AdaptiveTestGenerator","Framework-Specific Test Generation"],"fullName":"AdaptiveTestGenerator Framework-Specific Test Generation should generate Mocha + Chai tests with appropriate assertions","status":"passed","title":"should generate Mocha + Chai tests with appropriate assertions","duration":0.6394030000001294,"failureMessages":[],"meta":{}},{"ancestorTitles":["AdaptiveTestGenerator","Framework-Specific Test Generation"],"fullName":"AdaptiveTestGenerator Framework-Specific Test Generation should generate pytest tests with Python conventions","status":"passed","title":"should generate pytest tests with Python conventions","duration":0.8294819999998708,"failureMessages":[],"meta":{}},{"ancestorTitles":["AdaptiveTestGenerator","Framework-Specific Test Generation"],"fullName":"AdaptiveTestGenerator Framework-Specific Test Generation should generate Minitest tests for Ruby with spec syntax","status":"passed","title":"should generate Minitest tests for Ruby with spec syntax","duration":0.5779910000001109,"failureMessages":[],"meta":{}},{"ancestorTitles":["AdaptiveTestGenerator","Framework-Specific Test Generation"],"fullName":"AdaptiveTestGenerator Framework-Specific Test Generation should generate ExUnit tests for Elixir with pattern matching","status":"passed","title":"should generate ExUnit tests for Elixir with pattern matching","duration":0.5054029999998875,"failureMessages":[],"meta":{}},{"ancestorTitles":["AdaptiveTestGenerator","Framework-Specific Test Generation"],"fullName":"AdaptiveTestGenerator Framework-Specific Test Generation should generate PHPUnit tests with proper annotations","status":"passed","title":"should generate PHPUnit tests with proper annotations","duration":0.7907600000000912,"failureMessages":[],"meta":{}},{"ancestorTitles":["AdaptiveTestGenerator","Convention Detection and Matching"],"fullName":"AdaptiveTestGenerator Convention Detection and Matching should detect BDD style (describe/it) vs TDD style (test)","status":"passed","title":"should detect BDD style (describe/it) vs TDD style (test)","duration":0.6822019999999611,"failureMessages":[],"meta":{}},{"ancestorTitles":["AdaptiveTestGenerator","Convention Detection and Matching"],"fullName":"AdaptiveTestGenerator Convention Detection and Matching should match assertion style (expect vs assert vs should)","status":"passed","title":"should match assertion style (expect vs assert vs should)","duration":0.6555789999999888,"failureMessages":[],"meta":{}},{"ancestorTitles":["AdaptiveTestGenerator","Convention Detection and Matching"],"fullName":"AdaptiveTestGenerator Convention Detection and Matching should follow file naming conventions","status":"passed","title":"should follow file naming conventions","duration":0.692651000000069,"failureMessages":[],"meta":{}},{"ancestorTitles":["AdaptiveTestGenerator","Convention Detection and Matching"],"fullName":"AdaptiveTestGenerator Convention Detection and Matching should detect and use existing test utilities","status":"passed","title":"should detect and use existing test utilities","duration":0.4650139999998828,"failureMessages":[],"meta":{}},{"ancestorTitles":["AdaptiveTestGenerator","Integration with Other Components"],"fullName":"AdaptiveTestGenerator Integration with Other Components should use CoverageAnalyzer to avoid duplicate tests","status":"passed","title":"should use CoverageAnalyzer to avoid duplicate tests","duration":0.5945819999999458,"failureMessages":[],"meta":{}},{"ancestorTitles":["AdaptiveTestGenerator","Integration with Other Components"],"fullName":"AdaptiveTestGenerator Integration with Other Components should use IssueInterpreter to understand vulnerability context","status":"passed","title":"should use IssueInterpreter to understand vulnerability context","duration":0.827199999999948,"failureMessages":[],"meta":{}},{"ancestorTitles":["AdaptiveTestGenerator","Integration with Other Components"],"fullName":"AdaptiveTestGenerator Integration with Other Components should integrate with existing VulnerabilityTestGenerator","status":"passed","title":"should integrate with existing VulnerabilityTestGenerator","duration":0.38768499999991946,"failureMessages":[],"meta":{}},{"ancestorTitles":["AdaptiveTestGenerator","Edge Cases and Error Handling"],"fullName":"AdaptiveTestGenerator Edge Cases and Error Handling should handle unknown test frameworks gracefully","status":"passed","title":"should handle unknown test frameworks gracefully","duration":0.28756799999996474,"failureMessages":[],"meta":{}},{"ancestorTitles":["AdaptiveTestGenerator","Edge Cases and Error Handling"],"fullName":"AdaptiveTestGenerator Edge Cases and Error Handling should handle missing coverage data","status":"passed","title":"should handle missing coverage data","duration":0.3475349999998798,"failureMessages":[],"meta":{}},{"ancestorTitles":["AdaptiveTestGenerator","Edge Cases and Error Handling"],"fullName":"AdaptiveTestGenerator Edge Cases and Error Handling should handle multi-language repositories","status":"passed","title":"should handle multi-language repositories","duration":0.2995730000000094,"failureMessages":[],"meta":{}}],"startTime":1760046946152,"endTime":1760046946162.2996,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/ai/__tests__/adaptive-test-generator.test.ts"},{"assertionResults":[{"ancestorTitles":["Fix Iteration Core Functionality","getMaxIterations configuration hierarchy"],"fullName":"Fix Iteration Core Functionality getMaxIterations configuration hierarchy should use issue label override when present","status":"passed","title":"should use issue label override when present","duration":0.1587890000000698,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fix Iteration Core Functionality","getMaxIterations configuration hierarchy"],"fullName":"Fix Iteration Core Functionality getMaxIterations configuration hierarchy should use vulnerability type specific config","status":"passed","title":"should use vulnerability type specific config","duration":0.08280999999988126,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fix Iteration Core Functionality","getMaxIterations configuration hierarchy"],"fullName":"Fix Iteration Core Functionality getMaxIterations configuration hierarchy should use customer tier config when no specific override","status":"passed","title":"should use customer tier config when no specific override","duration":0.05636599999979808,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fix Iteration Core Functionality","getMaxIterations configuration hierarchy"],"fullName":"Fix Iteration Core Functionality getMaxIterations configuration hierarchy should use default when no specific config matches","status":"passed","title":"should use default when no specific config matches","duration":0.03748600000017177,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fix Iteration Core Functionality","getMaxIterations configuration hierarchy"],"fullName":"Fix Iteration Core Functionality getMaxIterations configuration hierarchy should handle missing maxIterations config","status":"passed","title":"should handle missing maxIterations config","duration":0.04874900000004345,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fix Iteration Core Functionality","Fix iteration flow simulation"],"fullName":"Fix Iteration Core Functionality Fix iteration flow simulation should simulate successful fix after multiple attempts","status":"passed","title":"should simulate successful fix after multiple attempts","duration":0.07195899999987887,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fix Iteration Core Functionality","Fix iteration flow simulation"],"fullName":"Fix Iteration Core Functionality Fix iteration flow simulation should fail after max attempts exceeded","status":"passed","title":"should fail after max attempts exceeded","duration":0.047823999999764055,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fix Iteration Core Functionality","Test validation feedback integration"],"fullName":"Fix Iteration Core Functionality Test validation feedback integration should include test failure context in retry prompt","status":"passed","title":"should include test failure context in retry prompt","duration":0.06379599999991115,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fix Iteration Core Functionality","Language-specific fix patterns"],"fullName":"Fix Iteration Core Functionality Language-specific fix patterns Java SQL injection fix patterns","status":"passed","title":"Java SQL injection fix patterns","duration":0.055741000000125496,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fix Iteration Core Functionality","Language-specific fix patterns"],"fullName":"Fix Iteration Core Functionality Language-specific fix patterns PHP SQL injection fix patterns","status":"passed","title":"PHP SQL injection fix patterns","duration":0.06389999999964857,"failureMessages":[],"meta":{}},{"ancestorTitles":["Fix Iteration Core Functionality","Language-specific fix patterns"],"fullName":"Fix Iteration Core Functionality Language-specific fix patterns PDO fix patterns for PHP","status":"passed","title":"PDO fix patterns for PHP","duration":0.06593900000007125,"failureMessages":[],"meta":{}}],"startTime":1760046946326,"endTime":1760046946327.066,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/ai/__tests__/fix-iteration-core.test.ts"},{"assertionResults":[{"ancestorTitles":["processIssueWithGit - Characterization Tests","Phase 1: Git State Check"],"fullName":"processIssueWithGit - Characterization Tests Phase 1: Git State Check should fail if repository has uncommitted changes","status":"skipped","title":"should fail if repository has uncommitted changes","failureMessages":[],"meta":{}},{"ancestorTitles":["processIssueWithGit - Characterization Tests","Phase 1: Git State Check"],"fullName":"processIssueWithGit - Characterization Tests Phase 1: Git State Check should proceed with clean git state","status":"skipped","title":"should proceed with clean git state","failureMessages":[],"meta":{}},{"ancestorTitles":["processIssueWithGit - Characterization Tests","Phase 2: Issue Analysis"],"fullName":"processIssueWithGit - Characterization Tests Phase 2: Issue Analysis should stop if issue cannot be fixed","status":"skipped","title":"should stop if issue cannot be fixed","failureMessages":[],"meta":{}},{"ancestorTitles":["processIssueWithGit - Characterization Tests","Phase 2: Issue Analysis"],"fullName":"processIssueWithGit - Characterization Tests Phase 2: Issue Analysis should proceed to test generation if issue can be fixed","status":"skipped","title":"should proceed to test generation if issue can be fixed","failureMessages":[],"meta":{}},{"ancestorTitles":["processIssueWithGit - Characterization Tests","Phase 3: Test Generation"],"fullName":"processIssueWithGit - Characterization Tests Phase 3: Test Generation should generate tests when test generation is enabled","status":"skipped","title":"should generate tests when test generation is enabled","failureMessages":[],"meta":{}},{"ancestorTitles":["processIssueWithGit - Characterization Tests","Phase 3: Test Generation"],"fullName":"processIssueWithGit - Characterization Tests Phase 3: Test Generation should skip test generation when disabled","status":"skipped","title":"should skip test generation when disabled","failureMessages":[],"meta":{}},{"ancestorTitles":["processIssueWithGit - Characterization Tests","Phase 4: Fix Validation Loop"],"fullName":"processIssueWithGit - Characterization Tests Phase 4: Fix Validation Loop should validate fix when validation is enabled","status":"skipped","title":"should validate fix when validation is enabled","failureMessages":[],"meta":{}},{"ancestorTitles":["processIssueWithGit - Characterization Tests","Phase 4: Fix Validation Loop"],"fullName":"processIssueWithGit - Characterization Tests Phase 4: Fix Validation Loop should retry fix when validation fails","status":"skipped","title":"should retry fix when validation fails","failureMessages":[],"meta":{}},{"ancestorTitles":["processIssueWithGit - Characterization Tests","Phase 4: Fix Validation Loop"],"fullName":"processIssueWithGit - Characterization Tests Phase 4: Fix Validation Loop should fail after max iterations","status":"skipped","title":"should fail after max iterations","failureMessages":[],"meta":{}},{"ancestorTitles":["processIssueWithGit - Characterization Tests","Phase 5: PR Creation"],"fullName":"processIssueWithGit - Characterization Tests Phase 5: PR Creation should create educational PR by default","status":"skipped","title":"should create educational PR by default","failureMessages":[],"meta":{}},{"ancestorTitles":["processIssueWithGit - Characterization Tests","Phase 5: PR Creation"],"fullName":"processIssueWithGit - Characterization Tests Phase 5: PR Creation should use regular PR when educational is disabled","status":"skipped","title":"should use regular PR when educational is disabled","failureMessages":[],"meta":{}},{"ancestorTitles":["processIssueWithGit - Characterization Tests","Phase 5: PR Creation"],"fullName":"processIssueWithGit - Characterization Tests Phase 5: PR Creation should rollback commit if PR creation fails","status":"skipped","title":"should rollback commit if PR creation fails","failureMessages":[],"meta":{}},{"ancestorTitles":["processIssueWithGit - Characterization Tests","Error Handling"],"fullName":"processIssueWithGit - Characterization Tests Error Handling should handle and rollback on unexpected errors","status":"skipped","title":"should handle and rollback on unexpected errors","failureMessages":[],"meta":{}},{"ancestorTitles":["processIssueWithGit - Characterization Tests","Error Handling"],"fullName":"processIssueWithGit - Characterization Tests Error Handling should handle git command failures gracefully","status":"skipped","title":"should handle git command failures gracefully","failureMessages":[],"meta":{}},{"ancestorTitles":["processIssueWithGit - Characterization Tests","getMaxIterations"],"fullName":"processIssueWithGit - Characterization Tests getMaxIterations should use issue label override first","status":"skipped","title":"should use issue label override first","failureMessages":[],"meta":{}},{"ancestorTitles":["processIssueWithGit - Characterization Tests","getMaxIterations"],"fullName":"processIssueWithGit - Characterization Tests getMaxIterations should use global config if no label override","status":"skipped","title":"should use global config if no label override","failureMessages":[],"meta":{}},{"ancestorTitles":["processIssueWithGit - Characterization Tests","getMaxIterations"],"fullName":"processIssueWithGit - Characterization Tests getMaxIterations should use default if no config","status":"skipped","title":"should use default if no config","failureMessages":[],"meta":{}},{"ancestorTitles":["processIssueWithGit - Characterization Tests","getMaxIterations"],"fullName":"processIssueWithGit - Characterization Tests getMaxIterations should handle vulnerability type specific config","status":"skipped","title":"should handle vulnerability type specific config","failureMessages":[],"meta":{}}],"startTime":1760046944125,"endTime":1760046944125,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/ai/__tests__/git-based-processor-characterization.test.ts"},{"assertionResults":[{"ancestorTitles":["processIssueWithGit - Simple Characterization"],"fullName":"processIssueWithGit - Simple Characterization processIssueWithGit function exists and has correct signature","status":"passed","title":"processIssueWithGit function exists and has correct signature","duration":0.12436499999967054,"failureMessages":[],"meta":{}},{"ancestorTitles":["processIssueWithGit - Simple Characterization"],"fullName":"processIssueWithGit - Simple Characterization getMaxIterations function exists and returns expected defaults","status":"passed","title":"getMaxIterations function exists and returns expected defaults","duration":0.07566999999971813,"failureMessages":[],"meta":{}},{"ancestorTitles":["processIssueWithGit - Simple Characterization"],"fullName":"processIssueWithGit - Simple Characterization getMaxIterations respects label overrides","status":"passed","title":"getMaxIterations respects label overrides","duration":0.06482699999969554,"failureMessages":[],"meta":{}},{"ancestorTitles":["processIssueWithGit - Simple Characterization"],"fullName":"processIssueWithGit - Simple Characterization getMaxIterations uses config when no label override","status":"passed","title":"getMaxIterations uses config when no label override","duration":0.053308000000015454,"failureMessages":[],"meta":{}},{"ancestorTitles":["processIssueWithGit - Simple Characterization"],"fullName":"processIssueWithGit - Simple Characterization processIssueWithGit returns expected result shape","status":"passed","title":"processIssueWithGit returns expected result shape","duration":0.0380049999998846,"failureMessages":[],"meta":{}}],"startTime":1760046946362,"endTime":1760046946362.1243,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/ai/__tests__/git-based-processor-simple-characterization.test.ts"},{"assertionResults":[{"ancestorTitles":["Security Prompts","buildSecuritySolutionPrompt"],"fullName":"Security Prompts buildSecuritySolutionPrompt should include security analysis results","status":"passed","title":"should include security analysis results","duration":0.21508300000004965,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Prompts","buildSecuritySolutionPrompt"],"fullName":"Security Prompts buildSecuritySolutionPrompt should include vulnerability details","status":"passed","title":"should include vulnerability details","duration":0.08738700000003519,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Prompts","buildSecuritySolutionPrompt"],"fullName":"Security Prompts buildSecuritySolutionPrompt should include security recommendations","status":"passed","title":"should include security recommendations","duration":0.06638000000020838,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Prompts","buildSecuritySolutionPrompt"],"fullName":"Security Prompts buildSecuritySolutionPrompt should include security fix templates","status":"passed","title":"should include security fix templates","duration":0.11121500000035667,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Prompts","buildSecuritySolutionPrompt"],"fullName":"Security Prompts buildSecuritySolutionPrompt should mark affected files","status":"passed","title":"should mark affected files","duration":0.06759400000009919,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Prompts","buildSecuritySolutionPrompt"],"fullName":"Security Prompts buildSecuritySolutionPrompt should include security requirements","status":"passed","title":"should include security requirements","duration":0.06375699999989592,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Prompts","buildSecurityExplanationPrompt"],"fullName":"Security Prompts buildSecurityExplanationPrompt should include three-tier explanation structure","status":"passed","title":"should include three-tier explanation structure","duration":0.11394100000006802,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Prompts","buildSecurityExplanationPrompt"],"fullName":"Security Prompts buildSecurityExplanationPrompt should include vulnerability details","status":"passed","title":"should include vulnerability details","duration":0.05375199999980396,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Prompts","buildSecurityExplanationPrompt"],"fullName":"Security Prompts buildSecurityExplanationPrompt should include fixes implemented","status":"passed","title":"should include fixes implemented","duration":0.03819199999998091,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Prompts","buildSecurityExplanationPrompt"],"fullName":"Security Prompts buildSecurityExplanationPrompt should include specific tier requirements","status":"passed","title":"should include specific tier requirements","duration":0.04802299999983006,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Prompts","buildSecurityPrDescriptionPrompt"],"fullName":"Security Prompts buildSecurityPrDescriptionPrompt should include security impact summary","status":"passed","title":"should include security impact summary","duration":0.09267699999963952,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Prompts","buildSecurityPrDescriptionPrompt"],"fullName":"Security Prompts buildSecurityPrDescriptionPrompt should include vulnerability details","status":"passed","title":"should include vulnerability details","duration":0.050896999999622494,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Prompts","buildSecurityPrDescriptionPrompt"],"fullName":"Security Prompts buildSecurityPrDescriptionPrompt should include PR description structure","status":"passed","title":"should include PR description structure","duration":0.06228899999996429,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Prompts","buildSecurityPrDescriptionPrompt"],"fullName":"Security Prompts buildSecurityPrDescriptionPrompt should emphasize critical nature","status":"passed","title":"should emphasize critical nature","duration":0.04393800000025294,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Prompts","Edge Cases"],"fullName":"Security Prompts Edge Cases should handle empty vulnerabilities","status":"passed","title":"should handle empty vulnerabilities","duration":0.05171999999993204,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Prompts","Edge Cases"],"fullName":"Security Prompts Edge Cases should handle single vulnerability type","status":"passed","title":"should handle single vulnerability type","duration":0.052630000000135624,"failureMessages":[],"meta":{}}],"startTime":1760046946306,"endTime":1760046946307.114,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/ai/__tests__/security-prompts.test.ts"},{"assertionResults":[{"ancestorTitles":["TestFrameworkDetector (TDD - Red Phase)","JavaScript/TypeScript Framework Detection"],"fullName":"TestFrameworkDetector (TDD - Red Phase) JavaScript/TypeScript Framework Detection should detect Jest from package.json","status":"passed","title":"should detect Jest from package.json","duration":0.20835799999986193,"failureMessages":[],"meta":{}},{"ancestorTitles":["TestFrameworkDetector (TDD - Red Phase)","JavaScript/TypeScript Framework Detection"],"fullName":"TestFrameworkDetector (TDD - Red Phase) JavaScript/TypeScript Framework Detection should detect Vitest from package.json","status":"passed","title":"should detect Vitest from package.json","duration":0.10782500000004802,"failureMessages":[],"meta":{}},{"ancestorTitles":["TestFrameworkDetector (TDD - Red Phase)","JavaScript/TypeScript Framework Detection"],"fullName":"TestFrameworkDetector (TDD - Red Phase) JavaScript/TypeScript Framework Detection should detect Mocha with Chai","status":"passed","title":"should detect Mocha with Chai","duration":0.1101859999998851,"failureMessages":[],"meta":{}},{"ancestorTitles":["TestFrameworkDetector (TDD - Red Phase)","JavaScript/TypeScript Framework Detection"],"fullName":"TestFrameworkDetector (TDD - Red Phase) JavaScript/TypeScript Framework Detection should detect Cypress for E2E testing","status":"passed","title":"should detect Cypress for E2E testing","duration":0.08241200000020399,"failureMessages":[],"meta":{}},{"ancestorTitles":["TestFrameworkDetector (TDD - Red Phase)","JavaScript/TypeScript Framework Detection"],"fullName":"TestFrameworkDetector (TDD - Red Phase) JavaScript/TypeScript Framework Detection should detect multiple frameworks in one project","status":"passed","title":"should detect multiple frameworks in one project","duration":0.19355499999983294,"failureMessages":[],"meta":{}},{"ancestorTitles":["TestFrameworkDetector (TDD - Red Phase)","Python Framework Detection"],"fullName":"TestFrameworkDetector (TDD - Red Phase) Python Framework Detection should detect pytest from requirements.txt","status":"passed","title":"should detect pytest from requirements.txt","duration":0.16862600000013117,"failureMessages":[],"meta":{}},{"ancestorTitles":["TestFrameworkDetector (TDD - Red Phase)","Python Framework Detection"],"fullName":"TestFrameworkDetector (TDD - Red Phase) Python Framework Detection should detect unittest from import statements","status":"passed","title":"should detect unittest from import statements","duration":0.1422599999996237,"failureMessages":[],"meta":{}},{"ancestorTitles":["TestFrameworkDetector (TDD - Red Phase)","Ruby Framework Detection"],"fullName":"TestFrameworkDetector (TDD - Red Phase) Ruby Framework Detection should detect RSpec from Gemfile","status":"passed","title":"should detect RSpec from Gemfile","duration":0.2177520000000186,"failureMessages":[],"meta":{}},{"ancestorTitles":["TestFrameworkDetector (TDD - Red Phase)","Ruby Framework Detection"],"fullName":"TestFrameworkDetector (TDD - Red Phase) Ruby Framework Detection should detect Minitest from Gemfile","status":"passed","title":"should detect Minitest from Gemfile","duration":0.15000499999996464,"failureMessages":[],"meta":{}},{"ancestorTitles":["TestFrameworkDetector (TDD - Red Phase)","Test File Pattern Detection"],"fullName":"TestFrameworkDetector (TDD - Red Phase) Test File Pattern Detection should detect Jest from test file patterns","status":"passed","title":"should detect Jest from test file patterns","duration":0.13742599999977756,"failureMessages":[],"meta":{}},{"ancestorTitles":["TestFrameworkDetector (TDD - Red Phase)","Test File Pattern Detection"],"fullName":"TestFrameworkDetector (TDD - Red Phase) Test File Pattern Detection should detect RSpec from spec directory structure","status":"passed","title":"should detect RSpec from spec directory structure","duration":0.0789969999996174,"failureMessages":[],"meta":{}},{"ancestorTitles":["TestFrameworkDetector (TDD - Red Phase)","Configuration File Detection"],"fullName":"TestFrameworkDetector (TDD - Red Phase) Configuration File Detection should detect from vi.config.js","status":"passed","title":"should detect from vi.config.js","duration":0.09367699999984325,"failureMessages":[],"meta":{}},{"ancestorTitles":["TestFrameworkDetector (TDD - Red Phase)","Configuration File Detection"],"fullName":"TestFrameworkDetector (TDD - Red Phase) Configuration File Detection should detect from vitest.config.ts","status":"passed","title":"should detect from vitest.config.ts","duration":0.05921200000011595,"failureMessages":[],"meta":{}},{"ancestorTitles":["TestFrameworkDetector (TDD - Red Phase)","Comprehensive Detection"],"fullName":"TestFrameworkDetector (TDD - Red Phase) Comprehensive Detection should detect frameworks from repository path","status":"passed","title":"should detect frameworks from repository path","duration":0.29723199999989447,"failureMessages":[],"meta":{}},{"ancestorTitles":["TestFrameworkDetector (TDD - Red Phase)","Comprehensive Detection"],"fullName":"TestFrameworkDetector (TDD - Red Phase) Comprehensive Detection should handle missing configuration files gracefully","status":"passed","title":"should handle missing configuration files gracefully","duration":0.09962700000005498,"failureMessages":[],"meta":{}},{"ancestorTitles":["TestFrameworkDetector (TDD - Red Phase)","Comprehensive Detection"],"fullName":"TestFrameworkDetector (TDD - Red Phase) Comprehensive Detection should assign confidence scores based on detection method","status":"passed","title":"should assign confidence scores based on detection method","duration":0.06395100000008824,"failureMessages":[],"meta":{}},{"ancestorTitles":["TestFrameworkDetector (TDD - Red Phase)","Framework Version Detection"],"fullName":"TestFrameworkDetector (TDD - Red Phase) Framework Version Detection should extract exact version from package.json","status":"passed","title":"should extract exact version from package.json","duration":0.058986000000004424,"failureMessages":[],"meta":{}},{"ancestorTitles":["TestFrameworkDetector (TDD - Red Phase)","Framework Version Detection"],"fullName":"TestFrameworkDetector (TDD - Red Phase) Framework Version Detection should handle version ranges","status":"passed","title":"should handle version ranges","duration":0.09907299999986208,"failureMessages":[],"meta":{}},{"ancestorTitles":["TestFrameworkDetector Integration"],"fullName":"TestFrameworkDetector Integration should integrate with test generator","status":"passed","title":"should integrate with test generator","duration":0.13054800000008981,"failureMessages":[],"meta":{}}],"startTime":1760046946274,"endTime":1760046946277.1306,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/ai/__tests__/test-framework-detector.test.ts"},{"assertionResults":[{"ancestorTitles":["Config Timeout Settings"],"fullName":"Config Timeout Settings should have default timeout configurations","status":"passed","title":"should have default timeout configurations","duration":1.7259170000002086,"failureMessages":[],"meta":{}},{"ancestorTitles":["Config Timeout Settings"],"fullName":"Config Timeout Settings should load timeout from environment variables","status":"passed","title":"should load timeout from environment variables","duration":0.6217790000000605,"failureMessages":[],"meta":{}},{"ancestorTitles":["Config Timeout Settings"],"fullName":"Config Timeout Settings should load timeout from config file","status":"passed","title":"should load timeout from config file","duration":2.3438959999998588,"failureMessages":[],"meta":{}},{"ancestorTitles":["Config Timeout Settings"],"fullName":"Config Timeout Settings should merge timeouts with priority: env > file > default","status":"passed","title":"should merge timeouts with priority: env > file > default","duration":0.6037609999998494,"failureMessages":[],"meta":{}},{"ancestorTitles":["Config Timeout Settings"],"fullName":"Config Timeout Settings should validate timeout values are numbers","status":"passed","title":"should validate timeout values are numbers","duration":0.364755999999943,"failureMessages":[],"meta":{}},{"ancestorTitles":["Config Timeout Settings"],"fullName":"Config Timeout Settings should handle missing timeout properties gracefully","status":"passed","title":"should handle missing timeout properties gracefully","duration":0.5031240000002981,"failureMessages":[],"meta":{}},{"ancestorTitles":["Config Timeout Settings"],"fullName":"Config Timeout Settings should ensure AI provider timeout is reasonable","status":"passed","title":"should ensure AI provider timeout is reasonable","duration":0.36580300000014176,"failureMessages":[],"meta":{}}],"startTime":1760046946231,"endTime":1760046946237.5032,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/config/__tests__/timeout.test.ts"},{"assertionResults":[{"ancestorTitles":["ModeSelector","getModeConfig"],"fullName":"ModeSelector getModeConfig should require RSOLV_MODE environment variable","status":"passed","title":"should require RSOLV_MODE environment variable","duration":0.6548910000001342,"failureMessages":[],"meta":{}},{"ancestorTitles":["ModeSelector","getModeConfig"],"fullName":"ModeSelector getModeConfig should recognize scan mode from RSOLV_MODE","status":"passed","title":"should recognize scan mode from RSOLV_MODE","duration":0.48671599999988757,"failureMessages":[],"meta":{}},{"ancestorTitles":["ModeSelector","getModeConfig"],"fullName":"ModeSelector getModeConfig should recognize validate mode","status":"passed","title":"should recognize validate mode","duration":0.3890299999998206,"failureMessages":[],"meta":{}},{"ancestorTitles":["ModeSelector","getModeConfig"],"fullName":"ModeSelector getModeConfig should recognize mitigate mode","status":"passed","title":"should recognize mitigate mode","duration":0.37602800000013303,"failureMessages":[],"meta":{}},{"ancestorTitles":["ModeSelector","getModeConfig"],"fullName":"ModeSelector getModeConfig should recognize full mode","status":"passed","title":"should recognize full mode","duration":0.38773799999989933,"failureMessages":[],"meta":{}},{"ancestorTitles":["ModeSelector","getModeConfig"],"fullName":"ModeSelector getModeConfig should handle batch validation with multiple issue IDs","status":"passed","title":"should handle batch validation with multiple issue IDs","duration":0.5015980000002855,"failureMessages":[],"meta":{}},{"ancestorTitles":["ModeSelector","getModeConfig"],"fullName":"ModeSelector getModeConfig should respect max issues limit","status":"passed","title":"should respect max issues limit","duration":0.39982099999997445,"failureMessages":[],"meta":{}},{"ancestorTitles":["ModeSelector","getModeConfig"],"fullName":"ModeSelector getModeConfig should handle skip cache flag","status":"passed","title":"should handle skip cache flag","duration":0.36663599999974394,"failureMessages":[],"meta":{}},{"ancestorTitles":["ModeSelector","getModeConfig"],"fullName":"ModeSelector getModeConfig should throw error when validate mode lacks issue ID","status":"passed","title":"should throw error when validate mode lacks issue ID","duration":0.36982799999987037,"failureMessages":[],"meta":{}},{"ancestorTitles":["ModeSelector","getModeConfig"],"fullName":"ModeSelector getModeConfig should throw error when mitigate mode lacks issue ID","status":"passed","title":"should throw error when mitigate mode lacks issue ID","duration":0.3597380000001067,"failureMessages":[],"meta":{}},{"ancestorTitles":["ModeSelector","getModeConfig"],"fullName":"ModeSelector getModeConfig should throw error when both single and multiple issue IDs are provided","status":"passed","title":"should throw error when both single and multiple issue IDs are provided","duration":0.3762549999996736,"failureMessages":[],"meta":{}},{"ancestorTitles":["ModeSelector","getModeConfig"],"fullName":"ModeSelector getModeConfig should throw error when fix mode lacks issue ID","status":"passed","title":"should throw error when fix mode lacks issue ID","duration":0.38956800000005387,"failureMessages":[],"meta":{}},{"ancestorTitles":["ModeSelector","normalizeMode"],"fullName":"ModeSelector normalizeMode should normalize mode aliases","status":"passed","title":"should normalize mode aliases","duration":0.9172330000001239,"failureMessages":[],"meta":{}},{"ancestorTitles":["ModeSelector","normalizeMode"],"fullName":"ModeSelector normalizeMode should throw error for unknown modes","status":"passed","title":"should throw error for unknown modes","duration":0.3833079999999427,"failureMessages":[],"meta":{}},{"ancestorTitles":["ModeSelector","getModeDescription"],"fullName":"ModeSelector getModeDescription should return appropriate descriptions for each mode","status":"passed","title":"should return appropriate descriptions for each mode","duration":0.41426000000001295,"failureMessages":[],"meta":{}},{"ancestorTitles":["ModeSelector","mode requirements"],"fullName":"ModeSelector mode requirements should identify which modes require AI","status":"passed","title":"should identify which modes require AI","duration":0.34813300000041636,"failureMessages":[],"meta":{}},{"ancestorTitles":["ModeSelector","mode requirements"],"fullName":"ModeSelector mode requirements should identify which modes require test generation","status":"passed","title":"should identify which modes require test generation","duration":0.3454309999997349,"failureMessages":[],"meta":{}},{"ancestorTitles":["ModeSelector","mode requirements"],"fullName":"ModeSelector mode requirements should identify which modes require fix generation","status":"passed","title":"should identify which modes require fix generation","duration":0.3664110000004257,"failureMessages":[],"meta":{}}],"startTime":1760046946249,"endTime":1760046946257.3665,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/modes/__tests__/mode-selector.test.ts"},{"assertionResults":[{"ancestorTitles":["RFC-060 Phase 2.2: ValidationMode Test Execution Integration","Test Execution with TestRunner"],"fullName":"RFC-060 Phase 2.2: ValidationMode Test Execution Integration Test Execution with TestRunner should mark as validated when RED test fails (vulnerability confirmed)","status":"passed","title":"should mark as validated when RED test fails (vulnerability confirmed)","duration":0.5875949999999648,"failureMessages":[],"meta":{}},{"ancestorTitles":["RFC-060 Phase 2.2: ValidationMode Test Execution Integration","Test Execution with TestRunner"],"fullName":"RFC-060 Phase 2.2: ValidationMode Test Execution Integration Test Execution with TestRunner should mark as false positive when RED test passes (no vulnerability)","status":"passed","title":"should mark as false positive when RED test passes (no vulnerability)","duration":0.45570299999963026,"failureMessages":[],"meta":{}},{"ancestorTitles":["RFC-060 Phase 2.2: ValidationMode Test Execution Integration","PhaseDataClient Integration"],"fullName":"RFC-060 Phase 2.2: ValidationMode Test Execution Integration PhaseDataClient Integration should store test execution results in PhaseDataClient","status":"passed","title":"should store test execution results in PhaseDataClient","duration":0.4673749999997199,"failureMessages":[],"meta":{}},{"ancestorTitles":["RFC-060 Phase 2.2: ValidationMode Test Execution Integration","PhaseDataClient Integration"],"fullName":"RFC-060 Phase 2.2: ValidationMode Test Execution Integration PhaseDataClient Integration should include test output in stored metadata","status":"passed","title":"should include test output in stored metadata","duration":0.4302159999997457,"failureMessages":[],"meta":{}},{"ancestorTitles":["RFC-060 Phase 2.2: ValidationMode Test Execution Integration","GitHub Issue Labeling"],"fullName":"RFC-060 Phase 2.2: ValidationMode Test Execution Integration GitHub Issue Labeling should apply rsolv:validated label when vulnerability is confirmed","status":"passed","title":"should apply rsolv:validated label when vulnerability is confirmed","duration":1.2456260000003567,"failureMessages":[],"meta":{}},{"ancestorTitles":["RFC-060 Phase 2.2: ValidationMode Test Execution Integration","GitHub Issue Labeling"],"fullName":"RFC-060 Phase 2.2: ValidationMode Test Execution Integration GitHub Issue Labeling should apply rsolv:false-positive label when validation fails","status":"passed","title":"should apply rsolv:false-positive label when validation fails","duration":0.5585799999998926,"failureMessages":[],"meta":{}},{"ancestorTitles":["RFC-060 Phase 2.2: ValidationMode Test Execution Integration","Error Handling"],"fullName":"RFC-060 Phase 2.2: ValidationMode Test Execution Integration Error Handling should handle test execution timeout","status":"passed","title":"should handle test execution timeout","duration":0.41381600000022445,"failureMessages":[],"meta":{}},{"ancestorTitles":["RFC-060 Phase 2.2: ValidationMode Test Execution Integration","Error Handling"],"fullName":"RFC-060 Phase 2.2: ValidationMode Test Execution Integration Error Handling should handle test execution errors gracefully","status":"passed","title":"should handle test execution errors gracefully","duration":0.8486680000000888,"failureMessages":[],"meta":{}},{"ancestorTitles":["RFC-060 Phase 2.2: ValidationMode Test Execution Integration","RFC-060 Phase 3.1: PhaseDataClient Metadata Storage"],"fullName":"RFC-060 Phase 2.2: ValidationMode Test Execution Integration RFC-060 Phase 3.1: PhaseDataClient Metadata Storage should store branchName and testPath in PhaseDataClient","status":"passed","title":"should store branchName and testPath in PhaseDataClient","duration":0.5985969999996996,"failureMessages":[],"meta":{}}],"startTime":1760046946201,"endTime":1760046946206.5986,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/modes/__tests__/validation-mode-test-execution.test.ts"},{"assertionResults":[{"ancestorTitles":["ValidationMode - Test Commit in Test Mode","in test mode"],"fullName":"ValidationMode - Test Commit in Test Mode in test mode should always attempt to commit tests even if branch creation initially fails","status":"skipped","title":"should always attempt to commit tests even if branch creation initially fails","failureMessages":[],"meta":{}},{"ancestorTitles":["ValidationMode - Test Commit in Test Mode","in test mode"],"fullName":"ValidationMode - Test Commit in Test Mode in test mode should force commit tests in test mode even if tests are imperfect","status":"skipped","title":"should force commit tests in test mode even if tests are imperfect","failureMessages":[],"meta":{}},{"ancestorTitles":["ValidationMode - Test Commit in Test Mode","in test mode"],"fullName":"ValidationMode - Test Commit in Test Mode in test mode should handle test commit even when git push fails","status":"skipped","title":"should handle test commit even when git push fails","failureMessages":[],"meta":{}},{"ancestorTitles":["ValidationMode - Test Commit in Test Mode","validateIssue in test mode"],"fullName":"ValidationMode - Test Commit in Test Mode validateIssue in test mode should ensure test commits happen in test mode regardless of test quality","status":"skipped","title":"should ensure test commits happen in test mode regardless of test quality","failureMessages":[],"meta":{}}],"startTime":1760046944125,"endTime":1760046944125,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/modes/__tests__/validation-test-commit.test.ts"},{"assertionResults":[{"ancestorTitles":["Vendor Detection Regression Tests (RFC-047)"],"fullName":"Vendor Detection Regression Tests (RFC-047) should handle vulnerabilities with singular \"file\" property","status":"passed","title":"should handle vulnerabilities with singular \"file\" property","duration":17.845653999999968,"failureMessages":[],"meta":{}},{"ancestorTitles":["Vendor Detection Regression Tests (RFC-047)"],"fullName":"Vendor Detection Regression Tests (RFC-047) should handle vulnerabilities with plural \"files\" property","status":"passed","title":"should handle vulnerabilities with plural \"files\" property","duration":7.137487999999848,"failureMessages":[],"meta":{}},{"ancestorTitles":["Vendor Detection Regression Tests (RFC-047)"],"fullName":"Vendor Detection Regression Tests (RFC-047) should handle mixed vulnerabilities with both file and files properties","status":"passed","title":"should handle mixed vulnerabilities with both file and files properties","duration":2.0705520000001343,"failureMessages":[],"meta":{}}],"startTime":1760046946115,"endTime":1760046946142.0706,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/modes/__tests__/vendor-detection-regression.test.ts"},{"assertionResults":[{"ancestorTitles":["AST Validator with Mocked API","False Positive Filtering"],"fullName":"AST Validator with Mocked API False Positive Filtering should filter out vulnerabilities in comments","status":"passed","title":"should filter out vulnerabilities in comments","duration":0.7916360000003806,"failureMessages":[],"meta":{}},{"ancestorTitles":["AST Validator with Mocked API","False Positive Filtering"],"fullName":"AST Validator with Mocked API False Positive Filtering should keep real vulnerabilities","status":"passed","title":"should keep real vulnerabilities","duration":0.4979700000003504,"failureMessages":[],"meta":{}},{"ancestorTitles":["AST Validator with Mocked API","False Positive Filtering"],"fullName":"AST Validator with Mocked API False Positive Filtering should handle mixed results correctly","status":"passed","title":"should handle mixed results correctly","duration":0.24367799999981798,"failureMessages":[],"meta":{}},{"ancestorTitles":["AST Validator with Mocked API","False Positive Filtering"],"fullName":"AST Validator with Mocked API False Positive Filtering should handle API failures gracefully","status":"passed","title":"should handle API failures gracefully","duration":0.5651870000001509,"failureMessages":[],"meta":{}}],"startTime":1760046946266,"endTime":1760046946267.5652,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/scanner/__tests__/ast-validator-mocked.test.ts"},{"assertionResults":[{"ancestorTitles":["ScanOrchestrator - max_issues bug","RED - Shows the bug existed before fix"],"fullName":"ScanOrchestrator - max_issues bug RED - Shows the bug existed before fix BEFORE FIX: would pass all groups to createIssuesFromGroups ignoring max_issues","status":"skipped","title":"BEFORE FIX: would pass all groups to createIssuesFromGroups ignoring max_issues","failureMessages":[],"meta":{}},{"ancestorTitles":["ScanOrchestrator - max_issues bug","GREEN - After the fix"],"fullName":"ScanOrchestrator - max_issues bug GREEN - After the fix should only pass limited groups to createIssuesFromGroups","status":"passed","title":"should only pass limited groups to createIssuesFromGroups","duration":143.64167199999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["ScanOrchestrator - max_issues bug","GREEN - After the fix"],"fullName":"ScanOrchestrator - max_issues bug GREEN - After the fix should only create number of issues specified by max_issues","status":"passed","title":"should only create number of issues specified by max_issues","duration":200.5747919999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["ScanOrchestrator - max_issues bug","REFACTOR - Maintain functionality"],"fullName":"ScanOrchestrator - max_issues bug REFACTOR - Maintain functionality should still create all issues when no max_issues limit","status":"passed","title":"should still create all issues when no max_issues limit","duration":137.7721019999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["ScanOrchestrator - max_issues bug","REFACTOR - Maintain functionality"],"fullName":"ScanOrchestrator - max_issues bug REFACTOR - Maintain functionality should handle edge cases correctly","status":"passed","title":"should handle edge cases correctly","duration":137.39120400000002,"failureMessages":[],"meta":{}}],"startTime":1760046945450,"endTime":1760046946070.391,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/scanner/__tests__/scan-orchestrator-max-issues.test.ts"},{"assertionResults":[{"ancestorTitles":["PhaseExecutor - Mitigate Phase Credential Handling"],"fullName":"PhaseExecutor - Mitigate Phase Credential Handling should pass rsolvApiKey and useVendedCredentials to processIssues","status":"passed","title":"should pass rsolvApiKey and useVendedCredentials to processIssues","duration":510.66545899999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["PhaseExecutor - Mitigate Phase Credential Handling"],"fullName":"PhaseExecutor - Mitigate Phase Credential Handling should fail gracefully when rsolvApiKey is missing but vended credentials are enabled","status":"passed","title":"should fail gracefully when rsolvApiKey is missing but vended credentials are enabled","duration":330.26356699999985,"failureMessages":[],"meta":{}}],"startTime":1760046944579,"endTime":1760046945419.2637,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/modes/phase-executor/__tests__/mitigate-credentials.test.ts"},{"assertionResults":[{"ancestorTitles":["ElixirASTAnalyzer - Encryption","encryption integration"],"fullName":"ElixirASTAnalyzer - Encryption encryption integration should encrypt files before sending to API","status":"passed","title":"should encrypt files before sending to API","duration":1.821425999999974,"failureMessages":[],"meta":{}},{"ancestorTitles":["ElixirASTAnalyzer - Encryption","encryption integration"],"fullName":"ElixirASTAnalyzer - Encryption encryption integration should use AES-256-GCM encryption","status":"passed","title":"should use AES-256-GCM encryption","duration":0.6471710000000712,"failureMessages":[],"meta":{}},{"ancestorTitles":["ElixirASTAnalyzer - Encryption","decryption of responses"],"fullName":"ElixirASTAnalyzer - Encryption decryption of responses should decrypt API responses when encryption is used","status":"passed","title":"should decrypt API responses when encryption is used","duration":0.6416150000000016,"failureMessages":[],"meta":{}}],"startTime":1760046946291,"endTime":1760046946293.6472,"status":"passed","message":"","name":"/var/tmp/vibe-kanban/worktrees/5d95-fix-up-existing/src/security/analyzers/__tests__/elixir-ast-analyzer-encryption.test.ts"}]}