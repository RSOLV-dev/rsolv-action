{
  "numTotalTestSuites": 608,
  "numPassedTestSuites": 543,
  "numFailedTestSuites": 65,
  "numPendingTestSuites": 0,
  "numTotalTests": 1012,
  "numPassedTests": 900,
  "numFailedTests": 47,
  "numPendingTests": 60,
  "numTodoTests": 0,
  "startTime": 1759803953250,
  "success": false,
  "testResults": [
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Memory Investigation"
          ],
          "fullName": "Memory Investigation should check pattern loading without detection",
          "status": "passed",
          "title": "should check pattern loading without detection",
          "duration": 2.0861519999998563,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Memory Investigation"
          ],
          "fullName": "Memory Investigation should test small code detection",
          "status": "passed",
          "title": "should test small code detection",
          "duration": 1.5852730000005977,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Memory Investigation"
          ],
          "fullName": "Memory Investigation should check AST interpreter directly",
          "status": "passed",
          "title": "should check AST interpreter directly",
          "duration": 0.3518900000017311,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803965309,
      "endTime": 1759803965313.3518,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/test/memory-investigation.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "GREEN Phase - Server AST Integration Working",
            "New Detector with Server AST"
          ],
          "fullName": "GREEN Phase - Server AST Integration Working New Detector with Server AST should use ElixirASTAnalyzer when API key is provided",
          "status": "passed",
          "title": "should use ElixirASTAnalyzer when API key is provided",
          "duration": 0.2700960000001942,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "GREEN Phase - Server AST Integration Working",
            "New Detector with Server AST"
          ],
          "fullName": "GREEN Phase - Server AST Integration Working New Detector with Server AST should fall back to client-side AST when no API key",
          "status": "passed",
          "title": "should fall back to client-side AST when no API key",
          "duration": 0.2102599999998347,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "GREEN Phase - Server AST Integration Working",
            "New Detector with Server AST"
          ],
          "fullName": "GREEN Phase - Server AST Integration Working New Detector with Server AST should support multiple languages with server AST",
          "status": "passed",
          "title": "should support multiple languages with server AST",
          "duration": 0.3016910000005737,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "GREEN Phase - Server AST Integration Working",
            "New Detector with Server AST"
          ],
          "fullName": "GREEN Phase - Server AST Integration Working New Detector with Server AST should only support JS/TS without server AST",
          "status": "passed",
          "title": "should only support JS/TS without server AST",
          "duration": 0.1745730000002368,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "GREEN Phase - Server AST Integration Working",
            "Mock Server AST Detection"
          ],
          "fullName": "GREEN Phase - Server AST Integration Working Mock Server AST Detection should handle Python code through server AST",
          "status": "skipped",
          "title": "should handle Python code through server AST",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "GREEN Phase - Server AST Integration Working",
            "Mock Server AST Detection"
          ],
          "fullName": "GREEN Phase - Server AST Integration Working Mock Server AST Detection should reject unsupported languages gracefully",
          "status": "passed",
          "title": "should reject unsupported languages gracefully",
          "duration": 0.3017409999993106,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "GREEN Phase - Server AST Integration Working",
            "Configuration Options"
          ],
          "fullName": "GREEN Phase - Server AST Integration Working Configuration Options should respect useServerAST=false even with API key",
          "status": "passed",
          "title": "should respect useServerAST=false even with API key",
          "duration": 0.1890160000002652,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "GREEN Phase - Server AST Integration Working",
            "Configuration Options"
          ],
          "fullName": "GREEN Phase - Server AST Integration Working Configuration Options should use environment variables as fallback",
          "status": "passed",
          "title": "should use environment variables as fallback",
          "duration": 0.13262000000031549,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803965262,
      "endTime": 1759803965264.189,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/test/server-ast-green-phase.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Server-Side AST Integration",
            "AST Integration Tests"
          ],
          "fullName": "Server-Side AST Integration AST Integration Tests should use ASTPatternInterpreter for vulnerability detection",
          "status": "passed",
          "title": "should use ASTPatternInterpreter for vulnerability detection",
          "duration": 0.3335589999999229,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Server-Side AST Integration",
            "AST Integration Tests"
          ],
          "fullName": "Server-Side AST Integration AST Integration Tests should detect JavaScript eval injection",
          "status": "passed",
          "title": "should detect JavaScript eval injection",
          "duration": 32.53302699999995,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Server-Side AST Integration",
            "AST Integration Tests"
          ],
          "fullName": "Server-Side AST Integration AST Integration Tests should detect Python SQL injection via server AST",
          "status": "skipped",
          "title": "should detect Python SQL injection via server AST",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Server-Side AST Integration",
            "AST Integration Tests"
          ],
          "fullName": "Server-Side AST Integration AST Integration Tests should detect Ruby command injection via server AST",
          "status": "skipped",
          "title": "should detect Ruby command injection via server AST",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Server-Side AST Integration",
            "AST Integration Tests"
          ],
          "fullName": "Server-Side AST Integration AST Integration Tests should detect PHP XSS via server AST",
          "status": "skipped",
          "title": "should detect PHP XSS via server AST",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Server-Side AST Integration",
            "AST Integration Tests"
          ],
          "fullName": "Server-Side AST Integration AST Integration Tests should achieve >90% accuracy on mixed language corpus",
          "status": "skipped",
          "title": "should achieve >90% accuracy on mixed language corpus",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Server-Side AST Integration",
            "AST Integration Tests"
          ],
          "fullName": "Server-Side AST Integration AST Integration Tests should use server-side AST service endpoint",
          "status": "skipped",
          "title": "should use server-side AST service endpoint",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Server-Side AST Integration",
            "Test Infrastructure"
          ],
          "fullName": "Server-Side AST Integration Test Infrastructure should have ElixirASTAnalyzer class available",
          "status": "passed",
          "title": "should have ElixirASTAnalyzer class available",
          "duration": 0.17917800000009265,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803954679,
      "endTime": 1759803954712.533,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/test/server-ast-integration.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Vendor Detection File Extraction (RFC-047 Fix)"
          ],
          "fullName": "Vendor Detection File Extraction (RFC-047 Fix) should extract files from vulnerabilities with singular \"file\" property",
          "status": "passed",
          "title": "should extract files from vulnerabilities with singular \"file\" property",
          "duration": 0.3117279999987659,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Vendor Detection File Extraction (RFC-047 Fix)"
          ],
          "fullName": "Vendor Detection File Extraction (RFC-047 Fix) should extract files from vulnerabilities with plural \"files\" property",
          "status": "passed",
          "title": "should extract files from vulnerabilities with plural \"files\" property",
          "duration": 0.1881630000007135,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Vendor Detection File Extraction (RFC-047 Fix)"
          ],
          "fullName": "Vendor Detection File Extraction (RFC-047 Fix) should handle mixed vulnerabilities with both file and files properties",
          "status": "passed",
          "title": "should handle mixed vulnerabilities with both file and files properties",
          "duration": 0.21131900000000314,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Vendor Detection File Extraction (RFC-047 Fix)"
          ],
          "fullName": "Vendor Detection File Extraction (RFC-047 Fix) should return empty array for vulnerabilities without file properties",
          "status": "passed",
          "title": "should return empty array for vulnerabilities without file properties",
          "duration": 0.13558999999986554,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Vendor Detection File Extraction (RFC-047 Fix)"
          ],
          "fullName": "Vendor Detection File Extraction (RFC-047 Fix) OLD BROKEN CODE: should demonstrate the bug",
          "status": "passed",
          "title": "OLD BROKEN CODE: should demonstrate the bug",
          "duration": 0.12699799999973038,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803965286,
      "endTime": 1759803965287.1355,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/test/vendor-detection-file-extraction.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Issue Limiting Logic"
          ],
          "fullName": "Issue Limiting Logic should slice issues array when maxIssues is set",
          "status": "passed",
          "title": "should slice issues array when maxIssues is set",
          "duration": 0.18420599999990372,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Issue Limiting Logic"
          ],
          "fullName": "Issue Limiting Logic should return all issues when maxIssues is not set",
          "status": "passed",
          "title": "should return all issues when maxIssues is not set",
          "duration": 0.09663999999975204,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Issue Limiting Logic"
          ],
          "fullName": "Issue Limiting Logic should return all issues when maxIssues is 0",
          "status": "passed",
          "title": "should return all issues when maxIssues is 0",
          "duration": 0.06935199999861652,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Issue Limiting Logic"
          ],
          "fullName": "Issue Limiting Logic should return all issues when maxIssues is greater than issue count",
          "status": "passed",
          "title": "should return all issues when maxIssues is greater than issue count",
          "duration": 0.060938000000533066,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Issue Limiting Logic"
          ],
          "fullName": "Issue Limiting Logic should handle single issue limit",
          "status": "passed",
          "title": "should handle single issue limit",
          "duration": 0.07481999999981781,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Issue Limiting Logic"
          ],
          "fullName": "Issue Limiting Logic should handle exact match of maxIssues and issue count",
          "status": "passed",
          "title": "should handle exact match of maxIssues and issue count",
          "duration": 0.05487100000027567,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803965292,
      "endTime": 1759803965292.1843,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/__tests__/index-maxissues.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Workflow Timeout Behavior"
          ],
          "fullName": "Workflow Timeout Behavior should timeout workflow after 2 minutes",
          "status": "passed",
          "title": "should timeout workflow after 2 minutes",
          "duration": 101.41955899999994,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Workflow Timeout Behavior"
          ],
          "fullName": "Workflow Timeout Behavior should complete successfully before timeout",
          "status": "passed",
          "title": "should complete successfully before timeout",
          "duration": 1.2492460000000847,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Workflow Timeout Behavior"
          ],
          "fullName": "Workflow Timeout Behavior should handle no issues gracefully without timeout",
          "status": "passed",
          "title": "should handle no issues gracefully without timeout",
          "duration": 0.6578110000000379,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Workflow Timeout Behavior"
          ],
          "fullName": "Workflow Timeout Behavior should include timeout information in error message",
          "status": "passed",
          "title": "should include timeout information in error message",
          "duration": 100.91357100000005,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Workflow Timeout Behavior"
          ],
          "fullName": "Workflow Timeout Behavior should use configured processing options",
          "status": "passed",
          "title": "should use configured processing options",
          "duration": 0.4519359999999324,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803954438,
      "endTime": 1759803954642.452,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/__tests__/workflow-timeout.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Validation Branch Persistence",
            "Phase 1 RED: Define expected behavior"
          ],
          "fullName": "Validation Branch Persistence Phase 1 RED: Define expected behavior should create a feature branch during validation",
          "status": "passed",
          "title": "should create a feature branch during validation",
          "duration": 38.12936100000002,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Validation Branch Persistence",
            "Phase 1 RED: Define expected behavior"
          ],
          "fullName": "Validation Branch Persistence Phase 1 RED: Define expected behavior should commit generated red tests to the validation branch",
          "status": "passed",
          "title": "should commit generated red tests to the validation branch",
          "duration": 76.30835000000002,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Validation Branch Persistence",
            "Phase 1 RED: Define expected behavior"
          ],
          "fullName": "Validation Branch Persistence Phase 1 RED: Define expected behavior should store branch name in validation results",
          "status": "passed",
          "title": "should store branch name in validation results",
          "duration": 23.801324000000022,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Validation Branch Persistence",
            "Phase 1 RED: Define expected behavior"
          ],
          "fullName": "Validation Branch Persistence Phase 1 RED: Define expected behavior should checkout validation branch in mitigation phase",
          "status": "passed",
          "title": "should checkout validation branch in mitigation phase",
          "duration": 54.00137700000005,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Validation Branch Persistence",
            "Phase 1 RED: Define expected behavior"
          ],
          "fullName": "Validation Branch Persistence Phase 1 RED: Define expected behavior should handle missing validation branch gracefully",
          "status": "passed",
          "title": "should handle missing validation branch gracefully",
          "duration": 31.31553400000007,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Validation Branch Persistence",
            "Phase 1 RED: Define expected behavior"
          ],
          "fullName": "Validation Branch Persistence Phase 1 RED: Define expected behavior should preserve test files between validation and mitigation phases",
          "status": "passed",
          "title": "should preserve test files between validation and mitigation phases",
          "duration": 63.15942899999993,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803953871,
      "endTime": 1759803954158.1594,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/__tests__/modes/validation-branch-persistence.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Claude Code Live API Tests"
          ],
          "fullName": "Claude Code Live API Tests should check if Claude Code CLI is actually available",
          "status": "passed",
          "title": "should check if Claude Code CLI is actually available",
          "duration": 1.1513029999996434,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code Live API Tests"
          ],
          "fullName": "Claude Code Live API Tests should generate real solution using Claude Code",
          "status": "passed",
          "title": "should generate real solution using Claude Code",
          "duration": 2087.783658,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code Live API Tests"
          ],
          "fullName": "Claude Code Live API Tests should work with enhanced prompts in live mode",
          "status": "passed",
          "title": "should work with enhanced prompts in live mode",
          "duration": 5708.7707550000005,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code File System Integration"
          ],
          "fullName": "Claude Code File System Integration should handle real file operations",
          "status": "passed",
          "title": "should handle real file operations",
          "duration": 0.22692299999835086,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803957168,
      "endTime": 1759803964966.7708,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/claude-code-live.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "DISABLE_FIX_VALIDATION bug reproduction",
            "when DISABLE_FIX_VALIDATION is set"
          ],
          "fullName": "DISABLE_FIX_VALIDATION bug reproduction when DISABLE_FIX_VALIDATION is set should skip validation regardless of other settings",
          "status": "passed",
          "title": "should skip validation regardless of other settings",
          "duration": 2.6135250000006636,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "DISABLE_FIX_VALIDATION bug reproduction",
            "when DISABLE_FIX_VALIDATION is set"
          ],
          "fullName": "DISABLE_FIX_VALIDATION bug reproduction when DISABLE_FIX_VALIDATION is set should skip validation even if testGeneration.enabled is true",
          "status": "passed",
          "title": "should skip validation even if testGeneration.enabled is true",
          "duration": 0.3751650000012887,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "DISABLE_FIX_VALIDATION bug reproduction",
            "proper validation skip logic"
          ],
          "fullName": "DISABLE_FIX_VALIDATION bug reproduction proper validation skip logic should skip when fixValidation.enabled is false",
          "status": "passed",
          "title": "should skip when fixValidation.enabled is false",
          "duration": 0.07549800000015239,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "DISABLE_FIX_VALIDATION bug reproduction",
            "proper validation skip logic"
          ],
          "fullName": "DISABLE_FIX_VALIDATION bug reproduction proper validation skip logic should not skip when fixValidation.enabled is true",
          "status": "passed",
          "title": "should not skip when fixValidation.enabled is true",
          "duration": 0.036084999999729916,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "DISABLE_FIX_VALIDATION bug reproduction",
            "proper validation skip logic"
          ],
          "fullName": "DISABLE_FIX_VALIDATION bug reproduction proper validation skip logic should skip regardless of testGeneration settings when disabled",
          "status": "passed",
          "title": "should skip regardless of testGeneration settings when disabled",
          "duration": 0.034014000000752276,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803965269,
      "endTime": 1759803965273.0361,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/disable-validation-bug.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "generateSolutionWithFeedback"
          ],
          "fullName": "generateSolutionWithFeedback generates a solution with feedback integration",
          "status": "passed",
          "title": "generates a solution with feedback integration",
          "duration": 0.18933499999911874,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "generateSolutionWithFeedback"
          ],
          "fullName": "generateSolutionWithFeedback should integrate feedback when enhancing AI prompts",
          "status": "passed",
          "title": "should integrate feedback when enhancing AI prompts",
          "duration": 0.13259600000128557,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803965279,
      "endTime": 1759803965279.1895,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/feedbackEnhanced.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "GitBasedProcessor - Test Mode (NEEDS REFACTORING)"
          ],
          "fullName": "GitBasedProcessor - Test Mode (NEEDS REFACTORING) should create PR even when validation fails in test mode",
          "status": "skipped",
          "title": "should create PR even when validation fails in test mode",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "GitBasedProcessor - Test Mode (NEEDS REFACTORING)"
          ],
          "fullName": "GitBasedProcessor - Test Mode (NEEDS REFACTORING) should include validation failure details in result",
          "status": "skipped",
          "title": "should include validation failure details in result",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "GitBasedProcessor - Test Mode (NEEDS REFACTORING)"
          ],
          "fullName": "GitBasedProcessor - Test Mode (NEEDS REFACTORING) should not rollback changes when validation fails in test mode",
          "status": "skipped",
          "title": "should not rollback changes when validation fails in test mode",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "GitBasedProcessor - Test Mode (NEEDS REFACTORING)"
          ],
          "fullName": "GitBasedProcessor - Test Mode (NEEDS REFACTORING) should mark result as test mode",
          "status": "skipped",
          "title": "should mark result as test mode",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "GitBasedProcessor - Test Mode (NEEDS REFACTORING)"
          ],
          "fullName": "GitBasedProcessor - Test Mode (NEEDS REFACTORING) should not create PR when validation fails in normal mode",
          "status": "skipped",
          "title": "should not create PR when validation fails in normal mode",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "GitBasedProcessor - Test Mode (NEEDS REFACTORING)"
          ],
          "fullName": "GitBasedProcessor - Test Mode (NEEDS REFACTORING) should rollback changes when validation fails in normal mode",
          "status": "skipped",
          "title": "should rollback changes when validation fails in normal mode",
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803953250,
      "endTime": 1759803953250,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/git-based-processor-test-mode.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "SecurityAwareAnalyzer",
            "Security Analysis"
          ],
          "fullName": "SecurityAwareAnalyzer Security Analysis should detect SQL injection vulnerabilities in code",
          "status": "passed",
          "title": "should detect SQL injection vulnerabilities in code",
          "duration": 8.23850200000004,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "SecurityAwareAnalyzer",
            "Security Analysis"
          ],
          "fullName": "SecurityAwareAnalyzer Security Analysis should detect XSS vulnerabilities in code",
          "status": "passed",
          "title": "should detect XSS vulnerabilities in code",
          "duration": 1.5344339999999193,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "SecurityAwareAnalyzer",
            "Security Analysis"
          ],
          "fullName": "SecurityAwareAnalyzer Security Analysis should calculate appropriate risk levels",
          "status": "passed",
          "title": "should calculate appropriate risk levels",
          "duration": 1.241647999999941,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "SecurityAwareAnalyzer",
            "Security Analysis"
          ],
          "fullName": "SecurityAwareAnalyzer Security Analysis should adjust complexity based on security risk",
          "status": "passed",
          "title": "should adjust complexity based on security risk",
          "duration": 1.8390699999999924,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "SecurityAwareAnalyzer",
            "Security Analysis"
          ],
          "fullName": "SecurityAwareAnalyzer Security Analysis should handle files with no vulnerabilities",
          "status": "passed",
          "title": "should handle files with no vulnerabilities",
          "duration": 1.4723840000000337,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "SecurityAwareAnalyzer",
            "Security Analysis"
          ],
          "fullName": "SecurityAwareAnalyzer Security Analysis should handle mixed languages",
          "status": "passed",
          "title": "should handle mixed languages",
          "duration": 1.236306999999897,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "SecurityAwareAnalyzer",
            "Issue Type Detection"
          ],
          "fullName": "SecurityAwareAnalyzer Issue Type Detection should detect security issues from title and body",
          "status": "passed",
          "title": "should detect security issues from title and body",
          "duration": 0.2746839999999793,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "SecurityAwareAnalyzer",
            "Issue Type Detection"
          ],
          "fullName": "SecurityAwareAnalyzer Issue Type Detection should detect bug issues",
          "status": "passed",
          "title": "should detect bug issues",
          "duration": 0.19947400000000926,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803954175,
      "endTime": 1759803954192.1995,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/security-analyzer.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Validation Skip Logic",
            "shouldSkipValidation (correct logic)"
          ],
          "fullName": "Validation Skip Logic shouldSkipValidation (correct logic) should skip when fixValidation.enabled is false",
          "status": "passed",
          "title": "should skip when fixValidation.enabled is false",
          "duration": 0.12649100000089675,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Validation Skip Logic",
            "shouldSkipValidation (correct logic)"
          ],
          "fullName": "Validation Skip Logic shouldSkipValidation (correct logic) should not skip when fixValidation.enabled is true",
          "status": "passed",
          "title": "should not skip when fixValidation.enabled is true",
          "duration": 0.05930900000021211,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Validation Skip Logic",
            "shouldSkipValidation (correct logic)"
          ],
          "fullName": "Validation Skip Logic shouldSkipValidation (correct logic) should not skip when fixValidation.enabled is undefined",
          "status": "passed",
          "title": "should not skip when fixValidation.enabled is undefined",
          "duration": 0.05728399999861722,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Validation Skip Logic",
            "buggyValidationCondition (current bug)"
          ],
          "fullName": "Validation Skip Logic buggyValidationCondition (current bug) FAILS to skip validation when DISABLE_FIX_VALIDATION is set but testGeneration.validateFixes is true",
          "status": "passed",
          "title": "FAILS to skip validation when DISABLE_FIX_VALIDATION is set but testGeneration.validateFixes is true",
          "duration": 0.06459700000050361,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Validation Skip Logic",
            "buggyValidationCondition (current bug)"
          ],
          "fullName": "Validation Skip Logic buggyValidationCondition (current bug) correctly skips when both are false",
          "status": "passed",
          "title": "correctly skips when both are false",
          "duration": 0.04702300000099058,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Validation Skip Logic",
            "Fixed validation condition"
          ],
          "fullName": "Validation Skip Logic Fixed validation condition should NOT enter validation when DISABLE_FIX_VALIDATION is set",
          "status": "passed",
          "title": "should NOT enter validation when DISABLE_FIX_VALIDATION is set",
          "duration": 0.04711700000007113,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Validation Skip Logic",
            "Fixed validation condition"
          ],
          "fullName": "Validation Skip Logic Fixed validation condition should enter validation when fixValidation.enabled is true",
          "status": "passed",
          "title": "should enter validation when fixValidation.enabled is true",
          "duration": 0.04439499999898544,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Validation Skip Logic",
            "Fixed validation condition"
          ],
          "fullName": "Validation Skip Logic Fixed validation condition should enter validation when testGeneration.validateFixes is true and not disabled",
          "status": "passed",
          "title": "should enter validation when testGeneration.validateFixes is true and not disabled",
          "duration": 0.04894299999978102,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Validation Skip Logic",
            "Fixed validation condition"
          ],
          "fullName": "Validation Skip Logic Fixed validation condition should not enter validation when both are false/undefined",
          "status": "passed",
          "title": "should not enter validation when both are false/undefined",
          "duration": 0.04832399999941117,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803965241,
      "endTime": 1759803965242.0647,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/validation-skip-logic.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Feedback Types"
          ],
          "fullName": "Feedback Types should allow creating a valid FeedbackEvent",
          "status": "passed",
          "title": "should allow creating a valid FeedbackEvent",
          "duration": 0.12014300000009825,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Feedback Types"
          ],
          "fullName": "Feedback Types should allow creating a valid FeedbackEvent with modifications",
          "status": "passed",
          "title": "should allow creating a valid FeedbackEvent with modifications",
          "duration": 0.08102599999983795,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Feedback Types"
          ],
          "fullName": "Feedback Types should allow creating a valid PromptEnhancementContext",
          "status": "passed",
          "title": "should allow creating a valid PromptEnhancementContext",
          "duration": 0.1407629999994242,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Feedback Types"
          ],
          "fullName": "Feedback Types should enforce proper enumeration values",
          "status": "passed",
          "title": "should enforce proper enumeration values",
          "duration": 0.12416399999892747,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803965247,
      "endTime": 1759803965247.1409,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/feedback/__tests__/types.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Phase Decomposition - processIssueWithGit refactoring",
            "Scan Phase Extraction"
          ],
          "fullName": "Phase Decomposition - processIssueWithGit refactoring Scan Phase Extraction executeScanForIssue should analyze issue and determine if fixable",
          "status": "passed",
          "title": "executeScanForIssue should analyze issue and determine if fixable",
          "duration": 53.303132999999946,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase Decomposition - processIssueWithGit refactoring",
            "Scan Phase Extraction"
          ],
          "fullName": "Phase Decomposition - processIssueWithGit refactoring Scan Phase Extraction executeScanForIssue should fail if git has uncommitted changes",
          "status": "passed",
          "title": "executeScanForIssue should fail if git has uncommitted changes",
          "duration": 0.3891840000000002,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase Decomposition - processIssueWithGit refactoring",
            "Scan Phase Extraction"
          ],
          "fullName": "Phase Decomposition - processIssueWithGit refactoring Scan Phase Extraction executeScanForIssue should store scan results in PhaseDataClient",
          "status": "passed",
          "title": "executeScanForIssue should store scan results in PhaseDataClient",
          "duration": 1.422286999999983,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase Decomposition - processIssueWithGit refactoring",
            "Validate Phase Extraction"
          ],
          "fullName": "Phase Decomposition - processIssueWithGit refactoring Validate Phase Extraction executeValidateForIssue should generate tests for vulnerability",
          "status": "passed",
          "title": "executeValidateForIssue should generate tests for vulnerability",
          "duration": 14.106901999999991,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase Decomposition - processIssueWithGit refactoring",
            "Validate Phase Extraction"
          ],
          "fullName": "Phase Decomposition - processIssueWithGit refactoring Validate Phase Extraction executeValidateForIssue should use TestGeneratingSecurityAnalyzer",
          "status": "passed",
          "title": "executeValidateForIssue should use TestGeneratingSecurityAnalyzer",
          "duration": 4.123418000000015,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase Decomposition - processIssueWithGit refactoring",
            "Validate Phase Extraction"
          ],
          "fullName": "Phase Decomposition - processIssueWithGit refactoring Validate Phase Extraction executeValidateForIssue should store validation results",
          "status": "passed",
          "title": "executeValidateForIssue should store validation results",
          "duration": 1.9163790000000063,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase Decomposition - processIssueWithGit refactoring",
            "Mitigate Phase Extraction"
          ],
          "fullName": "Phase Decomposition - processIssueWithGit refactoring Mitigate Phase Extraction executeMitigateForIssue should apply fix using Claude Code",
          "status": "passed",
          "title": "executeMitigateForIssue should apply fix using Claude Code",
          "duration": 4.084809999999948,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase Decomposition - processIssueWithGit refactoring",
            "Mitigate Phase Extraction"
          ],
          "fullName": "Phase Decomposition - processIssueWithGit refactoring Mitigate Phase Extraction executeMitigateForIssue should validate fix with generated tests",
          "status": "passed",
          "title": "executeMitigateForIssue should validate fix with generated tests",
          "duration": 6.96545100000003,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase Decomposition - processIssueWithGit refactoring",
            "Mitigate Phase Extraction"
          ],
          "fullName": "Phase Decomposition - processIssueWithGit refactoring Mitigate Phase Extraction executeMitigateForIssue should retry on validation failure",
          "status": "passed",
          "title": "executeMitigateForIssue should retry on validation failure",
          "duration": 12.640148000000067,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase Decomposition - processIssueWithGit refactoring",
            "Full Three-Phase Execution"
          ],
          "fullName": "Phase Decomposition - processIssueWithGit refactoring Full Three-Phase Execution executeThreePhaseForIssue should run all phases sequentially",
          "status": "passed",
          "title": "executeThreePhaseForIssue should run all phases sequentially",
          "duration": 13.42318499999999,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase Decomposition - processIssueWithGit refactoring",
            "Full Three-Phase Execution"
          ],
          "fullName": "Phase Decomposition - processIssueWithGit refactoring Full Three-Phase Execution executeThreePhaseForIssue should abort if scan determines not fixable",
          "status": "passed",
          "title": "executeThreePhaseForIssue should abort if scan determines not fixable",
          "duration": 0.464841999999976,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase Decomposition - processIssueWithGit refactoring",
            "Full Three-Phase Execution"
          ],
          "fullName": "Phase Decomposition - processIssueWithGit refactoring Full Three-Phase Execution executeThreePhaseForIssue should pass data between phases",
          "status": "passed",
          "title": "executeThreePhaseForIssue should pass data between phases",
          "duration": 0.7010099999999966,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803953723,
      "endTime": 1759803953837.701,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/modes/__tests__/phase-decomposition.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Ruby Vulnerability Detection"
          ],
          "fullName": "Ruby Vulnerability Detection should have Ruby SQL injection pattern",
          "status": "passed",
          "title": "should have Ruby SQL injection pattern",
          "duration": 0.12365200000022014,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Ruby Vulnerability Detection"
          ],
          "fullName": "Ruby Vulnerability Detection should match Ruby SQL injection with regex",
          "status": "passed",
          "title": "should match Ruby SQL injection with regex",
          "duration": 0.13339599999926577,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Ruby Vulnerability Detection"
          ],
          "fullName": "Ruby Vulnerability Detection should detect Ruby SQL injection with detector",
          "status": "passed",
          "title": "should detect Ruby SQL injection with detector",
          "duration": 0.5508960000006482,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Ruby Vulnerability Detection"
          ],
          "fullName": "Ruby Vulnerability Detection should detect Ruby SQL injection in full code",
          "status": "passed",
          "title": "should detect Ruby SQL injection in full code",
          "duration": 0.394507999999405,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803965297,
      "endTime": 1759803965298.3945,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/security/__tests__/ruby-detection.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Safe Usage Detection",
            "SQL Injection Safe Patterns"
          ],
          "fullName": "Safe Usage Detection SQL Injection Safe Patterns should recognize parameterized queries as safe",
          "status": "passed",
          "title": "should recognize parameterized queries as safe",
          "duration": 0.10316299999976764,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Safe Usage Detection",
            "SQL Injection Safe Patterns"
          ],
          "fullName": "Safe Usage Detection SQL Injection Safe Patterns should recognize prepared statements as safe",
          "status": "passed",
          "title": "should recognize prepared statements as safe",
          "duration": 0.04805499999929452,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Safe Usage Detection",
            "SQL Injection Safe Patterns"
          ],
          "fullName": "Safe Usage Detection SQL Injection Safe Patterns should NOT consider Ruby hash syntax as safe SQL",
          "status": "passed",
          "title": "should NOT consider Ruby hash syntax as safe SQL",
          "duration": 0.030235000000175205,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Safe Usage Detection",
            "SQL Injection Safe Patterns"
          ],
          "fullName": "Safe Usage Detection SQL Injection Safe Patterns should NOT consider Ruby string interpolation as safe",
          "status": "passed",
          "title": "should NOT consider Ruby string interpolation as safe",
          "duration": 0.02590500000042084,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Safe Usage Detection",
            "SQL Injection Safe Patterns"
          ],
          "fullName": "Safe Usage Detection SQL Injection Safe Patterns should recognize actual named parameters as safe",
          "status": "passed",
          "title": "should recognize actual named parameters as safe",
          "duration": 0.02664099999856262,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Safe Usage Detection",
            "Language-specific patterns"
          ],
          "fullName": "Safe Usage Detection Language-specific patterns should handle Ruby ActiveRecord safe patterns",
          "status": "passed",
          "title": "should handle Ruby ActiveRecord safe patterns",
          "duration": 0.028882000000521657,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Safe Usage Detection",
            "Language-specific patterns"
          ],
          "fullName": "Safe Usage Detection Language-specific patterns should handle Python parameterized queries",
          "status": "passed",
          "title": "should handle Python parameterized queries",
          "duration": 0.026577000000543194,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803965304,
      "endTime": 1759803965304.1033,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/security/__tests__/safe-usage.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "RFC-047: Vendor Library Detection",
            "Vendor Directory Detection"
          ],
          "fullName": "RFC-047: Vendor Library Detection Vendor Directory Detection should detect node_modules as vendor",
          "status": "passed",
          "title": "should detect node_modules as vendor",
          "duration": 0.2220079999999598,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-047: Vendor Library Detection",
            "Vendor Directory Detection"
          ],
          "fullName": "RFC-047: Vendor Library Detection Vendor Directory Detection should detect vendor directory as vendor",
          "status": "passed",
          "title": "should detect vendor directory as vendor",
          "duration": 0.08541799999989053,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-047: Vendor Library Detection",
            "Vendor Directory Detection"
          ],
          "fullName": "RFC-047: Vendor Library Detection Vendor Directory Detection should detect bower_components as vendor",
          "status": "passed",
          "title": "should detect bower_components as vendor",
          "duration": 0.054357000000209155,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-047: Vendor Library Detection",
            "Vendor Directory Detection"
          ],
          "fullName": "RFC-047: Vendor Library Detection Vendor Directory Detection should detect minified files as vendor",
          "status": "passed",
          "title": "should detect minified files as vendor",
          "duration": 0.04878499999995256,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-047: Vendor Library Detection",
            "Vendor Directory Detection"
          ],
          "fullName": "RFC-047: Vendor Library Detection Vendor Directory Detection should not detect application code as vendor",
          "status": "passed",
          "title": "should not detect application code as vendor",
          "duration": 0.19612000000006446,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-047: Vendor Library Detection",
            "Vendor Directory Detection"
          ],
          "fullName": "RFC-047: Vendor Library Detection Vendor Directory Detection should detect by file header comment",
          "status": "passed",
          "title": "should detect by file header comment",
          "duration": 0.10683800000015253,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-047: Vendor Library Detection",
            "Library Identification"
          ],
          "fullName": "RFC-047: Vendor Library Detection Library Identification should identify jQuery from file path",
          "status": "passed",
          "title": "should identify jQuery from file path",
          "duration": 0.17146699999989323,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-047: Vendor Library Detection",
            "Library Identification"
          ],
          "fullName": "RFC-047: Vendor Library Detection Library Identification should identify Bootstrap from file content",
          "status": "passed",
          "title": "should identify Bootstrap from file content",
          "duration": 0.15401199999996606,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-047: Vendor Library Detection",
            "Library Identification"
          ],
          "fullName": "RFC-047: Vendor Library Detection Library Identification should return null for non-vendor files",
          "status": "passed",
          "title": "should return null for non-vendor files",
          "duration": 0.15194300000007388,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-047: Vendor Library Detection",
            "Dependency Analysis"
          ],
          "fullName": "RFC-047: Vendor Library Detection Dependency Analysis should find package.json dependencies",
          "status": "passed",
          "title": "should find package.json dependencies",
          "duration": 0.15006999999991422,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-047: Vendor Library Detection",
            "Dependency Analysis"
          ],
          "fullName": "RFC-047: Vendor Library Detection Dependency Analysis should check if file belongs to known dependency",
          "status": "passed",
          "title": "should check if file belongs to known dependency",
          "duration": 0.09132499999986976,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-047: Vendor Library Detection",
            "Vulnerability Handling"
          ],
          "fullName": "RFC-047: Vendor Library Detection Vulnerability Handling should return update action for vendor vulnerabilities",
          "status": "passed",
          "title": "should return update action for vendor vulnerabilities",
          "duration": 0.17265199999997094,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-047: Vendor Library Detection",
            "Vulnerability Handling"
          ],
          "fullName": "RFC-047: Vendor Library Detection Vulnerability Handling should return fix action for application vulnerabilities",
          "status": "passed",
          "title": "should return fix action for application vulnerabilities",
          "duration": 0.07721499999979642,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-047: Vendor Library Detection",
            "Vulnerability Handling"
          ],
          "fullName": "RFC-047: Vendor Library Detection Vulnerability Handling should not attempt to patch vendor code",
          "status": "passed",
          "title": "should not attempt to patch vendor code",
          "duration": 0.12930499999993117,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-047: Vendor Library Detection",
            "Update Recommendations"
          ],
          "fullName": "RFC-047: Vendor Library Detection Update Recommendations should recommend safe update version",
          "status": "passed",
          "title": "should recommend safe update version",
          "duration": 0.22295299999996132,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-047: Vendor Library Detection",
            "Update Recommendations"
          ],
          "fullName": "RFC-047: Vendor Library Detection Update Recommendations should provide update commands",
          "status": "passed",
          "title": "should provide update commands",
          "duration": 0.11240300000008574,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-047: Vendor Library Detection",
            "Issue Creation"
          ],
          "fullName": "RFC-047: Vendor Library Detection Issue Creation should create vendor-specific issue",
          "status": "passed",
          "title": "should create vendor-specific issue",
          "duration": 0.19965899999988324,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-047: Vendor Library Detection",
            "Issue Creation"
          ],
          "fullName": "RFC-047: Vendor Library Detection Issue Creation should not create patch PR for vendor files",
          "status": "passed",
          "title": "should not create patch PR for vendor files",
          "duration": 0.08196599999996579,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803954663,
      "endTime": 1759803954666.1997,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/vendor/__tests__/vendor-detector.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Claude CLI Usage in Mitigation"
          ],
          "fullName": "Claude CLI Usage in Mitigation should use Claude CLI when vended credentials are enabled",
          "status": "failed",
          "title": "should use Claude CLI when vended credentials are enabled",
          "duration": 0.5213859999985289,
          "failureMessages": [
            "Error: generateSolution does not exist\n    at S (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/tinyspy/dist/index.js:4:11)\n    at Module.M (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/tinyspy/dist/index.js:121:3)\n    at Object.spyOn (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/spy/dist/index.js:21:24)\n    at /home/dylan/dev/rsolv/RSOLV-action/src/ai/adapters/__tests__/claude-cli-mitigation.test.ts:67:39\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude CLI Usage in Mitigation"
          ],
          "fullName": "Claude CLI Usage in Mitigation should use Claude CLI when RSOLV_USE_CLI is true",
          "status": "passed",
          "title": "should use Claude CLI when RSOLV_USE_CLI is true",
          "duration": 39.436147999998866,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude CLI Usage in Mitigation"
          ],
          "fullName": "Claude CLI Usage in Mitigation should use Claude CLI when structured phases are enabled",
          "status": "passed",
          "title": "should use Claude CLI when structured phases are enabled",
          "duration": 7.644046999999773,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude CLI Usage in Mitigation"
          ],
          "fullName": "Claude CLI Usage in Mitigation should NOT fall back to SDK when vended credentials are enabled and CLI fails",
          "status": "failed",
          "title": "should NOT fall back to SDK when vended credentials are enabled and CLI fails",
          "duration": 0.36668900000040594,
          "failureMessages": [
            "Error: generateSolution does not exist\n    at S (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/tinyspy/dist/index.js:4:11)\n    at Module.M (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/tinyspy/dist/index.js:121:3)\n    at Object.spyOn (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/spy/dist/index.js:21:24)\n    at /home/dylan/dev/rsolv/RSOLV-action/src/ai/adapters/__tests__/claude-cli-mitigation.test.ts:175:39\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)"
          ],
          "meta": {}
        }
      ],
      "startTime": 1759803965188,
      "endTime": 1759803965236.3667,
      "status": "failed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/adapters/__tests__/claude-cli-mitigation.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "GitBasedClaudeCodeAdapter - Data Flow Tests",
            "specificVulnerabilities data flow"
          ],
          "fullName": "GitBasedClaudeCodeAdapter - Data Flow Tests specificVulnerabilities data flow should pass specificVulnerabilities from issueContext to prompt",
          "status": "failed",
          "title": "should pass specificVulnerabilities from issueContext to prompt",
          "duration": 4.482317999999964,
          "failureMessages": [
            "AssertionError: expected [] to include 'SPECIFIC VULNERABILITIES TO FIX'\n    at Proxy.<anonymous> (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/expect/dist/index.js:1191:15)\n    at Proxy.<anonymous> (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/expect/dist/index.js:1029:14)\n    at Proxy.methodWrapper (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/chai/index.js:1686:25)\n    at /home/dylan/dev/rsolv/RSOLV-action/src/ai/adapters/__tests__/claude-code-git-data-flow.test.ts:106:22\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "GitBasedClaudeCodeAdapter - Data Flow Tests",
            "specificVulnerabilities data flow"
          ],
          "fullName": "GitBasedClaudeCodeAdapter - Data Flow Tests specificVulnerabilities data flow should log debug info when specificVulnerabilities are present",
          "status": "passed",
          "title": "should log debug info when specificVulnerabilities are present",
          "duration": 0.7049289999999928,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "GitBasedClaudeCodeAdapter - Data Flow Tests",
            "specificVulnerabilities data flow"
          ],
          "fullName": "GitBasedClaudeCodeAdapter - Data Flow Tests specificVulnerabilities data flow should handle missing specificVulnerabilities gracefully",
          "status": "failed",
          "title": "should handle missing specificVulnerabilities gracefully",
          "duration": 1.2600559999999632,
          "failureMessages": [
            "AssertionError: expected [] to include 'You are an expert security engineer'\n    at Proxy.<anonymous> (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/expect/dist/index.js:1191:15)\n    at Proxy.<anonymous> (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/expect/dist/index.js:1029:14)\n    at Proxy.methodWrapper (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/chai/index.js:1686:25)\n    at /home/dylan/dev/rsolv/RSOLV-action/src/ai/adapters/__tests__/claude-code-git-data-flow.test.ts:181:22\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "GitBasedClaudeCodeAdapter - Data Flow Tests",
            "generateSolution data flow"
          ],
          "fullName": "GitBasedClaudeCodeAdapter - Data Flow Tests generateSolution data flow should preserve specificVulnerabilities through generateSolution call",
          "status": "passed",
          "title": "should preserve specificVulnerabilities through generateSolution call",
          "duration": 0.41126699999995253,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803954262,
      "endTime": 1759803954268.4114,
      "status": "failed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/adapters/__tests__/claude-code-git-data-flow.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "ElixirASTAnalyzer - Integration",
            "end-to-end workflow"
          ],
          "fullName": "ElixirASTAnalyzer - Integration end-to-end workflow should complete full analysis workflow",
          "status": "passed",
          "title": "should complete full analysis workflow",
          "duration": 0.6538950000012846,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ElixirASTAnalyzer - Integration",
            "end-to-end workflow"
          ],
          "fullName": "ElixirASTAnalyzer - Integration end-to-end workflow should handle network errors gracefully",
          "status": "passed",
          "title": "should handle network errors gracefully",
          "duration": 1.2532950000004348,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ElixirASTAnalyzer - Integration",
            "end-to-end workflow"
          ],
          "fullName": "ElixirASTAnalyzer - Integration end-to-end workflow should handle timeout",
          "status": "passed",
          "title": "should handle timeout",
          "duration": 201.38239800000156,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ElixirASTAnalyzer - Integration",
            "configuration"
          ],
          "fullName": "ElixirASTAnalyzer - Integration configuration should validate API key",
          "status": "passed",
          "title": "should validate API key",
          "duration": 0.329464000000371,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ElixirASTAnalyzer - Integration",
            "configuration"
          ],
          "fullName": "ElixirASTAnalyzer - Integration configuration should validate API URL",
          "status": "passed",
          "title": "should validate API URL",
          "duration": 0.18174199999884877,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ElixirASTAnalyzer - Integration",
            "resource management"
          ],
          "fullName": "ElixirASTAnalyzer - Integration resource management should not leak memory with multiple analyses",
          "status": "passed",
          "title": "should not leak memory with multiple analyses",
          "duration": 0.23575800000071467,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ElixirASTAnalyzer - Integration",
            "resource management"
          ],
          "fullName": "ElixirASTAnalyzer - Integration resource management should cleanup all resources on cleanup",
          "status": "passed",
          "title": "should cleanup all resources on cleanup",
          "duration": 0.221056000000317,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803964977,
      "endTime": 1759803965181.2358,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/security/analyzers/__tests__/elixir-ast-analyzer.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "AST Service Verification - REVIEW Phase (Needs RFC-048 Test Mode)",
            "Python SQL Injection Detection"
          ],
          "fullName": "AST Service Verification - REVIEW Phase (Needs RFC-048 Test Mode) Python SQL Injection Detection should detect SQL injection via string concatenation",
          "status": "skipped",
          "title": "should detect SQL injection via string concatenation",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AST Service Verification - REVIEW Phase (Needs RFC-048 Test Mode)",
            "Python SQL Injection Detection"
          ],
          "fullName": "AST Service Verification - REVIEW Phase (Needs RFC-048 Test Mode) Python SQL Injection Detection should detect SQL injection with f-strings",
          "status": "skipped",
          "title": "should detect SQL injection with f-strings",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AST Service Verification - REVIEW Phase (Needs RFC-048 Test Mode)",
            "JavaScript SQL Injection Detection"
          ],
          "fullName": "AST Service Verification - REVIEW Phase (Needs RFC-048 Test Mode) JavaScript SQL Injection Detection should detect SQL injection in JavaScript",
          "status": "skipped",
          "title": "should detect SQL injection in JavaScript",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AST Service Verification - REVIEW Phase (Needs RFC-048 Test Mode)",
            "Ruby Command Injection Detection"
          ],
          "fullName": "AST Service Verification - REVIEW Phase (Needs RFC-048 Test Mode) Ruby Command Injection Detection should detect command injection in Ruby",
          "status": "skipped",
          "title": "should detect command injection in Ruby",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AST Service Verification - REVIEW Phase (Needs RFC-048 Test Mode)",
            "PHP XSS Detection"
          ],
          "fullName": "AST Service Verification - REVIEW Phase (Needs RFC-048 Test Mode) PHP XSS Detection should detect XSS in PHP echo statements",
          "status": "skipped",
          "title": "should detect XSS in PHP echo statements",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AST Service Verification - REVIEW Phase (Needs RFC-048 Test Mode)",
            "Accuracy Metrics"
          ],
          "fullName": "AST Service Verification - REVIEW Phase (Needs RFC-048 Test Mode) Accuracy Metrics should achieve >90% accuracy on test corpus",
          "status": "skipped",
          "title": "should achieve >90% accuracy on test corpus",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AST Service Verification - REVIEW Phase (Needs RFC-048 Test Mode)",
            "Performance Metrics"
          ],
          "fullName": "AST Service Verification - REVIEW Phase (Needs RFC-048 Test Mode) Performance Metrics should analyze files with acceptable latency",
          "status": "skipped",
          "title": "should analyze files with acceptable latency",
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803965731,
      "endTime": 1759803965731,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/test/ast-service-verification.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "SecurityDetectorV3 - Python Support (Needs RFC-048 Test Mode)"
          ],
          "fullName": "SecurityDetectorV3 - Python Support (Needs RFC-048 Test Mode) should detect SQL injection in Python code using server-side AST",
          "status": "skipped",
          "title": "should detect SQL injection in Python code using server-side AST",
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803965731,
      "endTime": 1759803965731,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/test/detector-v3-python.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "ValidationMode - Environment Variable Handling",
            "RSOLV_TESTING_MODE from environment_variables JSON"
          ],
          "fullName": "ValidationMode - Environment Variable Handling RSOLV_TESTING_MODE from environment_variables JSON should apply RSOLV_TESTING_MODE from config.environmentVariables to process.env",
          "status": "passed",
          "title": "should apply RSOLV_TESTING_MODE from config.environmentVariables to process.env",
          "duration": 0.49972699999989345,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ValidationMode - Environment Variable Handling",
            "RSOLV_TESTING_MODE from environment_variables JSON"
          ],
          "fullName": "ValidationMode - Environment Variable Handling RSOLV_TESTING_MODE from environment_variables JSON should detect testing mode when set via config.environmentVariables",
          "status": "passed",
          "title": "should detect testing mode when set via config.environmentVariables",
          "duration": 0.1804299999998875,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ValidationMode - Environment Variable Handling",
            "RSOLV_TESTING_MODE from environment_variables JSON"
          ],
          "fullName": "ValidationMode - Environment Variable Handling RSOLV_TESTING_MODE from environment_variables JSON should NOT apply testing mode when not in environmentVariables",
          "status": "passed",
          "title": "should NOT apply testing mode when not in environmentVariables",
          "duration": 0.1448750000004111,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ValidationMode - Environment Variable Handling",
            "RSOLV_TESTING_MODE from environment_variables JSON"
          ],
          "fullName": "ValidationMode - Environment Variable Handling RSOLV_TESTING_MODE from environment_variables JSON should handle empty environmentVariables object",
          "status": "passed",
          "title": "should handle empty environmentVariables object",
          "duration": 0.13221400000020367,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ValidationMode - Environment Variable Handling",
            "RSOLV_TESTING_MODE from environment_variables JSON"
          ],
          "fullName": "ValidationMode - Environment Variable Handling RSOLV_TESTING_MODE from environment_variables JSON should handle undefined environmentVariables",
          "status": "passed",
          "title": "should handle undefined environmentVariables",
          "duration": 0.12490200000002005,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ValidationMode - Environment Variable Handling",
            "RSOLV_TESTING_MODE from environment_variables JSON"
          ],
          "fullName": "ValidationMode - Environment Variable Handling RSOLV_TESTING_MODE from environment_variables JSON should override existing environment variables",
          "status": "passed",
          "title": "should override existing environment variables",
          "duration": 0.12383100000033664,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ValidationMode - Environment Variable Handling",
            "Testing mode behavior in validation"
          ],
          "fullName": "ValidationMode - Environment Variable Handling Testing mode behavior in validation should log testing mode message when enabled via environmentVariables",
          "status": "passed",
          "title": "should log testing mode message when enabled via environmentVariables",
          "duration": 0.13816099999985454,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803968769,
      "endTime": 1759803968770.1382,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/modes/validation-mode-env.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "PatternAPIClient",
            "constructor"
          ],
          "fullName": "PatternAPIClient constructor should use default API URL if not provided",
          "status": "passed",
          "title": "should use default API URL if not provided",
          "duration": 0.37133399999993344,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PatternAPIClient",
            "constructor"
          ],
          "fullName": "PatternAPIClient constructor should use provided API URL",
          "status": "passed",
          "title": "should use provided API URL",
          "duration": 0.19262700000001587,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PatternAPIClient",
            "constructor"
          ],
          "fullName": "PatternAPIClient constructor should use API key from config",
          "status": "passed",
          "title": "should use API key from config",
          "duration": 0.09746399999994537,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PatternAPIClient",
            "constructor"
          ],
          "fullName": "PatternAPIClient constructor should use API key from environment if not in config",
          "status": "passed",
          "title": "should use API key from environment if not in config",
          "duration": 0.06651399999998375,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PatternAPIClient",
            "fetchPatterns"
          ],
          "fullName": "PatternAPIClient fetchPatterns should fetch patterns for a language",
          "status": "passed",
          "title": "should fetch patterns for a language",
          "duration": 0.7143330000000105,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PatternAPIClient",
            "fetchPatterns"
          ],
          "fullName": "PatternAPIClient fetchPatterns should handle API errors gracefully",
          "status": "passed",
          "title": "should handle API errors gracefully",
          "duration": 2.5024810000001025,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PatternAPIClient",
            "fetchPatterns"
          ],
          "fullName": "PatternAPIClient fetchPatterns should use cached patterns within TTL",
          "status": "passed",
          "title": "should use cached patterns within TTL",
          "duration": 0.2847540000000208,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PatternAPIClient",
            "fetchPatterns"
          ],
          "fullName": "PatternAPIClient fetchPatterns should handle patterns without API key (public only)",
          "status": "passed",
          "title": "should handle patterns without API key (public only)",
          "duration": 0.3135220000000345,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PatternAPIClient",
            "PatternAPIClient enhanced patterns"
          ],
          "fullName": "PatternAPIClient PatternAPIClient enhanced patterns should handle enhanced patterns with AST rules",
          "status": "passed",
          "title": "should handle enhanced patterns with AST rules",
          "duration": 0.3411399999999958,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PatternAPIClient",
            "PatternAPIClient enhanced patterns"
          ],
          "fullName": "PatternAPIClient PatternAPIClient enhanced patterns should handle patterns without enhanced features",
          "status": "passed",
          "title": "should handle patterns without enhanced features",
          "duration": 0.2750070000000733,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803966363,
      "endTime": 1759803966368.341,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/security/pattern-api-client.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Validation Payload Format"
          ],
          "fullName": "Validation Payload Format should send correct batch payload format to validation API",
          "status": "passed",
          "title": "should send correct batch payload format to validation API",
          "duration": 3.316197000000102,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Validation Payload Format"
          ],
          "fullName": "Validation Payload Format should handle validation response correctly",
          "status": "passed",
          "title": "should handle validation response correctly",
          "duration": 0.7226159999999027,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803966400,
      "endTime": 1759803966403.7227,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/tests/regression/validation-payload-format.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Pull Request Fix Tracking"
          ],
          "fullName": "Pull Request Fix Tracking should verify RsolvApiClient is imported in pr.ts",
          "status": "passed",
          "title": "should verify RsolvApiClient is imported in pr.ts",
          "duration": 0.24772699999994074,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Pull Request Fix Tracking"
          ],
          "fullName": "Pull Request Fix Tracking should verify recordFixAttempt is called after PR creation",
          "status": "passed",
          "title": "should verify recordFixAttempt is called after PR creation",
          "duration": 0.15868200000022625,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803968884,
      "endTime": 1759803968885.1587,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/__tests__/integration/pr-tracking.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Three-Phase Workflow Integration"
          ],
          "fullName": "Three-Phase Workflow Integration should complete full workflow: validation branch → test persistence → mitigation checkout",
          "status": "passed",
          "title": "should complete full workflow: validation branch → test persistence → mitigation checkout",
          "duration": 72.69746800000007,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Three-Phase Workflow Integration"
          ],
          "fullName": "Three-Phase Workflow Integration should handle missing validation branch gracefully",
          "status": "passed",
          "title": "should handle missing validation branch gracefully",
          "duration": 14.468353999999977,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803966641,
      "endTime": 1759803966728.4683,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/__tests__/integration/three-phase-workflow.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "AdaptiveTestGenerator - Java Framework Support",
            "JUnit 5 Support"
          ],
          "fullName": "AdaptiveTestGenerator - Java Framework Support JUnit 5 Support should generate JUnit 5 tests for SQL injection vulnerability",
          "status": "passed",
          "title": "should generate JUnit 5 tests for SQL injection vulnerability",
          "duration": 0.6042549999999665,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AdaptiveTestGenerator - Java Framework Support",
            "JUnit 5 Support"
          ],
          "fullName": "AdaptiveTestGenerator - Java Framework Support JUnit 5 Support should generate JUnit 5 parameterized tests for multiple attack vectors",
          "status": "passed",
          "title": "should generate JUnit 5 parameterized tests for multiple attack vectors",
          "duration": 0.35191500000007636,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AdaptiveTestGenerator - Java Framework Support",
            "TestNG Support"
          ],
          "fullName": "AdaptiveTestGenerator - Java Framework Support TestNG Support should generate TestNG tests for XXE vulnerability",
          "status": "passed",
          "title": "should generate TestNG tests for XXE vulnerability",
          "duration": 0.48613799999998264,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AdaptiveTestGenerator - Java Framework Support",
            "TestNG Support"
          ],
          "fullName": "AdaptiveTestGenerator - Java Framework Support TestNG Support should generate TestNG data provider tests",
          "status": "passed",
          "title": "should generate TestNG data provider tests",
          "duration": 0.3247689999999466,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AdaptiveTestGenerator - Java Framework Support",
            "Spring Boot Integration"
          ],
          "fullName": "AdaptiveTestGenerator - Java Framework Support Spring Boot Integration should generate Spring Boot test annotations for JUnit 5",
          "status": "passed",
          "title": "should generate Spring Boot test annotations for JUnit 5",
          "duration": 0.3287510000000111,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803966377,
      "endTime": 1759803966379.3289,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/adaptive-test-generator-java.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Git Status - .rsolv Directory Handling"
          ],
          "fullName": "Git Status - .rsolv Directory Handling should ignore .rsolv/ directory in git status check",
          "status": "passed",
          "title": "should ignore .rsolv/ directory in git status check",
          "duration": 1.964202000000114,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Git Status - .rsolv Directory Handling"
          ],
          "fullName": "Git Status - .rsolv Directory Handling should still detect real uncommitted changes",
          "status": "failed",
          "title": "should still detect real uncommitted changes",
          "duration": 0.8822139999997489,
          "failureMessages": [
            "AssertionError: expected 'Repository has uncommitted changes th…' to be 'Repository has uncommitted changes' // Object.is equality\n    at /home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/git-status-rsolv-ignore.test.ts:98:28\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"
          ],
          "meta": {}
        }
      ],
      "startTime": 1759803968864,
      "endTime": 1759803968866.8823,
      "status": "failed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/git-status-rsolv-ignore.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Phase 6E: Integration Tests for Java/PHP Fix Validation",
            "Simulated Fix Iteration Scenarios"
          ],
          "fullName": "Phase 6E: Integration Tests for Java/PHP Fix Validation Simulated Fix Iteration Scenarios should handle Java SQL injection with multiple fix attempts",
          "status": "passed",
          "title": "should handle Java SQL injection with multiple fix attempts",
          "duration": 2.08328199999994,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase 6E: Integration Tests for Java/PHP Fix Validation",
            "Simulated Fix Iteration Scenarios"
          ],
          "fullName": "Phase 6E: Integration Tests for Java/PHP Fix Validation Simulated Fix Iteration Scenarios should handle PHP SQL injection with PDO migration",
          "status": "passed",
          "title": "should handle PHP SQL injection with PDO migration",
          "duration": 1.9594690000000128,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase 6E: Integration Tests for Java/PHP Fix Validation",
            "Simulated Fix Iteration Scenarios"
          ],
          "fullName": "Phase 6E: Integration Tests for Java/PHP Fix Validation Simulated Fix Iteration Scenarios should respect max iteration limits for complex vulnerabilities",
          "status": "passed",
          "title": "should respect max iteration limits for complex vulnerabilities",
          "duration": 0.1844660000000431,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase 6E: Integration Tests for Java/PHP Fix Validation",
            "Test Context Generation"
          ],
          "fullName": "Phase 6E: Integration Tests for Java/PHP Fix Validation Test Context Generation should generate proper Java test context for Claude Code",
          "status": "passed",
          "title": "should generate proper Java test context for Claude Code",
          "duration": 0.15489000000002306,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase 6E: Integration Tests for Java/PHP Fix Validation",
            "Test Context Generation"
          ],
          "fullName": "Phase 6E: Integration Tests for Java/PHP Fix Validation Test Context Generation should generate proper PHP test context for Claude Code",
          "status": "passed",
          "title": "should generate proper PHP test context for Claude Code",
          "duration": 0.17697499999997035,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase 6E: Integration Tests for Java/PHP Fix Validation",
            "Language-Specific Fix Validation"
          ],
          "fullName": "Phase 6E: Integration Tests for Java/PHP Fix Validation Language-Specific Fix Validation should validate Java fixes use approved patterns",
          "status": "passed",
          "title": "should validate Java fixes use approved patterns",
          "duration": 0.18742900000006557,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase 6E: Integration Tests for Java/PHP Fix Validation",
            "Language-Specific Fix Validation"
          ],
          "fullName": "Phase 6E: Integration Tests for Java/PHP Fix Validation Language-Specific Fix Validation should validate PHP fixes use approved patterns",
          "status": "passed",
          "title": "should validate PHP fixes use approved patterns",
          "duration": 0.1174670000000333,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803966259,
      "endTime": 1759803966264.1875,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/phase-6e-integration.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Token Utils - TDD Tests",
            "RED - resolveMaxTokens priority order"
          ],
          "fullName": "Token Utils - TDD Tests RED - resolveMaxTokens priority order should prioritize options.maxTokens over config and defaults",
          "status": "passed",
          "title": "should prioritize options.maxTokens over config and defaults",
          "duration": 0.15909199999987322,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Token Utils - TDD Tests",
            "RED - resolveMaxTokens priority order"
          ],
          "fullName": "Token Utils - TDD Tests RED - resolveMaxTokens priority order should use config.maxTokens when options.maxTokens is undefined",
          "status": "passed",
          "title": "should use config.maxTokens when options.maxTokens is undefined",
          "duration": 0.06473900000037247,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Token Utils - TDD Tests",
            "RED - resolveMaxTokens priority order"
          ],
          "fullName": "Token Utils - TDD Tests RED - resolveMaxTokens priority order should use use case default when both options and config are undefined",
          "status": "passed",
          "title": "should use use case default when both options and config are undefined",
          "duration": 0.05134600000019418,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Token Utils - TDD Tests",
            "RED - resolveMaxTokens priority order"
          ],
          "fullName": "Token Utils - TDD Tests RED - resolveMaxTokens priority order should fallback to STANDARD default for unknown use case",
          "status": "failed",
          "title": "should fallback to STANDARD default for unknown use case",
          "duration": 1.627060000000256,
          "failureMessages": [
            "AssertionError: expected undefined to be 4000 // Object.is equality\n    at /home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/token-utils.test.ts:46:22\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n    at runSuite (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Token Utils - TDD Tests",
            "GREEN - validateTokenLimit edge cases"
          ],
          "fullName": "Token Utils - TDD Tests GREEN - validateTokenLimit edge cases should accept valid token limits",
          "status": "passed",
          "title": "should accept valid token limits",
          "duration": 0.2486300000000483,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Token Utils - TDD Tests",
            "GREEN - validateTokenLimit edge cases"
          ],
          "fullName": "Token Utils - TDD Tests GREEN - validateTokenLimit edge cases should reject zero or negative token limits",
          "status": "passed",
          "title": "should reject zero or negative token limits",
          "duration": 0.13789700000006633,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Token Utils - TDD Tests",
            "GREEN - validateTokenLimit edge cases"
          ],
          "fullName": "Token Utils - TDD Tests GREEN - validateTokenLimit edge cases should reject excessively high token limits",
          "status": "passed",
          "title": "should reject excessively high token limits",
          "duration": 0.12036899999975503,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Token Utils - TDD Tests",
            "REFACTOR - getTestGenerationTokenLimit (our bug fix)"
          ],
          "fullName": "Token Utils - TDD Tests REFACTOR - getTestGenerationTokenLimit (our bug fix) should use TEST_GENERATION default (10000) when no config provided",
          "status": "passed",
          "title": "should use TEST_GENERATION default (10000) when no config provided",
          "duration": 0.08957199999986187,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Token Utils - TDD Tests",
            "REFACTOR - getTestGenerationTokenLimit (our bug fix)"
          ],
          "fullName": "Token Utils - TDD Tests REFACTOR - getTestGenerationTokenLimit (our bug fix) should respect explicit options.maxTokens for test generation",
          "status": "failed",
          "title": "should respect explicit options.maxTokens for test generation",
          "duration": 1.1095690000001923,
          "failureMessages": [
            "AssertionError: expected 8000 to be 15000 // Object.is equality\n    at /home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/token-utils.test.ts:78:22\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n    at runSuite (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Token Utils - TDD Tests",
            "REFACTOR - getTestGenerationTokenLimit (our bug fix)"
          ],
          "fullName": "Token Utils - TDD Tests REFACTOR - getTestGenerationTokenLimit (our bug fix) should validate the resolved token limit",
          "status": "failed",
          "title": "should validate the resolved token limit",
          "duration": 1.0878590000002077,
          "failureMessages": [
            "AssertionError: expected [Function] to throw an error\n    at Proxy.<anonymous> (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/expect/dist/index.js:1420:16)\n    at Proxy.<anonymous> (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/expect/dist/index.js:1029:14)\n    at Proxy.methodWrapper (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/chai/index.js:1686:25)\n    at /home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/token-utils.test.ts:83:70\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Token Utils - TDD Tests",
            "REFACTOR - getTestGenerationTokenLimit (our bug fix)"
          ],
          "fullName": "Token Utils - TDD Tests REFACTOR - getTestGenerationTokenLimit (our bug fix) should prevent the original 2000 token bug from recurring",
          "status": "passed",
          "title": "should prevent the original 2000 token bug from recurring",
          "duration": 0.11945400000013251,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Token Utils - TDD Tests",
            "Use case specific defaults"
          ],
          "fullName": "Token Utils - TDD Tests Use case specific defaults should have appropriate defaults for each use case",
          "status": "passed",
          "title": "should have appropriate defaults for each use case",
          "duration": 0.08496300000024348,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Token Utils - TDD Tests",
            "Use case specific defaults"
          ],
          "fullName": "Token Utils - TDD Tests Use case specific defaults should never default to the problematic 2000 token limit",
          "status": "passed",
          "title": "should never default to the problematic 2000 token limit",
          "duration": 0.08618399999977555,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803968740,
      "endTime": 1759803968745.1194,
      "status": "failed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/token-utils.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "RFC-046: Multi-file Vulnerability Chunking",
            "Basic Chunking"
          ],
          "fullName": "RFC-046: Multi-file Vulnerability Chunking Basic Chunking should split 14-file vulnerability into chunks of 3",
          "status": "passed",
          "title": "should split 14-file vulnerability into chunks of 3",
          "duration": 0.2774259999999913,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-046: Multi-file Vulnerability Chunking",
            "Basic Chunking"
          ],
          "fullName": "RFC-046: Multi-file Vulnerability Chunking Basic Chunking should respect token limits per chunk",
          "status": "passed",
          "title": "should respect token limits per chunk",
          "duration": 0.13667400000008456,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-046: Multi-file Vulnerability Chunking",
            "Basic Chunking"
          ],
          "fullName": "RFC-046: Multi-file Vulnerability Chunking Basic Chunking should keep related files together when possible",
          "status": "passed",
          "title": "should keep related files together when possible",
          "duration": 0.09326399999997648,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-046: Multi-file Vulnerability Chunking",
            "Chunking Strategies"
          ],
          "fullName": "RFC-046: Multi-file Vulnerability Chunking Chunking Strategies should group files by module",
          "status": "passed",
          "title": "should group files by module",
          "duration": 0.10316599999998743,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-046: Multi-file Vulnerability Chunking",
            "Chunking Strategies"
          ],
          "fullName": "RFC-046: Multi-file Vulnerability Chunking Chunking Strategies should group files by severity",
          "status": "passed",
          "title": "should group files by severity",
          "duration": 0.08554000000003725,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-046: Multi-file Vulnerability Chunking",
            "Chunking Strategies"
          ],
          "fullName": "RFC-046: Multi-file Vulnerability Chunking Chunking Strategies should analyze file dependencies",
          "status": "passed",
          "title": "should analyze file dependencies",
          "duration": 0.13553600000000188,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-046: Multi-file Vulnerability Chunking",
            "Multi-PR Generation"
          ],
          "fullName": "RFC-046: Multi-file Vulnerability Chunking Multi-PR Generation should generate multiple PRs for chunked vulnerability",
          "status": "passed",
          "title": "should generate multiple PRs for chunked vulnerability",
          "duration": 2.954682999999932,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-046: Multi-file Vulnerability Chunking",
            "Multi-PR Generation"
          ],
          "fullName": "RFC-046: Multi-file Vulnerability Chunking Multi-PR Generation should link PRs in series with dependencies",
          "status": "passed",
          "title": "should link PRs in series with dependencies",
          "duration": 0.3606679999999187,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-046: Multi-file Vulnerability Chunking",
            "Complexity Analysis"
          ],
          "fullName": "RFC-046: Multi-file Vulnerability Chunking Complexity Analysis should calculate complexity based on file count",
          "status": "passed",
          "title": "should calculate complexity based on file count",
          "duration": 3.176917000000003,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-046: Multi-file Vulnerability Chunking",
            "Complexity Analysis"
          ],
          "fullName": "RFC-046: Multi-file Vulnerability Chunking Complexity Analysis should route complex vulnerabilities to manual guide",
          "status": "passed",
          "title": "should route complex vulnerabilities to manual guide",
          "duration": 0.1847139999999854,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-046: Multi-file Vulnerability Chunking",
            "Special Handlers"
          ],
          "fullName": "RFC-046: Multi-file Vulnerability Chunking Special Handlers should handle hardcoded secrets with environment variables",
          "status": "passed",
          "title": "should handle hardcoded secrets with environment variables",
          "duration": 2.7859320000000025,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-046: Multi-file Vulnerability Chunking",
            "Special Handlers"
          ],
          "fullName": "RFC-046: Multi-file Vulnerability Chunking Special Handlers should not break functionality when removing secrets",
          "status": "passed",
          "title": "should not break functionality when removing secrets",
          "duration": 0.18035599999996066,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803966333,
      "endTime": 1759803966344.1804,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/chunking/__tests__/vulnerability-chunker.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Container Run"
          ],
          "fullName": "Container Run should run command successfully",
          "status": "passed",
          "title": "should run command successfully",
          "duration": 0.7822210000000496,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Container Run"
          ],
          "fullName": "Container Run should fail when containers are disabled",
          "status": "passed",
          "title": "should fail when containers are disabled",
          "duration": 1.5652330000000347,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Container Run"
          ],
          "fullName": "Container Run should create and clean up temporary directory",
          "status": "passed",
          "title": "should create and clean up temporary directory",
          "duration": 0.24867399999993722,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Container Run"
          ],
          "fullName": "Container Run should use provided working directory",
          "status": "passed",
          "title": "should use provided working directory",
          "duration": 0.25513899999998557,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Container Run"
          ],
          "fullName": "Container Run should handle command execution failure",
          "status": "passed",
          "title": "should handle command execution failure",
          "duration": 0.2838759999999638,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Container Run"
          ],
          "fullName": "Container Run should include environment variables in Docker command",
          "status": "passed",
          "title": "should include environment variables in Docker command",
          "duration": 0.2727110000000721,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Container Run"
          ],
          "fullName": "Container Run should apply resource limits",
          "status": "passed",
          "title": "should apply resource limits",
          "duration": 0.2624560000000429,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Container Run"
          ],
          "fullName": "Container Run should add security options",
          "status": "passed",
          "title": "should add security options",
          "duration": 0.24611099999992803,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Container Run"
          ],
          "fullName": "Container Run should handle volume mounts",
          "status": "passed",
          "title": "should handle volume mounts",
          "duration": 0.2630139999999983,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Container Run"
          ],
          "fullName": "Container Run should escape shell arguments properly",
          "status": "passed",
          "title": "should escape shell arguments properly",
          "duration": 0.31561199999998735,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Container Run"
          ],
          "fullName": "Container Run should use custom timeout",
          "status": "passed",
          "title": "should use custom timeout",
          "duration": 0.26292100000000573,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Container Run"
          ],
          "fullName": "Container Run should handle timeout errors",
          "status": "passed",
          "title": "should handle timeout errors",
          "duration": 0.38407600000005004,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803966419,
      "endTime": 1759803966424.384,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/containers/__tests__/run.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Error Sanitizer",
            "sanitizeErrorMessage"
          ],
          "fullName": "Error Sanitizer sanitizeErrorMessage should remove Anthropic references",
          "status": "passed",
          "title": "should remove Anthropic references",
          "duration": 0.5298630000000912,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Error Sanitizer",
            "sanitizeErrorMessage"
          ],
          "fullName": "Error Sanitizer sanitizeErrorMessage should remove OpenAI references",
          "status": "passed",
          "title": "should remove OpenAI references",
          "duration": 0.17797300000006544,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Error Sanitizer",
            "sanitizeErrorMessage"
          ],
          "fullName": "Error Sanitizer sanitizeErrorMessage should sanitize API URLs",
          "status": "passed",
          "title": "should sanitize API URLs",
          "duration": 0.12743400000010752,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Error Sanitizer",
            "sanitizeErrorMessage"
          ],
          "fullName": "Error Sanitizer sanitizeErrorMessage should sanitize API keys and credentials",
          "status": "passed",
          "title": "should sanitize API keys and credentials",
          "duration": 0.1794479999999794,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Error Sanitizer",
            "sanitizeErrorMessage"
          ],
          "fullName": "Error Sanitizer sanitizeErrorMessage should sanitize model names",
          "status": "passed",
          "title": "should sanitize model names",
          "duration": 0.20606999999995423,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Error Sanitizer",
            "sanitizeErrorMessage"
          ],
          "fullName": "Error Sanitizer sanitizeErrorMessage should handle complex error messages",
          "status": "passed",
          "title": "should handle complex error messages",
          "duration": 0.04761499999995067,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Error Sanitizer",
            "sanitizeErrorMessage"
          ],
          "fullName": "Error Sanitizer sanitizeErrorMessage should preserve helpful error context",
          "status": "passed",
          "title": "should preserve helpful error context",
          "duration": 0.06271500000002561,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Error Sanitizer",
            "sanitizeErrorMessage"
          ],
          "fullName": "Error Sanitizer sanitizeErrorMessage should handle edge cases",
          "status": "passed",
          "title": "should handle edge cases",
          "duration": 0.044964000000049964,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Error Sanitizer",
            "sanitizeError"
          ],
          "fullName": "Error Sanitizer sanitizeError should sanitize Error objects",
          "status": "passed",
          "title": "should sanitize Error objects",
          "duration": 0.09147200000006706,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Error Sanitizer",
            "sanitizeError"
          ],
          "fullName": "Error Sanitizer sanitizeError should handle non-Error objects",
          "status": "passed",
          "title": "should handle non-Error objects",
          "duration": 0.04455600000005688,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Error Sanitizer",
            "sanitizeError"
          ],
          "fullName": "Error Sanitizer sanitizeError should handle complex objects",
          "status": "passed",
          "title": "should handle complex objects",
          "duration": 0.05299200000001747,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803966590,
      "endTime": 1759803966591.206,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/utils/__tests__/error-sanitizer.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "JiraAdapter Integration Tests"
          ],
          "fullName": "JiraAdapter Integration Tests should authenticate successfully",
          "status": "skipped",
          "title": "should authenticate successfully",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "JiraAdapter Integration Tests"
          ],
          "fullName": "JiraAdapter Integration Tests should create and search for test issue",
          "status": "skipped",
          "title": "should create and search for test issue",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "JiraAdapter Integration Tests"
          ],
          "fullName": "JiraAdapter Integration Tests should add comment to issue",
          "status": "skipped",
          "title": "should add comment to issue",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "JiraAdapter Integration Tests"
          ],
          "fullName": "JiraAdapter Integration Tests should link external resource",
          "status": "skipped",
          "title": "should link external resource",
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803965731,
      "endTime": 1759803965731,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/tests/platforms/jira/jira-integration.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "EnhancedClaudeCodeAdapter",
            "gatherDeepContext"
          ],
          "fullName": "EnhancedClaudeCodeAdapter gatherDeepContext should gather context successfully",
          "status": "passed",
          "title": "should gather context successfully",
          "duration": 0.623689000000013,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "EnhancedClaudeCodeAdapter",
            "gatherDeepContext"
          ],
          "fullName": "EnhancedClaudeCodeAdapter gatherDeepContext should use cached context on second call",
          "status": "passed",
          "title": "should use cached context on second call",
          "duration": 0.1548090000000002,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "EnhancedClaudeCodeAdapter",
            "gatherDeepContext"
          ],
          "fullName": "EnhancedClaudeCodeAdapter gatherDeepContext should handle errors gracefully",
          "status": "passed",
          "title": "should handle errors gracefully",
          "duration": 0.2184100000000626,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "EnhancedClaudeCodeAdapter",
            "generateEnhancedSolution"
          ],
          "fullName": "EnhancedClaudeCodeAdapter generateEnhancedSolution should generate enhanced solution with deep context",
          "status": "passed",
          "title": "should generate enhanced solution with deep context",
          "duration": 0.36120900000003076,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "EnhancedClaudeCodeAdapter",
            "generateEnhancedSolution"
          ],
          "fullName": "EnhancedClaudeCodeAdapter generateEnhancedSolution should use enhanced prompt when provided",
          "status": "passed",
          "title": "should use enhanced prompt when provided",
          "duration": 0.21568100000001778,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "EnhancedClaudeCodeAdapter",
            "integration with context caching"
          ],
          "fullName": "EnhancedClaudeCodeAdapter integration with context caching should build proper context gathering prompt",
          "status": "passed",
          "title": "should build proper context gathering prompt",
          "duration": 0.1366249999999809,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "EnhancedClaudeCodeAdapter",
            "integration with context caching"
          ],
          "fullName": "EnhancedClaudeCodeAdapter integration with context caching should create minimal context correctly",
          "status": "passed",
          "title": "should create minimal context correctly",
          "duration": 0.17638299999998708,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803966574,
      "endTime": 1759803966576.3613,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/adapters/__tests__/claude-code-enhanced.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Claude Code CLI Integration"
          ],
          "fullName": "Claude Code CLI Integration should check if Claude CLI is available",
          "status": "passed",
          "title": "should check if Claude CLI is available",
          "duration": 0.41320600000017293,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code CLI Integration"
          ],
          "fullName": "Claude Code CLI Integration should construct a proper prompt",
          "status": "passed",
          "title": "should construct a proper prompt",
          "duration": 0.16377700000020923,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code CLI Integration"
          ],
          "fullName": "Claude Code CLI Integration should generate a real solution using Claude CLI",
          "status": "skipped",
          "title": "should generate a real solution using Claude CLI",
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803968733,
      "endTime": 1759803968734.1638,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/adapters/__tests__/claude-code-integration.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Claude Code SDK Adapter",
            "Basic Operations"
          ],
          "fullName": "Claude Code SDK Adapter Basic Operations should initialize with correct configuration",
          "status": "passed",
          "title": "should initialize with correct configuration",
          "duration": 2.5982349999999883,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code SDK Adapter",
            "Basic Operations"
          ],
          "fullName": "Claude Code SDK Adapter Basic Operations should handle generateSolution request correctly",
          "status": "passed",
          "title": "should handle generateSolution request correctly",
          "duration": 3.908997999999997,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code SDK Adapter",
            "Basic Operations"
          ],
          "fullName": "Claude Code SDK Adapter Basic Operations should handle empty response gracefully",
          "status": "passed",
          "title": "should handle empty response gracefully",
          "duration": 1.0859120000000075,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code SDK Adapter",
            "Error Handling"
          ],
          "fullName": "Claude Code SDK Adapter Error Handling should handle query errors gracefully",
          "status": "passed",
          "title": "should handle query errors gracefully",
          "duration": 0.9880449999999996,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code SDK Adapter",
            "Error Handling"
          ],
          "fullName": "Claude Code SDK Adapter Error Handling should handle invalid JSON response",
          "status": "passed",
          "title": "should handle invalid JSON response",
          "duration": 0.8081020000000194,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code SDK Adapter",
            "Configuration Options"
          ],
          "fullName": "Claude Code SDK Adapter Configuration Options should handle missing API key",
          "status": "passed",
          "title": "should handle missing API key",
          "duration": 0.7108680000000049,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code SDK Adapter",
            "Configuration Options"
          ],
          "fullName": "Claude Code SDK Adapter Configuration Options should respect timeout configuration",
          "status": "passed",
          "title": "should respect timeout configuration",
          "duration": 201.259575,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code SDK Adapter",
            "Complex Scenarios"
          ],
          "fullName": "Claude Code SDK Adapter Complex Scenarios should handle multiple file changes",
          "status": "passed",
          "title": "should handle multiple file changes",
          "duration": 3.0072139999999763,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code SDK Adapter",
            "Complex Scenarios"
          ],
          "fullName": "Claude Code SDK Adapter Complex Scenarios should handle security vulnerabilities in input",
          "status": "passed",
          "title": "should handle security vulnerabilities in input",
          "duration": 2.14840700000002,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code SDK Adapter",
            "Complex Scenarios"
          ],
          "fullName": "Claude Code SDK Adapter Complex Scenarios should handle retry logic",
          "status": "passed",
          "title": "should handle retry logic",
          "duration": 1.4025320000000079,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code SDK Adapter",
            "Message Formatting"
          ],
          "fullName": "Claude Code SDK Adapter Message Formatting should format system message correctly",
          "status": "passed",
          "title": "should format system message correctly",
          "duration": 0.43012300000003734,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code SDK Adapter",
            "Message Formatting"
          ],
          "fullName": "Claude Code SDK Adapter Message Formatting should include file contents in message",
          "status": "passed",
          "title": "should include file contents in message",
          "duration": 0.3968889999999874,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code SDK Adapter",
            "Edge Cases"
          ],
          "fullName": "Claude Code SDK Adapter Edge Cases should handle very large responses",
          "status": "passed",
          "title": "should handle very large responses",
          "duration": 2.0633940000000166,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code SDK Adapter",
            "Edge Cases"
          ],
          "fullName": "Claude Code SDK Adapter Edge Cases should handle special characters in paths",
          "status": "passed",
          "title": "should handle special characters in paths",
          "duration": 0.6816579999999703,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803965916,
      "endTime": 1759803966138.6816,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/adapters/__tests__/claude-code.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Two-Phase Claude Code Conversation",
            "RED Phase - Current Single-Phase Failures"
          ],
          "fullName": "Two-Phase Claude Code Conversation RED Phase - Current Single-Phase Failures should fail with single-phase approach (files not edited)",
          "status": "passed",
          "title": "should fail with single-phase approach (files not edited)",
          "duration": 1.0797469999999976,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Two-Phase Claude Code Conversation",
            "GREEN Phase - Two-Phase Solution"
          ],
          "fullName": "Two-Phase Claude Code Conversation GREEN Phase - Two-Phase Solution should successfully edit files then provide JSON with two-phase approach",
          "status": "passed",
          "title": "should successfully edit files then provide JSON with two-phase approach",
          "duration": 1.1120919999999614,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Two-Phase Claude Code Conversation",
            "GREEN Phase - Two-Phase Solution"
          ],
          "fullName": "Two-Phase Claude Code Conversation GREEN Phase - Two-Phase Solution should handle conversation flow correctly",
          "status": "passed",
          "title": "should handle conversation flow correctly",
          "duration": 0.8110499999999092,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Two-Phase Claude Code Conversation",
            "REFACTOR Phase - Optimized Implementation"
          ],
          "fullName": "Two-Phase Claude Code Conversation REFACTOR Phase - Optimized Implementation should use clean separation of concerns",
          "status": "passed",
          "title": "should use clean separation of concerns",
          "duration": 0.42908999999997377,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Two-Phase Claude Code Conversation",
            "REFACTOR Phase - Optimized Implementation"
          ],
          "fullName": "Two-Phase Claude Code Conversation REFACTOR Phase - Optimized Implementation should handle phase failures gracefully",
          "status": "passed",
          "title": "should handle phase failures gracefully",
          "duration": 0.38885400000003756,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Two-Phase Claude Code Conversation",
            "REFACTOR Phase - Optimized Implementation"
          ],
          "fullName": "Two-Phase Claude Code Conversation REFACTOR Phase - Optimized Implementation should maintain conversation context between phases",
          "status": "passed",
          "title": "should maintain conversation context between phases",
          "duration": 0.644574999999918,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Two-Phase Claude Code Conversation",
            "REFACTOR Phase - Optimized Implementation"
          ],
          "fullName": "Two-Phase Claude Code Conversation REFACTOR Phase - Optimized Implementation should complete within reasonable time",
          "status": "passed",
          "title": "should complete within reasonable time",
          "duration": 0.5295699999999215,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Two-Phase Claude Code Conversation",
            "Integration Tests"
          ],
          "fullName": "Two-Phase Claude Code Conversation Integration Tests should work with real Claude Code SDK",
          "status": "passed",
          "title": "should work with real Claude Code SDK",
          "duration": 0.6317080000000033,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803966313,
      "endTime": 1759803966318.6316,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/adapters/__tests__/two-phase-conversation.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Vendor Detection TDD - File Extraction from Validation Data",
            "Current Bug: Empty validation vulnerabilities array"
          ],
          "fullName": "Vendor Detection TDD - File Extraction from Validation Data Current Bug: Empty validation vulnerabilities array should extract files when validation data has empty vulnerabilities array",
          "status": "passed",
          "title": "should extract files when validation data has empty vulnerabilities array",
          "duration": 0.43759399999999005,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Vendor Detection TDD - File Extraction from Validation Data",
            "Possible Structure 1: Vulnerabilities directly in validation data"
          ],
          "fullName": "Vendor Detection TDD - File Extraction from Validation Data Possible Structure 1: Vulnerabilities directly in validation data should extract file from vulnerability with \"file\" property",
          "status": "passed",
          "title": "should extract file from vulnerability with \"file\" property",
          "duration": 0.12594300000000658,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Vendor Detection TDD - File Extraction from Validation Data",
            "Possible Structure 2: Vulnerabilities with different property names"
          ],
          "fullName": "Vendor Detection TDD - File Extraction from Validation Data Possible Structure 2: Vulnerabilities with different property names should handle vulnerability with \"path\" instead of \"file\"",
          "status": "passed",
          "title": "should handle vulnerability with \"path\" instead of \"file\"",
          "duration": 0.06417700000008608,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Vendor Detection TDD - File Extraction from Validation Data",
            "Possible Structure 2: Vulnerabilities with different property names"
          ],
          "fullName": "Vendor Detection TDD - File Extraction from Validation Data Possible Structure 2: Vulnerabilities with different property names should handle vulnerability with \"location\" property",
          "status": "passed",
          "title": "should handle vulnerability with \"location\" property",
          "duration": 0.05348000000003594,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Vendor Detection TDD - File Extraction from Validation Data",
            "Robust file extraction function"
          ],
          "fullName": "Vendor Detection TDD - File Extraction from Validation Data Robust file extraction function should handle all possible vulnerability structures",
          "status": "passed",
          "title": "should handle all possible vulnerability structures",
          "duration": 0.1566250000000764,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Vendor Detection TDD - File Extraction from Validation Data",
            "Vendor detection with proper types"
          ],
          "fullName": "Vendor Detection TDD - File Extraction from Validation Data Vendor detection with proper types should detect vendor files correctly",
          "status": "passed",
          "title": "should detect vendor files correctly",
          "duration": 0.06663600000001679,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803966584,
      "endTime": 1759803966585.1567,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/modes/phase-executor/__tests__/vendor-detection-tdd.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "IssueBodyParser",
            "parseIssueBody"
          ],
          "fullName": "IssueBodyParser parseIssueBody should parse single file with single vulnerability",
          "status": "passed",
          "title": "should parse single file with single vulnerability",
          "duration": 0.6837100000000191,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueBodyParser",
            "parseIssueBody"
          ],
          "fullName": "IssueBodyParser parseIssueBody should parse multiple files with multiple vulnerabilities",
          "status": "passed",
          "title": "should parse multiple files with multiple vulnerabilities",
          "duration": 0.449188999999933,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueBodyParser",
            "parseIssueBody"
          ],
          "fullName": "IssueBodyParser parseIssueBody should handle files with no vulnerabilities gracefully",
          "status": "passed",
          "title": "should handle files with no vulnerabilities gracefully",
          "duration": 0.1998869999999897,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueBodyParser",
            "parseIssueBody"
          ],
          "fullName": "IssueBodyParser parseIssueBody should handle malformed issue body without crashing",
          "status": "passed",
          "title": "should handle malformed issue body without crashing",
          "duration": 0.09788100000002942,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueBodyParser",
            "parseIssueBody"
          ],
          "fullName": "IssueBodyParser parseIssueBody should extract vulnerability type correctly",
          "status": "passed",
          "title": "should extract vulnerability type correctly",
          "duration": 0.09104400000001078,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueBodyParser",
            "parseIssueBody"
          ],
          "fullName": "IssueBodyParser parseIssueBody should handle special characters in file paths",
          "status": "passed",
          "title": "should handle special characters in file paths",
          "duration": 0.045659999999998035,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueBodyParser",
            "enhanceValidationData"
          ],
          "fullName": "IssueBodyParser enhanceValidationData should replace unknown.js with actual filenames",
          "status": "passed",
          "title": "should replace unknown.js with actual filenames",
          "duration": 0.22817000000009102,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueBodyParser",
            "enhanceValidationData"
          ],
          "fullName": "IssueBodyParser enhanceValidationData should handle multiple vulnerabilities and match by line number",
          "status": "passed",
          "title": "should handle multiple vulnerabilities and match by line number",
          "duration": 0.13891699999999219,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueBodyParser",
            "enhanceValidationData"
          ],
          "fullName": "IssueBodyParser enhanceValidationData should preserve validation data that cannot be matched",
          "status": "passed",
          "title": "should preserve validation data that cannot be matched",
          "duration": 0.10118999999997413,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803966436,
      "endTime": 1759803966439.101,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/modes/phase-executor/utils/__tests__/issue-body-parser.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Babel Parser Language Support"
          ],
          "fullName": "Babel Parser Language Support should parse JavaScript code successfully",
          "status": "passed",
          "title": "should parse JavaScript code successfully",
          "duration": 3.691477000000077,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Babel Parser Language Support"
          ],
          "fullName": "Babel Parser Language Support should fail to parse Python code",
          "status": "passed",
          "title": "should fail to parse Python code",
          "duration": 0.5377280000000155,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Babel Parser Language Support"
          ],
          "fullName": "Babel Parser Language Support should fail to parse Ruby code",
          "status": "passed",
          "title": "should fail to parse Ruby code",
          "duration": 0.31976400000007743,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Babel Parser Language Support"
          ],
          "fullName": "Babel Parser Language Support should fail to parse PHP code",
          "status": "passed",
          "title": "should fail to parse PHP code",
          "duration": 0.5013880000001336,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803970770,
      "endTime": 1759803970774.5015,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/test/babel-parser-issue.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Pattern API Regex Reconstruction",
            "Phase 2.1: Failing tests for regex reconstruction"
          ],
          "fullName": "Pattern API Regex Reconstruction Phase 2.1: Failing tests for regex reconstruction should fail to reconstruct regex from serialized format",
          "status": "passed",
          "title": "should fail to reconstruct regex from serialized format",
          "duration": 0.17052300000000287,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Pattern API Regex Reconstruction",
            "Phase 2.1: Failing tests for regex reconstruction"
          ],
          "fullName": "Pattern API Regex Reconstruction Phase 2.1: Failing tests for regex reconstruction should fail to handle enhanced pattern response with serialized regex",
          "status": "passed",
          "title": "should fail to handle enhanced pattern response with serialized regex",
          "duration": 0.12348300000007839,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Pattern API Regex Reconstruction",
            "Phase 2.1: Failing tests for regex reconstruction"
          ],
          "fullName": "Pattern API Regex Reconstruction Phase 2.1: Failing tests for regex reconstruction should demonstrate the need for regex flag mapping",
          "status": "passed",
          "title": "should demonstrate the need for regex flag mapping",
          "duration": 0.3988809999998466,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Pattern API Regex Reconstruction",
            "Phase 2.1: Failing tests for regex reconstruction"
          ],
          "fullName": "Pattern API Regex Reconstruction Phase 2.1: Failing tests for regex reconstruction should fail to handle nested regex in AST rules",
          "status": "passed",
          "title": "should fail to handle nested regex in AST rules",
          "duration": 0.13003499999990709,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Pattern API Regex Reconstruction",
            "Phase 2.1: Failing tests for regex reconstruction"
          ],
          "fullName": "Pattern API Regex Reconstruction Phase 2.1: Failing tests for regex reconstruction should fail to handle regex in context rules",
          "status": "passed",
          "title": "should fail to handle regex in context rules",
          "duration": 0.09139699999991535,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Pattern API Regex Reconstruction",
            "Expected behavior after implementation"
          ],
          "fullName": "Pattern API Regex Reconstruction Expected behavior after implementation should correctly reconstruct regex from serialized format",
          "status": "passed",
          "title": "should correctly reconstruct regex from serialized format",
          "duration": 0.03810399999997571,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Pattern API Regex Reconstruction",
            "Expected behavior after implementation"
          ],
          "fullName": "Pattern API Regex Reconstruction Expected behavior after implementation should handle complex patterns with multiple regex objects",
          "status": "passed",
          "title": "should handle complex patterns with multiple regex objects",
          "duration": 0.040751000000000204,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803970697,
      "endTime": 1759803970698.1301,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/security/pattern-regex-reconstruction.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "IssueEnricher - Validation Endpoint Regression",
            "AST validation endpoint"
          ],
          "fullName": "IssueEnricher - Validation Endpoint Regression AST validation endpoint should call /api/v1/ast/validate NOT /ast/validate",
          "status": "passed",
          "title": "should call /api/v1/ast/validate NOT /ast/validate",
          "duration": 0.8415119999999661,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueEnricher - Validation Endpoint Regression",
            "AST validation endpoint"
          ],
          "fullName": "IssueEnricher - Validation Endpoint Regression AST validation endpoint fixed implementation correctly calls /api/v1/ast/validate",
          "status": "passed",
          "title": "fixed implementation correctly calls /api/v1/ast/validate",
          "duration": 0.31293299999992996,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueEnricher - Validation Endpoint Regression",
            "API request format"
          ],
          "fullName": "IssueEnricher - Validation Endpoint Regression API request format should send correct payload format for validation",
          "status": "passed",
          "title": "should send correct payload format for validation",
          "duration": 0.46297900000013215,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueEnricher - Validation Endpoint Regression",
            "Error handling"
          ],
          "fullName": "IssueEnricher - Validation Endpoint Regression Error handling should handle 404 gracefully and return null",
          "status": "passed",
          "title": "should handle 404 gracefully and return null",
          "duration": 0.3245040000001609,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueEnricher - Validation Endpoint Regression",
            "Error handling"
          ],
          "fullName": "IssueEnricher - Validation Endpoint Regression Error handling should handle network errors gracefully",
          "status": "passed",
          "title": "should handle network errors gracefully",
          "duration": 0.8339809999999943,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueEnricher - Fixed Implementation"
          ],
          "fullName": "IssueEnricher - Fixed Implementation should successfully validate when using correct endpoint",
          "status": "passed",
          "title": "should successfully validate when using correct endpoint",
          "duration": 0.3025220000001809,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803970542,
      "endTime": 1759803970545.834,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/validation/enricher.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "RepositoryScanner with AST Validation"
          ],
          "fullName": "RepositoryScanner with AST Validation should use AST validation when enabled and API key is provided",
          "status": "passed",
          "title": "should use AST validation when enabled and API key is provided",
          "duration": 2.283149999999978,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RepositoryScanner with AST Validation"
          ],
          "fullName": "RepositoryScanner with AST Validation should skip AST validation when disabled",
          "status": "passed",
          "title": "should skip AST validation when disabled",
          "duration": 0.7810970000000452,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RepositoryScanner with AST Validation"
          ],
          "fullName": "RepositoryScanner with AST Validation should skip AST validation when no API key is provided",
          "status": "passed",
          "title": "should skip AST validation when no API key is provided",
          "duration": 0.7554720000000543,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RepositoryScanner with AST Validation"
          ],
          "fullName": "RepositoryScanner with AST Validation should provide file contents to AST validator",
          "status": "passed",
          "title": "should provide file contents to AST validator",
          "duration": 0.5835860000000821,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803970310,
      "endTime": 1759803970314.5835,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/test/scanner/repository-scanner-ast.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Regression: Validation Endpoint Compatibility",
            "Issue #610: API endpoint mismatch"
          ],
          "fullName": "Regression: Validation Endpoint Compatibility Issue #610: API endpoint mismatch should use /api/v1/vulnerabilities/validate as primary endpoint",
          "status": "passed",
          "title": "should use /api/v1/vulnerabilities/validate as primary endpoint",
          "duration": 1.082977000000028,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Regression: Validation Endpoint Compatibility",
            "Issue #617: Validation returning actual results"
          ],
          "fullName": "Regression: Validation Endpoint Compatibility Issue #617: Validation returning actual results should return vulnerability validation results not empty array",
          "status": "passed",
          "title": "should return vulnerability validation results not empty array",
          "duration": 1.2813999999999623,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Regression: Validation Endpoint Compatibility",
            "Issue #617: Validation returning actual results"
          ],
          "fullName": "Regression: Validation Endpoint Compatibility Issue #617: Validation returning actual results should handle NoSQL injection with $where correctly",
          "status": "passed",
          "title": "should handle NoSQL injection with $where correctly",
          "duration": 0.8424229999999397,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Regression: Validation Endpoint Compatibility",
            "Cache functionality regression"
          ],
          "fullName": "Regression: Validation Endpoint Compatibility Cache functionality regression should include cache stats in response",
          "status": "passed",
          "title": "should include cache stats in response",
          "duration": 0.567497000000003,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Regression: Validation Endpoint Compatibility",
            "Error handling regression"
          ],
          "fullName": "Regression: Validation Endpoint Compatibility Error handling regression should provide clear error message when API key is invalid",
          "status": "passed",
          "title": "should provide clear error message when API key is invalid",
          "duration": 0.40428899999994883,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Regression: Validation Endpoint Compatibility",
            "Error handling regression"
          ],
          "fullName": "Regression: Validation Endpoint Compatibility Error handling regression should handle malformed repository names gracefully",
          "status": "passed",
          "title": "should handle malformed repository names gracefully",
          "duration": 0.26929599999994025,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "E2E Regression: Full validation flow"
          ],
          "fullName": "E2E Regression: Full validation flow should complete validation workflow successfully",
          "status": "passed",
          "title": "should complete validation workflow successfully",
          "duration": 0.20066800000006424,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803970274,
      "endTime": 1759803970279.2007,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/tests/regression/validation-endpoint.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Improved Analyzer Parsing"
          ],
          "fullName": "Improved Analyzer Parsing should detect files mentioned without quotes",
          "status": "passed",
          "title": "should detect files mentioned without quotes",
          "duration": 0.3008209999998144,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Improved Analyzer Parsing"
          ],
          "fullName": "Improved Analyzer Parsing should detect common auth files mentioned casually",
          "status": "passed",
          "title": "should detect common auth files mentioned casually",
          "duration": 0.17353800000000774,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Improved Analyzer Parsing"
          ],
          "fullName": "Improved Analyzer Parsing should extract approach from \"Solution:\" keyword",
          "status": "passed",
          "title": "should extract approach from \"Solution:\" keyword",
          "duration": 0.13347999999996318,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Improved Analyzer Parsing"
          ],
          "fullName": "Improved Analyzer Parsing should extract approach from \"Fix:\" keyword",
          "status": "passed",
          "title": "should extract approach from \"Fix:\" keyword",
          "duration": 0.13667099999997845,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Improved Analyzer Parsing"
          ],
          "fullName": "Improved Analyzer Parsing should use whole response as approach if no keywords found",
          "status": "passed",
          "title": "should use whole response as approach if no keywords found",
          "duration": 0.13739400000008573,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Improved Analyzer Parsing"
          ],
          "fullName": "Improved Analyzer Parsing should detect multiple file types",
          "status": "passed",
          "title": "should detect multiple file types",
          "duration": 0.15611899999998968,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Improved Analyzer Parsing"
          ],
          "fullName": "Improved Analyzer Parsing should handle responses with \"To fix this\" keyword",
          "status": "passed",
          "title": "should handle responses with \"To fix this\" keyword",
          "duration": 0.13405099999999948,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Improved Analyzer Parsing"
          ],
          "fullName": "Improved Analyzer Parsing should still fail if response is too short",
          "status": "passed",
          "title": "should still fail if response is too short",
          "duration": 0.10353200000008655,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Improved Analyzer Parsing"
          ],
          "fullName": "Improved Analyzer Parsing should handle mixed format responses",
          "status": "passed",
          "title": "should handle mixed format responses",
          "duration": 0.18222000000014305,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803970691,
      "endTime": 1759803970692.1821,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/analyzer-parsing.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Claude Code Integration Tests"
          ],
          "fullName": "Claude Code Integration Tests should initialize Claude Code adapter",
          "status": "passed",
          "title": "should initialize Claude Code adapter",
          "duration": 0.9399199999999155,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code Integration Tests"
          ],
          "fullName": "Claude Code Integration Tests should generate solution with Claude Code when available",
          "status": "passed",
          "title": "should generate solution with Claude Code when available",
          "duration": 2.203446999999983,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code Integration Tests"
          ],
          "fullName": "Claude Code Integration Tests should fall back gracefully when Claude Code is not available",
          "status": "passed",
          "title": "should fall back gracefully when Claude Code is not available",
          "duration": 0.4118029999999635,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code Integration Tests"
          ],
          "fullName": "Claude Code Integration Tests should handle errors gracefully",
          "status": "passed",
          "title": "should handle errors gracefully",
          "duration": 0.7323209999999563,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code Integration Tests"
          ],
          "fullName": "Claude Code Integration Tests should use vended credentials when configured",
          "status": "passed",
          "title": "should use vended credentials when configured",
          "duration": 0.9665790000000243,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code Integration Tests"
          ],
          "fullName": "Claude Code Integration Tests should integrate with standard AI client",
          "status": "passed",
          "title": "should integrate with standard AI client",
          "duration": 0.16196899999999914,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803970244,
      "endTime": 1759803970250.1619,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/claude-code-integration.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Git-based Processor Prompt Integration"
          ],
          "fullName": "Git-based Processor Prompt Integration should pass test results to adapter on first attempt",
          "status": "passed",
          "title": "should pass test results to adapter on first attempt",
          "duration": 16.42804000000001,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Git-based Processor Prompt Integration"
          ],
          "fullName": "Git-based Processor Prompt Integration should pass validation context on retry after failed validation",
          "status": "passed",
          "title": "should pass validation context on retry after failed validation",
          "duration": 0.1764930000001641,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Git-based Processor Prompt Integration"
          ],
          "fullName": "Git-based Processor Prompt Integration should enhance issue context with test failure info on retry",
          "status": "passed",
          "title": "should enhance issue context with test failure info on retry",
          "duration": 4.552793999999949,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803970630,
      "endTime": 1759803970650.5527,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/git-based-processor-prompt-integration.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Unified Processor Credential Manager Passing"
          ],
          "fullName": "Unified Processor Credential Manager Passing should create and pass credential manager to EnhancedClaudeCodeAdapter when using vended credentials",
          "status": "passed",
          "title": "should create and pass credential manager to EnhancedClaudeCodeAdapter when using vended credentials",
          "duration": 1.1209779999999228,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Unified Processor Credential Manager Passing"
          ],
          "fullName": "Unified Processor Credential Manager Passing should not create credential manager when useVendedCredentials is false",
          "status": "passed",
          "title": "should not create credential manager when useVendedCredentials is false",
          "duration": 0.392900999999938,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Unified Processor Credential Manager Passing"
          ],
          "fullName": "Unified Processor Credential Manager Passing should not create credential manager when rsolvApiKey is missing",
          "status": "passed",
          "title": "should not create credential manager when rsolvApiKey is missing",
          "duration": 0.4385850000001028,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Unified Processor Credential Manager Passing"
          ],
          "fullName": "Unified Processor Credential Manager Passing should handle credential manager creation errors gracefully",
          "status": "passed",
          "title": "should handle credential manager creation errors gracefully",
          "duration": 0.46060000000011314,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803970505,
      "endTime": 1759803970507.4607,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/unified-processor-credentials.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "PromptEnhancer",
            "enhancePrompt"
          ],
          "fullName": "PromptEnhancer enhancePrompt adds patterns to avoid from negative feedback",
          "status": "passed",
          "title": "adds patterns to avoid from negative feedback",
          "duration": 0.37146800000004987,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PromptEnhancer",
            "enhancePrompt"
          ],
          "fullName": "PromptEnhancer enhancePrompt returns the original prompt when there are no patterns",
          "status": "passed",
          "title": "returns the original prompt when there are no patterns",
          "duration": 0.1051190000000588,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PromptEnhancer",
            "enhancePrompt"
          ],
          "fullName": "PromptEnhancer enhancePrompt includes examples of successful solutions",
          "status": "passed",
          "title": "includes examples of successful solutions",
          "duration": 0.09836199999995188,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PromptEnhancer",
            "generateEnhancementContext"
          ],
          "fullName": "PromptEnhancer generateEnhancementContext returns a valid enhancement context for a given issue",
          "status": "passed",
          "title": "returns a valid enhancement context for a given issue",
          "duration": 0.6338010000001759,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PromptEnhancer",
            "generateEnhancementContext"
          ],
          "fullName": "PromptEnhancer generateEnhancementContext handles errors gracefully",
          "status": "passed",
          "title": "handles errors gracefully",
          "duration": 0.7428319999999076,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803970525,
      "endTime": 1759803970526.743,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/feedback/__tests__/enhancer.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Mitigation-Only Mode",
            "Basic Execution"
          ],
          "fullName": "Mitigation-Only Mode Basic Execution should execute mitigation with validation data from prior phase",
          "status": "passed",
          "title": "should execute mitigation with validation data from prior phase",
          "duration": 92.73029199999996,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Mitigation-Only Mode",
            "Basic Execution"
          ],
          "fullName": "Mitigation-Only Mode Basic Execution should handle missing validation data gracefully",
          "status": "passed",
          "title": "should handle missing validation data gracefully",
          "duration": 3.9752690000000257,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Mitigation-Only Mode",
            "Basic Execution"
          ],
          "fullName": "Mitigation-Only Mode Basic Execution should retrieve validation data from PhaseDataClient if not provided",
          "status": "passed",
          "title": "should retrieve validation data from PhaseDataClient if not provided",
          "duration": 4.56588499999998,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Mitigation-Only Mode",
            "Fix Application"
          ],
          "fullName": "Mitigation-Only Mode Fix Application should apply fix using GitBasedClaudeCodeAdapter",
          "status": "passed",
          "title": "should apply fix using GitBasedClaudeCodeAdapter",
          "duration": 4.408342999999945,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Mitigation-Only Mode",
            "Fix Application"
          ],
          "fullName": "Mitigation-Only Mode Fix Application should verify tests pass after fix (GREEN phase)",
          "status": "passed",
          "title": "should verify tests pass after fix (GREEN phase)",
          "duration": 4.973415000000045,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Mitigation-Only Mode",
            "Fix Application"
          ],
          "fullName": "Mitigation-Only Mode Fix Application should retry fix if tests fail",
          "status": "passed",
          "title": "should retry fix if tests fail",
          "duration": 2.8733060000000705,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Mitigation-Only Mode",
            "Fix Application"
          ],
          "fullName": "Mitigation-Only Mode Fix Application should refactor code to match codebase style",
          "status": "passed",
          "title": "should refactor code to match codebase style",
          "duration": 3.275722999999971,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Mitigation-Only Mode",
            "PR Creation"
          ],
          "fullName": "Mitigation-Only Mode PR Creation should create educational PR with test results",
          "status": "passed",
          "title": "should create educational PR with test results",
          "duration": 2.537582999999927,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Mitigation-Only Mode",
            "PR Creation"
          ],
          "fullName": "Mitigation-Only Mode PR Creation should include before/after code in PR description",
          "status": "passed",
          "title": "should include before/after code in PR description",
          "duration": 2.0384220000000823,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Mitigation-Only Mode",
            "PR Creation"
          ],
          "fullName": "Mitigation-Only Mode PR Creation should add security education context to PR",
          "status": "passed",
          "title": "should add security education context to PR",
          "duration": 1.7790320000000293,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Mitigation-Only Mode",
            "Multiple Issues"
          ],
          "fullName": "Mitigation-Only Mode Multiple Issues should handle multiple issues in batch",
          "status": "skipped",
          "title": "should handle multiple issues in batch",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Mitigation-Only Mode",
            "Multiple Issues"
          ],
          "fullName": "Mitigation-Only Mode Multiple Issues should handle partial failures gracefully",
          "status": "skipped",
          "title": "should handle partial failures gracefully",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Mitigation-Only Mode",
            "Error Handling"
          ],
          "fullName": "Mitigation-Only Mode Error Handling should handle missing AI adapter gracefully",
          "status": "passed",
          "title": "should handle missing AI adapter gracefully",
          "duration": 1.91614699999991,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Mitigation-Only Mode",
            "Error Handling"
          ],
          "fullName": "Mitigation-Only Mode Error Handling should handle test execution failures",
          "status": "passed",
          "title": "should handle test execution failures",
          "duration": 1.7273500000000013,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Mitigation-Only Mode",
            "Error Handling"
          ],
          "fullName": "Mitigation-Only Mode Error Handling should timeout if fix takes too long",
          "status": "passed",
          "title": "should timeout if fix takes too long",
          "duration": 201.51932799999997,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803969823,
      "endTime": 1759803970152.5193,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/modes/__tests__/mitigation-only-mode.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Phase Decomposition - Simple Tests"
          ],
          "fullName": "Phase Decomposition - Simple Tests PhaseExecutor has all decomposed methods",
          "status": "passed",
          "title": "PhaseExecutor has all decomposed methods",
          "duration": 0.5637820000001739,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase Decomposition - Simple Tests"
          ],
          "fullName": "Phase Decomposition - Simple Tests executeScanForIssue returns correct structure",
          "status": "failed",
          "title": "executeScanForIssue returns correct structure",
          "duration": 1.9939620000000104,
          "failureMessages": [
            "AssertionError: expected { success: false, phase: 'scan', …(1) } to have property \"data\"\n    at /home/dylan/dev/rsolv/RSOLV-action/src/modes/__tests__/phase-decomposition-simple.test.ts:80:20\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase Decomposition - Simple Tests"
          ],
          "fullName": "Phase Decomposition - Simple Tests executeValidateForIssue accepts scan data",
          "status": "passed",
          "title": "executeValidateForIssue accepts scan data",
          "duration": 0.13044700000000375,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase Decomposition - Simple Tests"
          ],
          "fullName": "Phase Decomposition - Simple Tests executeMitigateForIssue accepts scan and validation data",
          "status": "passed",
          "title": "executeMitigateForIssue accepts scan and validation data",
          "duration": 0.09072500000002037,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase Decomposition - Simple Tests"
          ],
          "fullName": "Phase Decomposition - Simple Tests executeThreePhaseForIssue coordinates all phases",
          "status": "passed",
          "title": "executeThreePhaseForIssue coordinates all phases",
          "duration": 0.2483039999999619,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase Decomposition - Simple Tests"
          ],
          "fullName": "Phase Decomposition - Simple Tests Phase data flows between phases correctly",
          "status": "passed",
          "title": "Phase data flows between phases correctly",
          "duration": 0.22892000000001644,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase Decomposition - Simple Tests"
          ],
          "fullName": "Phase Decomposition - Simple Tests Aborts if scan determines issue cannot be fixed",
          "status": "passed",
          "title": "Aborts if scan determines issue cannot be fixed",
          "duration": 0.1596469999999499,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase Decomposition - Simple Tests"
          ],
          "fullName": "Phase Decomposition - Simple Tests Helper methods are accessible",
          "status": "passed",
          "title": "Helper methods are accessible",
          "duration": 6.941366000000016,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803970597,
      "endTime": 1759803970607.9414,
      "status": "failed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/modes/__tests__/phase-decomposition-simple.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Vendor Filtering Across All Phases",
            "Phase 1: Scan (Already Working)"
          ],
          "fullName": "Vendor Filtering Across All Phases Phase 1: Scan (Already Working) should mark vulnerabilities in vendor files with isVendor flag",
          "status": "failed",
          "title": "should mark vulnerabilities in vendor files with isVendor flag",
          "duration": 0.6509780000000092,
          "failureMessages": [
            "ReferenceError: VendorDetector is not defined\n    at /home/dylan/dev/rsolv/RSOLV-action/src/modes/__tests__/vendor-filtering-all-phases.test.ts:33:5\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runHook (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1436:51)\n    at callSuiteHook (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1442:25)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at callSuiteHook (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1429:21)\n    at runTest (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1566:26)"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Vendor Filtering Across All Phases",
            "Phase 2: Validation - Vendor File Filtering"
          ],
          "fullName": "Vendor Filtering Across All Phases Phase 2: Validation - Vendor File Filtering should mark vendor file vulnerabilities as VENDORED, not FALSE_POSITIVE",
          "status": "failed",
          "title": "should mark vendor file vulnerabilities as VENDORED, not FALSE_POSITIVE",
          "duration": 0.12496700000008332,
          "failureMessages": [
            "ReferenceError: VendorDetector is not defined\n    at /home/dylan/dev/rsolv/RSOLV-action/src/modes/__tests__/vendor-filtering-all-phases.test.ts:33:5\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runHook (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1436:51)\n    at callSuiteHook (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1442:25)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at callSuiteHook (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1429:21)\n    at runTest (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1566:26)"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Vendor Filtering Across All Phases",
            "Phase 2: Validation - Vendor File Filtering"
          ],
          "fullName": "Vendor Filtering Across All Phases Phase 2: Validation - Vendor File Filtering should skip test generation for vendor files",
          "status": "failed",
          "title": "should skip test generation for vendor files",
          "duration": 0.08376399999997375,
          "failureMessages": [
            "ReferenceError: VendorDetector is not defined\n    at /home/dylan/dev/rsolv/RSOLV-action/src/modes/__tests__/vendor-filtering-all-phases.test.ts:33:5\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runHook (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1436:51)\n    at callSuiteHook (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1442:25)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at callSuiteHook (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1429:21)\n    at runTest (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1566:26)"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Vendor Filtering Across All Phases",
            "Phase 3: Mitigation - Vendor File Filtering"
          ],
          "fullName": "Vendor Filtering Across All Phases Phase 3: Mitigation - Vendor File Filtering should not generate fixes for vendor files",
          "status": "failed",
          "title": "should not generate fixes for vendor files",
          "duration": 0.08713000000000193,
          "failureMessages": [
            "ReferenceError: VendorDetector is not defined\n    at /home/dylan/dev/rsolv/RSOLV-action/src/modes/__tests__/vendor-filtering-all-phases.test.ts:33:5\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runHook (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1436:51)\n    at callSuiteHook (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1442:25)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at callSuiteHook (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1429:21)\n    at runTest (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1566:26)"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Vendor Filtering Across All Phases",
            "Phase 3: Mitigation - Vendor File Filtering"
          ],
          "fullName": "Vendor Filtering Across All Phases Phase 3: Mitigation - Vendor File Filtering should exclude vendor files from fix generation even if mixed with app files",
          "status": "failed",
          "title": "should exclude vendor files from fix generation even if mixed with app files",
          "duration": 0.08048600000006445,
          "failureMessages": [
            "ReferenceError: VendorDetector is not defined\n    at /home/dylan/dev/rsolv/RSOLV-action/src/modes/__tests__/vendor-filtering-all-phases.test.ts:33:5\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runHook (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1436:51)\n    at callSuiteHook (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1442:25)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at callSuiteHook (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1429:21)\n    at runTest (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1566:26)"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Vendor Filtering Across All Phases",
            "Integration: End-to-End Vendor Filtering"
          ],
          "fullName": "Vendor Filtering Across All Phases Integration: End-to-End Vendor Filtering should handle vendor files correctly through all phases",
          "status": "failed",
          "title": "should handle vendor files correctly through all phases",
          "duration": 0.06880899999998746,
          "failureMessages": [
            "ReferenceError: VendorDetector is not defined\n    at /home/dylan/dev/rsolv/RSOLV-action/src/modes/__tests__/vendor-filtering-all-phases.test.ts:33:5\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runHook (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1436:51)\n    at callSuiteHook (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1442:25)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at callSuiteHook (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1429:21)\n    at runTest (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1566:26)"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Vendor Filtering Across All Phases",
            "Vendor Detection Helper Functions"
          ],
          "fullName": "Vendor Filtering Across All Phases Vendor Detection Helper Functions should extract files from various issue formats",
          "status": "failed",
          "title": "should extract files from various issue formats",
          "duration": 0.07266300000003412,
          "failureMessages": [
            "ReferenceError: VendorDetector is not defined\n    at /home/dylan/dev/rsolv/RSOLV-action/src/modes/__tests__/vendor-filtering-all-phases.test.ts:33:5\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runHook (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1436:51)\n    at callSuiteHook (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1442:25)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at callSuiteHook (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1429:21)\n    at runTest (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1566:26)"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Vendor Filtering Across All Phases",
            "Vendor Detection Helper Functions"
          ],
          "fullName": "Vendor Filtering Across All Phases Vendor Detection Helper Functions should correctly identify vendor patterns",
          "status": "failed",
          "title": "should correctly identify vendor patterns",
          "duration": 0.09846900000002279,
          "failureMessages": [
            "ReferenceError: VendorDetector is not defined\n    at /home/dylan/dev/rsolv/RSOLV-action/src/modes/__tests__/vendor-filtering-all-phases.test.ts:33:5\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runHook (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1436:51)\n    at callSuiteHook (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1442:25)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at callSuiteHook (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1429:21)\n    at runTest (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1566:26)"
          ],
          "meta": {}
        }
      ],
      "startTime": 1759803970213,
      "endTime": 1759803970214.0984,
      "status": "failed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/modes/__tests__/vendor-filtering-all-phases.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "CveCorrelator",
            "CVE Database Correlation"
          ],
          "fullName": "CveCorrelator CVE Database Correlation should correlate vulnerabilities with known CVE entries",
          "status": "passed",
          "title": "should correlate vulnerabilities with known CVE entries",
          "duration": 10.924166999999898,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "CveCorrelator",
            "CVE Database Correlation"
          ],
          "fullName": "CveCorrelator CVE Database Correlation should map CVE severity scores to our risk levels",
          "status": "passed",
          "title": "should map CVE severity scores to our risk levels",
          "duration": 0.42609700000002704,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "CveCorrelator",
            "CVE Database Correlation"
          ],
          "fullName": "CveCorrelator CVE Database Correlation should handle multiple vulnerability types",
          "status": "passed",
          "title": "should handle multiple vulnerability types",
          "duration": 10.343502999999828,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "CveCorrelator",
            "CWE to CVE Mapping"
          ],
          "fullName": "CveCorrelator CWE to CVE Mapping should find CVEs related to CWE-89 (SQL Injection)",
          "status": "passed",
          "title": "should find CVEs related to CWE-89 (SQL Injection)",
          "duration": 0.2598819999998341,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "CveCorrelator",
            "CWE to CVE Mapping"
          ],
          "fullName": "CveCorrelator CWE to CVE Mapping should find CVEs related to CWE-79 (XSS)",
          "status": "passed",
          "title": "should find CVEs related to CWE-79 (XSS)",
          "duration": 0.06619099999988975,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "CveCorrelator",
            "CWE to CVE Mapping"
          ],
          "fullName": "CveCorrelator CWE to CVE Mapping should handle unknown CWE IDs gracefully",
          "status": "passed",
          "title": "should handle unknown CWE IDs gracefully",
          "duration": 10.20584400000007,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "CveCorrelator",
            "Risk Assessment Enhancement"
          ],
          "fullName": "CveCorrelator Risk Assessment Enhancement should enhance vulnerability risk assessment with CVE data",
          "status": "passed",
          "title": "should enhance vulnerability risk assessment with CVE data",
          "duration": 0.32822699999996985,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "CveCorrelator",
            "Risk Assessment Enhancement"
          ],
          "fullName": "CveCorrelator Risk Assessment Enhancement should calculate appropriate enhanced risk levels",
          "status": "passed",
          "title": "should calculate appropriate enhanced risk levels",
          "duration": 0.13631600000007893,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "CveCorrelator",
            "CVE Database Management"
          ],
          "fullName": "CveCorrelator CVE Database Management should have access to CVE database with recent entries",
          "status": "passed",
          "title": "should have access to CVE database with recent entries",
          "duration": 0.2530810000000656,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "CveCorrelator",
            "CVE Database Management"
          ],
          "fullName": "CveCorrelator CVE Database Management should provide CVE search capabilities",
          "status": "passed",
          "title": "should provide CVE search capabilities",
          "duration": 0.3310300000000552,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "CveCorrelator",
            "Integration with Security Analysis"
          ],
          "fullName": "CveCorrelator Integration with Security Analysis should generate CVE-enhanced security reports",
          "status": "passed",
          "title": "should generate CVE-enhanced security reports",
          "duration": 0.3978429999999662,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "CveCorrelator",
            "Integration with Security Analysis"
          ],
          "fullName": "CveCorrelator Integration with Security Analysis should provide actionable CVE-based recommendations",
          "status": "passed",
          "title": "should provide actionable CVE-based recommendations",
          "duration": 0.33154800000011164,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "CveCorrelator",
            "Performance and Caching"
          ],
          "fullName": "CveCorrelator Performance and Caching should cache CVE lookups for better performance",
          "status": "passed",
          "title": "should cache CVE lookups for better performance",
          "duration": 10.351279000000204,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "CveCorrelator",
            "Performance and Caching"
          ],
          "fullName": "CveCorrelator Performance and Caching should handle large vulnerability sets efficiently",
          "status": "passed",
          "title": "should handle large vulnerability sets efficiently",
          "duration": 0.33142099999986385,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803970331,
      "endTime": 1759803970376.3513,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/security/__tests__/cve-correlator.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "SecurityDetectorV2 Pattern Loading"
          ],
          "fullName": "SecurityDetectorV2 Pattern Loading should detect Ruby SQL injection with factory patterns",
          "status": "passed",
          "title": "should detect Ruby SQL injection with factory patterns",
          "duration": 0.8346800000001622,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "SecurityDetectorV2 Pattern Loading"
          ],
          "fullName": "SecurityDetectorV2 Pattern Loading should detect Python SQL injection",
          "status": "passed",
          "title": "should detect Python SQL injection",
          "duration": 0.5834619999998267,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "SecurityDetectorV2 Pattern Loading"
          ],
          "fullName": "SecurityDetectorV2 Pattern Loading should detect Python pickle deserialization",
          "status": "passed",
          "title": "should detect Python pickle deserialization",
          "duration": 0.302312000000029,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "SecurityDetectorV2 Pattern Loading"
          ],
          "fullName": "SecurityDetectorV2 Pattern Loading should handle multiple patterns correctly",
          "status": "passed",
          "title": "should handle multiple patterns correctly",
          "duration": 0.9546390000000429,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "SecurityDetectorV2 Pattern Loading"
          ],
          "fullName": "SecurityDetectorV2 Pattern Loading should not have regex serialization issues",
          "status": "passed",
          "title": "should not have regex serialization issues",
          "duration": 0.7466179999998985,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803970737,
      "endTime": 1759803970740.7466,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/security/__tests__/detector-v2-patterns.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "ValidationEnricher",
            "parseIssueForFiles"
          ],
          "fullName": "ValidationEnricher parseIssueForFiles should detect file paths in backticks",
          "status": "passed",
          "title": "should detect file paths in backticks",
          "duration": 0.820203999999876,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ValidationEnricher",
            "parseIssueForFiles"
          ],
          "fullName": "ValidationEnricher parseIssueForFiles should detect file paths in Affected Files section",
          "status": "passed",
          "title": "should detect file paths in Affected Files section",
          "duration": 0.629472000000078,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ValidationEnricher",
            "parseIssueForFiles"
          ],
          "fullName": "ValidationEnricher parseIssueForFiles should detect file paths with File: prefix in code blocks",
          "status": "passed",
          "title": "should detect file paths with File: prefix in code blocks",
          "duration": 0.70966999999996,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ValidationEnricher",
            "parseIssueForFiles"
          ],
          "fullName": "ValidationEnricher parseIssueForFiles should detect file paths in plain comments within code blocks",
          "status": "passed",
          "title": "should detect file paths in plain comments within code blocks",
          "duration": 0.5245770000001357,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ValidationEnricher",
            "parseIssueForFiles"
          ],
          "fullName": "ValidationEnricher parseIssueForFiles should detect various file path comment formats",
          "status": "passed",
          "title": "should detect various file path comment formats",
          "duration": 0.5332590000000437,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ValidationEnricher",
            "analyzeFile"
          ],
          "fullName": "ValidationEnricher analyzeFile should detect SQL injection vulnerability in file content",
          "status": "passed",
          "title": "should detect SQL injection vulnerability in file content",
          "duration": 2.168721000000005,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ValidationEnricher",
            "analyzeFile"
          ],
          "fullName": "ValidationEnricher analyzeFile should detect XSS vulnerability in file content",
          "status": "passed",
          "title": "should detect XSS vulnerability in file content",
          "duration": 1.1159419999999045,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ValidationEnricher",
            "extractVulnerabilityType"
          ],
          "fullName": "ValidationEnricher extractVulnerabilityType should detect SQL injection from issue title",
          "status": "passed",
          "title": "should detect SQL injection from issue title",
          "duration": 0.36541699999997945,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ValidationEnricher",
            "extractVulnerabilityType"
          ],
          "fullName": "ValidationEnricher extractVulnerabilityType should detect XSS from issue title",
          "status": "passed",
          "title": "should detect XSS from issue title",
          "duration": 0.2809780000000046,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803970558,
      "endTime": 1759803970566.281,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/validation/__tests__/enricher.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Jira Label Search"
          ],
          "fullName": "Jira Label Search should generate correct JQL for both rsolv and autofix labels",
          "status": "passed",
          "title": "should generate correct JQL for both rsolv and autofix labels",
          "duration": 0.3759290000000419,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Jira Label Search"
          ],
          "fullName": "Jira Label Search should handle custom label configurations",
          "status": "passed",
          "title": "should handle custom label configurations",
          "duration": 0.14958999999998923,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Jira Label Search"
          ],
          "fullName": "Jira Label Search demonstrates JQL queries for different scenarios",
          "status": "passed",
          "title": "demonstrates JQL queries for different scenarios",
          "duration": 0.17442000000005464,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803970753,
      "endTime": 1759803970753.376,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/tests/platforms/jira/label-search.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "GitBasedClaudeCodeAdapter - Enhanced Prompts",
            "constructPromptWithTestContext with specific vulnerabilities"
          ],
          "fullName": "GitBasedClaudeCodeAdapter - Enhanced Prompts constructPromptWithTestContext with specific vulnerabilities should include specific vulnerability details when provided",
          "status": "failed",
          "title": "should include specific vulnerability details when provided",
          "duration": 6.04633200000012,
          "failureMessages": [
            "AssertionError: expected [] to include 'SPECIFIC VULNERABILITIES TO FIX'\n    at Proxy.<anonymous> (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/expect/dist/index.js:1191:15)\n    at Proxy.<anonymous> (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/expect/dist/index.js:1029:14)\n    at Proxy.methodWrapper (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/chai/index.js:1686:25)\n    at /home/dylan/dev/rsolv/RSOLV-action/src/ai/adapters/__tests__/claude-code-git-enhanced.test.ts:44:22\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "GitBasedClaudeCodeAdapter - Enhanced Prompts",
            "constructPromptWithTestContext with specific vulnerabilities"
          ],
          "fullName": "GitBasedClaudeCodeAdapter - Enhanced Prompts constructPromptWithTestContext with specific vulnerabilities should forbid modifying test files explicitly",
          "status": "failed",
          "title": "should forbid modifying test files explicitly",
          "duration": 0.9116320000000542,
          "failureMessages": [
            "AssertionError: expected [] to include 'NEVER MODIFY TEST FILES'\n    at Proxy.<anonymous> (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/expect/dist/index.js:1191:15)\n    at Proxy.<anonymous> (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/expect/dist/index.js:1029:14)\n    at Proxy.methodWrapper (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/chai/index.js:1686:25)\n    at /home/dylan/dev/rsolv/RSOLV-action/src/ai/adapters/__tests__/claude-code-git-enhanced.test.ts:73:22\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "GitBasedClaudeCodeAdapter - Enhanced Prompts",
            "constructPromptWithTestContext with specific vulnerabilities"
          ],
          "fullName": "GitBasedClaudeCodeAdapter - Enhanced Prompts constructPromptWithTestContext with specific vulnerabilities should group vulnerabilities by file",
          "status": "failed",
          "title": "should group vulnerabilities by file",
          "duration": 0.7241159999998672,
          "failureMessages": [
            "AssertionError: expected [] to include 'File: app/routes/contributions.js'\n    at Proxy.<anonymous> (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/expect/dist/index.js:1191:15)\n    at Proxy.<anonymous> (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/expect/dist/index.js:1029:14)\n    at Proxy.methodWrapper (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/chai/index.js:1686:25)\n    at /home/dylan/dev/rsolv/RSOLV-action/src/ai/adapters/__tests__/claude-code-git-enhanced.test.ts:106:22\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)"
          ],
          "meta": {}
        }
      ],
      "startTime": 1759803970708,
      "endTime": 1759803970716.724,
      "status": "failed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/adapters/__tests__/claude-code-git-enhanced.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "PhaseExecutor - Phase Data Persistence"
          ],
          "fullName": "PhaseExecutor - Phase Data Persistence should store and retrieve validation data with correct structure",
          "status": "passed",
          "title": "should store and retrieve validation data with correct structure",
          "duration": 4.426242999999886,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PhaseExecutor - Phase Data Persistence"
          ],
          "fullName": "PhaseExecutor - Phase Data Persistence should handle the actual structure returned by retrievePhaseResults",
          "status": "passed",
          "title": "should handle the actual structure returned by retrievePhaseResults",
          "duration": 0.9659830000000511,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803970679,
      "endTime": 1759803970684.966,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/modes/phase-executor/__tests__/phase-data-persistence.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "ElixirASTAnalyzer - Pattern Detection",
            "JavaScript vulnerability patterns"
          ],
          "fullName": "ElixirASTAnalyzer - Pattern Detection JavaScript vulnerability patterns should detect eval injection",
          "status": "passed",
          "title": "should detect eval injection",
          "duration": 1.0852670000000444,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ElixirASTAnalyzer - Pattern Detection",
            "JavaScript vulnerability patterns"
          ],
          "fullName": "ElixirASTAnalyzer - Pattern Detection JavaScript vulnerability patterns should detect SQL injection",
          "status": "passed",
          "title": "should detect SQL injection",
          "duration": 0.386955999999941,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ElixirASTAnalyzer - Pattern Detection",
            "JavaScript vulnerability patterns"
          ],
          "fullName": "ElixirASTAnalyzer - Pattern Detection JavaScript vulnerability patterns should detect XSS vulnerabilities",
          "status": "passed",
          "title": "should detect XSS vulnerabilities",
          "duration": 0.3438170000000582,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ElixirASTAnalyzer - Pattern Detection",
            "Python vulnerability patterns"
          ],
          "fullName": "ElixirASTAnalyzer - Pattern Detection Python vulnerability patterns should detect Python eval usage",
          "status": "passed",
          "title": "should detect Python eval usage",
          "duration": 0.33170099999995273,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ElixirASTAnalyzer - Pattern Detection",
            "Python vulnerability patterns"
          ],
          "fullName": "ElixirASTAnalyzer - Pattern Detection Python vulnerability patterns should detect command injection",
          "status": "passed",
          "title": "should detect command injection",
          "duration": 0.34658699999999953,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ElixirASTAnalyzer - Pattern Detection",
            "multi-language support"
          ],
          "fullName": "ElixirASTAnalyzer - Pattern Detection multi-language support should handle mixed language files",
          "status": "passed",
          "title": "should handle mixed language files",
          "duration": 0.44127500000001874,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ElixirASTAnalyzer - Pattern Detection",
            "false positive filtering"
          ],
          "fullName": "ElixirASTAnalyzer - Pattern Detection false positive filtering should filter out false positives based on confidence",
          "status": "passed",
          "title": "should filter out false positives based on confidence",
          "duration": 0.36238400000002,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ElixirASTAnalyzer - Pattern Detection",
            "false positive filtering"
          ],
          "fullName": "ElixirASTAnalyzer - Pattern Detection false positive filtering should provide confidence scores",
          "status": "passed",
          "title": "should provide confidence scores",
          "duration": 0.30541699999992034,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803970292,
      "endTime": 1759803970295.3623,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/security/analyzers/__tests__/elixir-ast-analyzer-patterns.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "AST Analyzer Fallback Strategy (Needs RFC-048 Test Mode)",
            "fallback to regex when AST fails"
          ],
          "fullName": "AST Analyzer Fallback Strategy (Needs RFC-048 Test Mode) fallback to regex when AST fails should fallback to regex detection when AST service is unavailable",
          "status": "skipped",
          "title": "should fallback to regex detection when AST service is unavailable",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AST Analyzer Fallback Strategy (Needs RFC-048 Test Mode)",
            "fallback to regex when AST fails"
          ],
          "fullName": "AST Analyzer Fallback Strategy (Needs RFC-048 Test Mode) fallback to regex when AST fails should fallback when AST parsing times out",
          "status": "skipped",
          "title": "should fallback when AST parsing times out",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AST Analyzer Fallback Strategy (Needs RFC-048 Test Mode)",
            "fallback to regex when AST fails"
          ],
          "fullName": "AST Analyzer Fallback Strategy (Needs RFC-048 Test Mode) fallback to regex when AST fails should fallback when AST returns parse errors",
          "status": "skipped",
          "title": "should fallback when AST returns parse errors",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AST Analyzer Fallback Strategy (Needs RFC-048 Test Mode)",
            "fallback to regex when AST fails"
          ],
          "fullName": "AST Analyzer Fallback Strategy (Needs RFC-048 Test Mode) fallback to regex when AST fails should prefer AST results when available",
          "status": "skipped",
          "title": "should prefer AST results when available",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AST Analyzer Fallback Strategy (Needs RFC-048 Test Mode)",
            "fallback to regex when AST fails"
          ],
          "fullName": "AST Analyzer Fallback Strategy (Needs RFC-048 Test Mode) fallback to regex when AST fails should handle mixed results (some AST, some fallback)",
          "status": "skipped",
          "title": "should handle mixed results (some AST, some fallback)",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AST Analyzer Fallback Strategy (Needs RFC-048 Test Mode)",
            "confidence adjustment"
          ],
          "fullName": "AST Analyzer Fallback Strategy (Needs RFC-048 Test Mode) confidence adjustment should lower confidence for regex-only detections",
          "status": "skipped",
          "title": "should lower confidence for regex-only detections",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AST Analyzer Fallback Strategy (Needs RFC-048 Test Mode)",
            "confidence adjustment"
          ],
          "fullName": "AST Analyzer Fallback Strategy (Needs RFC-048 Test Mode) confidence adjustment should not double-count vulnerabilities detected by both methods",
          "status": "skipped",
          "title": "should not double-count vulnerabilities detected by both methods",
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803969285,
      "endTime": 1759803969285,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/security/analyzers/__tests__/fallback-strategy.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Enhanced Context Default Behavior"
          ],
          "fullName": "Enhanced Context Default Behavior should NOT enable enhanced context by default",
          "status": "passed",
          "title": "should NOT enable enhanced context by default",
          "duration": 1827.6480689999999,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Enhanced Context Default Behavior"
          ],
          "fullName": "Enhanced Context Default Behavior should enable enhanced context only when explicitly requested",
          "status": "passed",
          "title": "should enable enhanced context only when explicitly requested",
          "duration": 2052.535618,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803972761,
      "endTime": 1759803976640.5356,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/test/enhanced-context-default.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "AST Service Key Exchange",
            "Option 1: Diffie-Hellman Key Exchange (Most Secure)"
          ],
          "fullName": "AST Service Key Exchange Option 1: Diffie-Hellman Key Exchange (Most Secure) should establish shared secret using DH key exchange",
          "status": "passed",
          "title": "should establish shared secret using DH key exchange",
          "duration": 43.12980700000003,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AST Service Key Exchange",
            "Option 2: ECDH Key Exchange (Modern & Efficient)"
          ],
          "fullName": "AST Service Key Exchange Option 2: ECDH Key Exchange (Modern & Efficient) should establish shared secret using ECDH",
          "status": "passed",
          "title": "should establish shared secret using ECDH",
          "duration": 0.7532069999999749,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AST Service Key Exchange",
            "Option 3: Pre-shared Key with Secure Transport"
          ],
          "fullName": "AST Service Key Exchange Option 3: Pre-shared Key with Secure Transport should use client-provided key over TLS (simplest secure option)",
          "status": "passed",
          "title": "should use client-provided key over TLS (simplest secure option)",
          "duration": 0.35144100000002254,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AST Service Key Exchange",
            "Current Implementation Issues"
          ],
          "fullName": "AST Service Key Exchange Current Implementation Issues should fail when server uses different key than client",
          "status": "passed",
          "title": "should fail when server uses different key than client",
          "duration": 0.23891600000001745,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803972612,
      "endTime": 1759803972657.239,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/test/key-exchange.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Server-Side AST Integration - Safe RED Phase Tests",
            "Architecture Tests - Confirm Current State"
          ],
          "fullName": "Server-Side AST Integration - Safe RED Phase Tests Architecture Tests - Confirm Current State should show detector uses client-side ASTPatternInterpreter",
          "status": "passed",
          "title": "should show detector uses client-side ASTPatternInterpreter",
          "duration": 0.56813800000009,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Server-Side AST Integration - Safe RED Phase Tests",
            "Architecture Tests - Confirm Current State"
          ],
          "fullName": "Server-Side AST Integration - Safe RED Phase Tests Architecture Tests - Confirm Current State should show we need ElixirASTAnalyzer for server-side AST",
          "status": "passed",
          "title": "should show we need ElixirASTAnalyzer for server-side AST",
          "duration": 0.3068510000000515,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Server-Side AST Integration - Safe RED Phase Tests",
            "Language Support Tests - Without Actually Parsing"
          ],
          "fullName": "Server-Side AST Integration - Safe RED Phase Tests Language Support Tests - Without Actually Parsing should demonstrate that Python detection requires server-side AST",
          "status": "passed",
          "title": "should demonstrate that Python detection requires server-side AST",
          "duration": 0.40167600000017956,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Server-Side AST Integration - Safe RED Phase Tests",
            "Language Support Tests - Without Actually Parsing"
          ],
          "fullName": "Server-Side AST Integration - Safe RED Phase Tests Language Support Tests - Without Actually Parsing should show that multi-language support is needed",
          "status": "passed",
          "title": "should show that multi-language support is needed",
          "duration": 0.20203399999991234,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Server-Side AST Integration - Safe RED Phase Tests",
            "Safe Detection Tests - Only JS/TS"
          ],
          "fullName": "Server-Side AST Integration - Safe RED Phase Tests Safe Detection Tests - Only JS/TS should detect JS vulnerabilities with current system",
          "status": "passed",
          "title": "should detect JS vulnerabilities with current system",
          "duration": 5.0290500000000975,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Server-Side AST Integration - Safe RED Phase Tests",
            "Safe Detection Tests - Only JS/TS"
          ],
          "fullName": "Server-Side AST Integration - Safe RED Phase Tests Safe Detection Tests - Only JS/TS should NOT attempt to parse non-JS languages with Babel",
          "status": "passed",
          "title": "should NOT attempt to parse non-JS languages with Babel",
          "duration": 0.20793700000012905,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Server-Side AST Integration - Safe RED Phase Tests",
            "Server-Side AST Requirements"
          ],
          "fullName": "Server-Side AST Integration - Safe RED Phase Tests Server-Side AST Requirements should require server-side AST for accurate multi-language detection",
          "status": "passed",
          "title": "should require server-side AST for accurate multi-language detection",
          "duration": 0.13577299999997194,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Server-Side AST Integration - Safe RED Phase Tests",
            "Server-Side AST Requirements"
          ],
          "fullName": "Server-Side AST Integration - Safe RED Phase Tests Server-Side AST Requirements should show ElixirASTAnalyzer can handle multiple languages",
          "status": "passed",
          "title": "should show ElixirASTAnalyzer can handle multiple languages",
          "duration": 0.08266699999990124,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803972595,
      "endTime": 1759803972603.0828,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/test/server-ast-integration-safe.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "RED Phase - Server AST Integration Needed",
            "What We Have vs What We Need"
          ],
          "fullName": "RED Phase - Server AST Integration Needed What We Have vs What We Need FAILS: detector should use ElixirASTAnalyzer instead of ASTPatternInterpreter",
          "status": "skipped",
          "title": "FAILS: detector should use ElixirASTAnalyzer instead of ASTPatternInterpreter",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RED Phase - Server AST Integration Needed",
            "What We Have vs What We Need"
          ],
          "fullName": "RED Phase - Server AST Integration Needed What We Have vs What We Need FAILS: detector should support multiple languages through server AST",
          "status": "skipped",
          "title": "FAILS: detector should support multiple languages through server AST",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RED Phase - Server AST Integration Needed",
            "Multi-Language Detection Requirements"
          ],
          "fullName": "RED Phase - Server AST Integration Needed Multi-Language Detection Requirements FAILS: should detect vulnerabilities in Python code",
          "status": "skipped",
          "title": "FAILS: should detect vulnerabilities in Python code",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RED Phase - Server AST Integration Needed",
            "Integration Point"
          ],
          "fullName": "RED Phase - Server AST Integration Needed Integration Point FAILS: detector constructor should accept ElixirASTAnalyzer",
          "status": "skipped",
          "title": "FAILS: detector constructor should accept ElixirASTAnalyzer",
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803971160,
      "endTime": 1759803971160,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/test/server-ast-red-phase.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Pattern API Regex Reconstruction Success",
            "Phase 2.2: Successful regex reconstruction"
          ],
          "fullName": "Pattern API Regex Reconstruction Success Phase 2.2: Successful regex reconstruction should reconstruct regex from serialized format",
          "status": "passed",
          "title": "should reconstruct regex from serialized format",
          "duration": 0.4227960000000053,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Pattern API Regex Reconstruction Success",
            "Phase 2.2: Successful regex reconstruction"
          ],
          "fullName": "Pattern API Regex Reconstruction Success Phase 2.2: Successful regex reconstruction should handle multiple regex with different flags",
          "status": "passed",
          "title": "should handle multiple regex with different flags",
          "duration": 0.2454389999999762,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Pattern API Regex Reconstruction Success",
            "Phase 2.2: Successful regex reconstruction"
          ],
          "fullName": "Pattern API Regex Reconstruction Success Phase 2.2: Successful regex reconstruction should handle regex in AST rules",
          "status": "passed",
          "title": "should handle regex in AST rules",
          "duration": 0.18281100000001516,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Pattern API Regex Reconstruction Success",
            "Phase 2.2: Successful regex reconstruction"
          ],
          "fullName": "Pattern API Regex Reconstruction Success Phase 2.2: Successful regex reconstruction should handle regex in context rules",
          "status": "passed",
          "title": "should handle regex in context rules",
          "duration": 0.2555849999999964,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Pattern API Regex Reconstruction Success",
            "Phase 2.2: Successful regex reconstruction"
          ],
          "fullName": "Pattern API Regex Reconstruction Success Phase 2.2: Successful regex reconstruction should handle deeply nested regex objects",
          "status": "passed",
          "title": "should handle deeply nested regex objects",
          "duration": 0.17322900000004893,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Pattern API Regex Reconstruction Success",
            "Phase 2.2: Successful regex reconstruction"
          ],
          "fullName": "Pattern API Regex Reconstruction Success Phase 2.2: Successful regex reconstruction should handle mixed string and regex patterns gracefully",
          "status": "passed",
          "title": "should handle mixed string and regex patterns gracefully",
          "duration": 0.2603470000000243,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803971551,
      "endTime": 1759803971552.2603,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/security/pattern-regex-reconstruction-success.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "LocalPatternSource",
            "getPatternsByLanguage"
          ],
          "fullName": "LocalPatternSource getPatternsByLanguage should return JavaScript patterns",
          "status": "passed",
          "title": "should return JavaScript patterns",
          "duration": 1.2029589999999928,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "LocalPatternSource",
            "getPatternsByLanguage"
          ],
          "fullName": "LocalPatternSource getPatternsByLanguage should return TypeScript patterns (same as JavaScript)",
          "status": "passed",
          "title": "should return TypeScript patterns (same as JavaScript)",
          "duration": 0.7299570000000131,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "LocalPatternSource",
            "getPatternsByLanguage"
          ],
          "fullName": "LocalPatternSource getPatternsByLanguage should return empty array for unsupported language",
          "status": "passed",
          "title": "should return empty array for unsupported language",
          "duration": 0.19266600000000267,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "LocalPatternSource",
            "getPatternsByLanguage"
          ],
          "fullName": "LocalPatternSource getPatternsByLanguage should handle case-insensitive language names",
          "status": "passed",
          "title": "should handle case-insensitive language names",
          "duration": 0.296481,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "LocalPatternSource",
            "getPatternsByType"
          ],
          "fullName": "LocalPatternSource getPatternsByType should return patterns of specific type",
          "status": "passed",
          "title": "should return patterns of specific type",
          "duration": 0.16090499999998542,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "LocalPatternSource",
            "getPatternsByType"
          ],
          "fullName": "LocalPatternSource getPatternsByType should return patterns from all languages",
          "status": "passed",
          "title": "should return patterns from all languages",
          "duration": 0.09939800000000787,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "LocalPatternSource",
            "getAllPatterns"
          ],
          "fullName": "LocalPatternSource getAllPatterns should return minimal fallback patterns",
          "status": "passed",
          "title": "should return minimal fallback patterns",
          "duration": 0.10652999999999224,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ApiPatternSource",
            "getPatternsByLanguage"
          ],
          "fullName": "ApiPatternSource getPatternsByLanguage should fetch patterns from API",
          "status": "passed",
          "title": "should fetch patterns from API",
          "duration": 0.6365930000000048,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ApiPatternSource",
            "getPatternsByLanguage"
          ],
          "fullName": "ApiPatternSource getPatternsByLanguage should handle API errors",
          "status": "passed",
          "title": "should handle API errors",
          "duration": 0.6167759999999873,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ApiPatternSource",
            "getAllPatterns"
          ],
          "fullName": "ApiPatternSource getAllPatterns should fetch patterns for all supported languages",
          "status": "passed",
          "title": "should fetch patterns for all supported languages",
          "duration": 0.4763540000000148,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ApiPatternSource",
            "getAllPatterns"
          ],
          "fullName": "ApiPatternSource getAllPatterns should continue fetching even if some languages fail",
          "status": "passed",
          "title": "should continue fetching even if some languages fail",
          "duration": 0.44477900000001114,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "HybridPatternSource"
          ],
          "fullName": "HybridPatternSource should use API source when available",
          "status": "passed",
          "title": "should use API source when available",
          "duration": 0.2300740000000019,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "HybridPatternSource"
          ],
          "fullName": "HybridPatternSource should fall back to local source on API error",
          "status": "passed",
          "title": "should fall back to local source on API error",
          "duration": 0.16167299999997908,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "createPatternSource"
          ],
          "fullName": "createPatternSource should create LocalPatternSource when USE_LOCAL_PATTERNS is true",
          "status": "passed",
          "title": "should create LocalPatternSource when USE_LOCAL_PATTERNS is true",
          "duration": 0.3458389999999838,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "createPatternSource"
          ],
          "fullName": "createPatternSource should create HybridPatternSource when API key is provided",
          "status": "passed",
          "title": "should create HybridPatternSource when API key is provided",
          "duration": 0.0836659999999938,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "createPatternSource"
          ],
          "fullName": "createPatternSource should create LocalPatternSource when no API key is provided",
          "status": "passed",
          "title": "should create LocalPatternSource when no API key is provided",
          "duration": 0.06471400000000926,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "createPatternSource"
          ],
          "fullName": "createPatternSource should pass API URL to HybridPatternSource",
          "status": "passed",
          "title": "should pass API URL to HybridPatternSource",
          "duration": 0.06180499999999256,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803971343,
      "endTime": 1759803971350.0647,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/security/pattern-source.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "ConversationLogger"
          ],
          "fullName": "ConversationLogger should create singleton instance",
          "status": "passed",
          "title": "should create singleton instance",
          "duration": 0.1706610000001092,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ConversationLogger"
          ],
          "fullName": "ConversationLogger should respect log level configuration",
          "status": "passed",
          "title": "should respect log level configuration",
          "duration": 0.15446399999996174,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ConversationLogger"
          ],
          "fullName": "ConversationLogger should create log directory when enabled",
          "status": "passed",
          "title": "should create log directory when enabled",
          "duration": 0.31739700000002813,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ConversationLogger"
          ],
          "fullName": "ConversationLogger should log conversation to file",
          "status": "passed",
          "title": "should log conversation to file",
          "duration": 1.0178109999999378,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ConversationLogger"
          ],
          "fullName": "ConversationLogger should log summary when enabled",
          "status": "passed",
          "title": "should log summary when enabled",
          "duration": 10.649472999999944,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803972698,
      "endTime": 1759803972710.6494,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/test/ai/conversation-logger.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Pattern Availability Regression Test",
            "when RSOLV_API_KEY is available"
          ],
          "fullName": "Pattern Availability Regression Test when RSOLV_API_KEY is available should provide at least 25 patterns per major language",
          "status": "failed",
          "title": "should provide at least 25 patterns per major language",
          "duration": 0.9491439999999329,
          "failureMessages": [
            "AssertionError: javascript should have at least 25 patterns: expected 12 to be greater than or equal to 25\n    at /home/dylan/dev/rsolv/RSOLV-action/test/regression/pattern-availability.test.ts:40:93\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Pattern Availability Regression Test",
            "when RSOLV_API_KEY is available"
          ],
          "fullName": "Pattern Availability Regression Test when RSOLV_API_KEY is available should cover all critical vulnerability types",
          "status": "failed",
          "title": "should cover all critical vulnerability types",
          "duration": 1.6671880000001238,
          "failureMessages": [
            "AssertionError: sql_injection should have patterns: expected 0 to be greater than 0\n    at /home/dylan/dev/rsolv/RSOLV-action/test/regression/pattern-availability.test.ts:61:65\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Pattern Availability Regression Test",
            "minimal patterns baseline (always runs)"
          ],
          "fullName": "Pattern Availability Regression Test minimal patterns baseline (always runs) should have at least 10 JavaScript patterns in minimal set",
          "status": "passed",
          "title": "should have at least 10 JavaScript patterns in minimal set",
          "duration": 0.23313899999993737,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Pattern Availability Regression Test",
            "minimal patterns baseline (always runs)"
          ],
          "fullName": "Pattern Availability Regression Test minimal patterns baseline (always runs) should detect pattern count degradation",
          "status": "passed",
          "title": "should detect pattern count degradation",
          "duration": 0.16471299999989242,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Pattern Availability Regression Test",
            "pattern quality checks"
          ],
          "fullName": "Pattern Availability Regression Test pattern quality checks should have valid regex patterns",
          "status": "passed",
          "title": "should have valid regex patterns",
          "duration": 3.62481600000001,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Pattern Availability Regression Test",
            "pattern quality checks"
          ],
          "fullName": "Pattern Availability Regression Test pattern quality checks should have unique pattern IDs",
          "status": "passed",
          "title": "should have unique pattern IDs",
          "duration": 0.20997000000011212,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803972664,
      "endTime": 1759803972671.21,
      "status": "failed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/test/regression/pattern-availability.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "AI Client Direct API Integration"
          ],
          "fullName": "AI Client Direct API Integration should use direct API key for Anthropic when vending is disabled",
          "status": "passed",
          "title": "should use direct API key for Anthropic when vending is disabled",
          "duration": 0.7177650000000995,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AI Client Direct API Integration"
          ],
          "fullName": "AI Client Direct API Integration should use direct API key for OpenAI when vending is disabled",
          "status": "passed",
          "title": "should use direct API key for OpenAI when vending is disabled",
          "duration": 0.3490389999999479,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AI Client Direct API Integration"
          ],
          "fullName": "AI Client Direct API Integration should handle API errors gracefully",
          "status": "passed",
          "title": "should handle API errors gracefully",
          "duration": 1.059884000000011,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AI Client Direct API Integration"
          ],
          "fullName": "AI Client Direct API Integration should throw error for missing API key",
          "status": "passed",
          "title": "should throw error for missing API key",
          "duration": 0.16925700000001598,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803972683,
      "endTime": 1759803972685.1692,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/client-integration.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Security-Aware Processor Integration"
          ],
          "fullName": "Security-Aware Processor Integration should detect security issues and enable security analysis mode",
          "status": "passed",
          "title": "should detect security issues and enable security analysis mode",
          "duration": 203.29776500000003,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Security-Aware Processor Integration"
          ],
          "fullName": "Security-Aware Processor Integration should include security analysis data when processing security issues",
          "status": "passed",
          "title": "should include security analysis data when processing security issues",
          "duration": 201.56270999999992,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Security-Aware Processor Integration"
          ],
          "fullName": "Security-Aware Processor Integration should respect enableSecurityAnalysis configuration flag",
          "status": "passed",
          "title": "should respect enableSecurityAnalysis configuration flag",
          "duration": 200.668772,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803971921,
      "endTime": 1759803972526.6687,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/processor-security-integration.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Container Setup"
          ],
          "fullName": "Container Setup should set up container when Docker is available",
          "status": "passed",
          "title": "should set up container when Docker is available",
          "duration": 0.49861299999997755,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Container Setup"
          ],
          "fullName": "Container Setup should disable containers when Docker is not available",
          "status": "passed",
          "title": "should disable containers when Docker is not available",
          "duration": 0.6770119999998769,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Container Setup"
          ],
          "fullName": "Container Setup should skip setup if containers are already disabled",
          "status": "passed",
          "title": "should skip setup if containers are already disabled",
          "duration": 0.11430499999983113,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Container Setup"
          ],
          "fullName": "Container Setup should validate container configuration",
          "status": "passed",
          "title": "should validate container configuration",
          "duration": 0.30846600000018043,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Container Setup"
          ],
          "fullName": "Container Setup should validate memory limit format",
          "status": "passed",
          "title": "should validate memory limit format",
          "duration": 0.2990230000000338,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Container Setup"
          ],
          "fullName": "Container Setup should validate CPU limit format",
          "status": "passed",
          "title": "should validate CPU limit format",
          "duration": 0.23861399999987043,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Container Setup"
          ],
          "fullName": "Container Setup should validate timeout value",
          "status": "passed",
          "title": "should validate timeout value",
          "duration": 0.22612499999991087,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Container Setup"
          ],
          "fullName": "Container Setup should handle image pull failure in development mode",
          "status": "passed",
          "title": "should handle image pull failure in development mode",
          "duration": 0.2377040000001216,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Container Setup"
          ],
          "fullName": "Container Setup should throw on image pull failure in production mode",
          "status": "passed",
          "title": "should throw on image pull failure in production mode",
          "duration": 0.36767699999995784,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Container Setup"
          ],
          "fullName": "Container Setup should apply strict security profile",
          "status": "passed",
          "title": "should apply strict security profile",
          "duration": 0.19830000000001746,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Container Setup"
          ],
          "fullName": "Container Setup should apply relaxed security profile",
          "status": "passed",
          "title": "should apply relaxed security profile",
          "duration": 0.1755040000000463,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Container Setup"
          ],
          "fullName": "Container Setup should configure network restrictions",
          "status": "passed",
          "title": "should configure network restrictions",
          "duration": 0.20389399999999114,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Container Setup"
          ],
          "fullName": "Container Setup should set environment variables",
          "status": "passed",
          "title": "should set environment variables",
          "duration": 0.17883499999993546,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803972578,
      "endTime": 1759803972582.2039,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/containers/__tests__/setup.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "FeedbackCollector",
            "analyzeSentiment"
          ],
          "fullName": "FeedbackCollector analyzeSentiment classifies positive sentiment correctly",
          "status": "passed",
          "title": "classifies positive sentiment correctly",
          "duration": 0.23134900000013658,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FeedbackCollector",
            "analyzeSentiment"
          ],
          "fullName": "FeedbackCollector analyzeSentiment classifies negative sentiment correctly",
          "status": "passed",
          "title": "classifies negative sentiment correctly",
          "duration": 0.12001399999985551,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FeedbackCollector",
            "analyzeSentiment"
          ],
          "fullName": "FeedbackCollector analyzeSentiment defaults to neutral sentiment when text is ambiguous",
          "status": "passed",
          "title": "defaults to neutral sentiment when text is ambiguous",
          "duration": 0.08618200000000797,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FeedbackCollector",
            "analyzeSentimentFromReview"
          ],
          "fullName": "FeedbackCollector analyzeSentimentFromReview returns positive sentiment for approved reviews regardless of content",
          "status": "passed",
          "title": "returns positive sentiment for approved reviews regardless of content",
          "duration": 0.05508900000018002,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FeedbackCollector",
            "analyzeSentimentFromReview"
          ],
          "fullName": "FeedbackCollector analyzeSentimentFromReview returns negative sentiment for change requests regardless of content",
          "status": "passed",
          "title": "returns negative sentiment for change requests regardless of content",
          "duration": 0.03753400000005058,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FeedbackCollector",
            "analyzeSentimentFromReview"
          ],
          "fullName": "FeedbackCollector analyzeSentimentFromReview analyzes comment content when review state is commented",
          "status": "passed",
          "title": "analyzes comment content when review state is commented",
          "duration": 0.042693999999983134,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FeedbackCollector",
            "handleWebhook"
          ],
          "fullName": "FeedbackCollector handleWebhook processes PR comment events correctly",
          "status": "passed",
          "title": "processes PR comment events correctly",
          "duration": 0.15278200000011566,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FeedbackCollector",
            "handleWebhook"
          ],
          "fullName": "FeedbackCollector handleWebhook returns null for irrelevant webhook events",
          "status": "passed",
          "title": "returns null for irrelevant webhook events",
          "duration": 0.11304500000005646,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803972693,
      "endTime": 1759803972694.1528,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/feedback/__tests__/collector.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Linear Integration End-to-End - DISABLED",
            "Programmatic Verification"
          ],
          "fullName": "Linear Integration End-to-End - DISABLED Programmatic Verification should correctly query Linear GraphQL API for labeled issues",
          "status": "skipped",
          "title": "should correctly query Linear GraphQL API for labeled issues",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Linear Integration End-to-End - DISABLED",
            "Programmatic Verification"
          ],
          "fullName": "Linear Integration End-to-End - DISABLED Programmatic Verification should integrate with issue detector for multi-platform detection",
          "status": "skipped",
          "title": "should integrate with issue detector for multi-platform detection",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Linear Integration End-to-End - DISABLED",
            "Programmatic Verification"
          ],
          "fullName": "Linear Integration End-to-End - DISABLED Programmatic Verification should handle pagination for large result sets",
          "status": "skipped",
          "title": "should handle pagination for large result sets",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Linear Integration End-to-End - DISABLED",
            "Programmatic Verification"
          ],
          "fullName": "Linear Integration End-to-End - DISABLED Programmatic Verification should correctly map repository information from issue description",
          "status": "skipped",
          "title": "should correctly map repository information from issue description",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Linear Integration End-to-End - DISABLED",
            "Polling Mechanism"
          ],
          "fullName": "Linear Integration End-to-End - DISABLED Polling Mechanism should be triggered by GitHub Actions schedule",
          "status": "skipped",
          "title": "should be triggered by GitHub Actions schedule",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Linear Integration End-to-End - DISABLED",
            "Polling Mechanism"
          ],
          "fullName": "Linear Integration End-to-End - DISABLED Polling Mechanism should handle concurrent platform checks",
          "status": "skipped",
          "title": "should handle concurrent platform checks",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Linear Integration End-to-End - DISABLED",
            "Label-based Issue Detection"
          ],
          "fullName": "Linear Integration End-to-End - DISABLED Label-based Issue Detection should find issues with either autofix OR rsolv label",
          "status": "skipped",
          "title": "should find issues with either autofix OR rsolv label",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Linear Integration End-to-End - DISABLED",
            "Label-based Issue Detection"
          ],
          "fullName": "Linear Integration End-to-End - DISABLED Label-based Issue Detection should filter by team if teamId is provided",
          "status": "skipped",
          "title": "should filter by team if teamId is provided",
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803971160,
      "endTime": 1759803971160,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/platforms/linear/linear-integration.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "IssueCreator - max_issues limit",
            "RED Tests - Prove the problem exists"
          ],
          "fullName": "IssueCreator - max_issues limit RED Tests - Prove the problem exists should create all issues when max_issues is not specified",
          "status": "passed",
          "title": "should create all issues when max_issues is not specified",
          "duration": 1.0614709999999832,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueCreator - max_issues limit",
            "RED Tests - Prove the problem exists"
          ],
          "fullName": "IssueCreator - max_issues limit RED Tests - Prove the problem exists should fail to limit issues when max_issues is set but not implemented",
          "status": "passed",
          "title": "should fail to limit issues when max_issues is set but not implemented",
          "duration": 0.3543220000000247,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueCreator - max_issues limit",
            "GREEN Tests - Verify the fix works"
          ],
          "fullName": "IssueCreator - max_issues limit GREEN Tests - Verify the fix works should respect max_issues limit when set to 3",
          "status": "passed",
          "title": "should respect max_issues limit when set to 3",
          "duration": 0.4141570000000456,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueCreator - max_issues limit",
            "GREEN Tests - Verify the fix works"
          ],
          "fullName": "IssueCreator - max_issues limit GREEN Tests - Verify the fix works should respect max_issues limit when set to 1",
          "status": "passed",
          "title": "should respect max_issues limit when set to 1",
          "duration": 0.233553000000029,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueCreator - max_issues limit",
            "GREEN Tests - Verify the fix works"
          ],
          "fullName": "IssueCreator - max_issues limit GREEN Tests - Verify the fix works should handle max_issues of 0 by creating no issues",
          "status": "failed",
          "title": "should handle max_issues of 0 by creating no issues",
          "duration": 2.0791980000000194,
          "failureMessages": [
            "AssertionError: expected [ { number: 527, …(4) }, …(4) ] to have a length of +0 but got 5\n    at Proxy.<anonymous> (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/expect/dist/index.js:1257:20)\n    at Proxy.<anonymous> (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/expect/dist/index.js:1029:14)\n    at Proxy.methodWrapper (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/chai/index.js:1686:25)\n    at /home/dylan/dev/rsolv/RSOLV-action/src/scanner/__tests__/issue-creator-max-issues.test.ts:146:22\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueCreator - max_issues limit",
            "GREEN Tests - Verify the fix works"
          ],
          "fullName": "IssueCreator - max_issues limit GREEN Tests - Verify the fix works should handle max_issues larger than available groups",
          "status": "passed",
          "title": "should handle max_issues larger than available groups",
          "duration": 0.27439199999997754,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueCreator - max_issues limit",
            "REFACTOR Tests - Ensure functionality is preserved"
          ],
          "fullName": "IssueCreator - max_issues limit REFACTOR Tests - Ensure functionality is preserved should still respect createIssues flag when false",
          "status": "passed",
          "title": "should still respect createIssues flag when false",
          "duration": 0.12014900000002626,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueCreator - max_issues limit",
            "REFACTOR Tests - Ensure functionality is preserved"
          ],
          "fullName": "IssueCreator - max_issues limit REFACTOR Tests - Ensure functionality is preserved should maintain issue creation order (highest severity first)",
          "status": "passed",
          "title": "should maintain issue creation order (highest severity first)",
          "duration": 0.22292199999998275,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueCreator - max_issues limit",
            "REFACTOR Tests - Ensure functionality is preserved"
          ],
          "fullName": "IssueCreator - max_issues limit REFACTOR Tests - Ensure functionality is preserved should log appropriate messages when limiting issues",
          "status": "passed",
          "title": "should log appropriate messages when limiting issues",
          "duration": 0.3172840000000292,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueCreator - max_issues limit",
            "REFACTOR Tests - Ensure functionality is preserved"
          ],
          "fullName": "IssueCreator - max_issues limit REFACTOR Tests - Ensure functionality is preserved should handle empty vulnerability groups array",
          "status": "passed",
          "title": "should handle empty vulnerability groups array",
          "duration": 0.12759499999998525,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueCreator - max_issues limit",
            "REFACTOR Tests - Ensure functionality is preserved"
          ],
          "fullName": "IssueCreator - max_issues limit REFACTOR Tests - Ensure functionality is preserved should continue creating issues even if one fails",
          "status": "failed",
          "title": "should continue creating issues even if one fails",
          "duration": 0.39468299999998635,
          "failureMessages": [
            "AssertionError: expected [ { number: 356, …(4) }, …(2) ] to have a length of 2 but got 3\n    at Proxy.<anonymous> (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/expect/dist/index.js:1257:20)\n    at Proxy.<anonymous> (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/expect/dist/index.js:1029:14)\n    at Proxy.methodWrapper (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/chai/index.js:1686:25)\n    at /home/dylan/dev/rsolv/RSOLV-action/src/scanner/__tests__/issue-creator-max-issues.test.ts:230:22\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"
          ],
          "meta": {}
        }
      ],
      "startTime": 1759803971567,
      "endTime": 1759803971572.3948,
      "status": "failed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/scanner/__tests__/issue-creator-max-issues.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "ComplianceGenerator",
            "OWASP Compliance Report"
          ],
          "fullName": "ComplianceGenerator OWASP Compliance Report should generate basic OWASP compliance report",
          "status": "passed",
          "title": "should generate basic OWASP compliance report",
          "duration": 0.3506199999999353,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ComplianceGenerator",
            "OWASP Compliance Report"
          ],
          "fullName": "ComplianceGenerator OWASP Compliance Report should categorize vulnerabilities by OWASP category",
          "status": "passed",
          "title": "should categorize vulnerabilities by OWASP category",
          "duration": 0.22154100000011567,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ComplianceGenerator",
            "OWASP Compliance Report"
          ],
          "fullName": "ComplianceGenerator OWASP Compliance Report should calculate compliance status based on severity",
          "status": "passed",
          "title": "should calculate compliance status based on severity",
          "duration": 0.11652299999991556,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ComplianceGenerator",
            "SOC 2 Compliance Report"
          ],
          "fullName": "ComplianceGenerator SOC 2 Compliance Report should generate SOC 2 compliance report",
          "status": "passed",
          "title": "should generate SOC 2 compliance report",
          "duration": 0.16006900000002133,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ComplianceGenerator",
            "Report Generation"
          ],
          "fullName": "ComplianceGenerator Report Generation should generate markdown compliance report",
          "status": "passed",
          "title": "should generate markdown compliance report",
          "duration": 0.17495900000017173,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ComplianceGenerator",
            "Report Generation"
          ],
          "fullName": "ComplianceGenerator Report Generation should handle empty vulnerability lists",
          "status": "passed",
          "title": "should handle empty vulnerability lists",
          "duration": 0.0928470000001198,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803972562,
      "endTime": 1759803972563.2214,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/security/__tests__/compliance.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "ThreeTierExplanationFramework",
            "Line-Level Explanations"
          ],
          "fullName": "ThreeTierExplanationFramework Line-Level Explanations should generate line-level explanation for SQL injection",
          "status": "passed",
          "title": "should generate line-level explanation for SQL injection",
          "duration": 0.36299999999999955,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ThreeTierExplanationFramework",
            "Line-Level Explanations"
          ],
          "fullName": "ThreeTierExplanationFramework Line-Level Explanations should generate line-level explanation for XSS",
          "status": "passed",
          "title": "should generate line-level explanation for XSS",
          "duration": 0.1274050000000102,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ThreeTierExplanationFramework",
            "Concept-Level Explanations"
          ],
          "fullName": "ThreeTierExplanationFramework Concept-Level Explanations should generate concept-level explanation for security concepts",
          "status": "passed",
          "title": "should generate concept-level explanation for security concepts",
          "duration": 0.36511500000000296,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ThreeTierExplanationFramework",
            "Concept-Level Explanations"
          ],
          "fullName": "ThreeTierExplanationFramework Concept-Level Explanations should include prevention methods and attack scenarios",
          "status": "passed",
          "title": "should include prevention methods and attack scenarios",
          "duration": 0.1379280000000449,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ThreeTierExplanationFramework",
            "Business-Level Explanations"
          ],
          "fullName": "ThreeTierExplanationFramework Business-Level Explanations should generate business-level explanation with impact analysis",
          "status": "passed",
          "title": "should generate business-level explanation with impact analysis",
          "duration": 0.4305010000000493,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ThreeTierExplanationFramework",
            "Business-Level Explanations"
          ],
          "fullName": "ThreeTierExplanationFramework Business-Level Explanations should calculate appropriate risk scores based on severity",
          "status": "passed",
          "title": "should calculate appropriate risk scores based on severity",
          "duration": 0.11940100000003895,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ThreeTierExplanationFramework",
            "Complete Three-Tier Explanation"
          ],
          "fullName": "ThreeTierExplanationFramework Complete Three-Tier Explanation should generate complete explanation with all three tiers",
          "status": "passed",
          "title": "should generate complete explanation with all three tiers",
          "duration": 0.384270000000015,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ThreeTierExplanationFramework",
            "Complete Three-Tier Explanation"
          ],
          "fullName": "ThreeTierExplanationFramework Complete Three-Tier Explanation should organize explanations by vulnerability type",
          "status": "passed",
          "title": "should organize explanations by vulnerability type",
          "duration": 0.2401879999999892,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ThreeTierExplanationFramework",
            "Output Formatting"
          ],
          "fullName": "ThreeTierExplanationFramework Output Formatting should format explanation as markdown",
          "status": "passed",
          "title": "should format explanation as markdown",
          "duration": 0.13138500000002296,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ThreeTierExplanationFramework",
            "Output Formatting"
          ],
          "fullName": "ThreeTierExplanationFramework Output Formatting should generate comprehensive markdown report",
          "status": "passed",
          "title": "should generate comprehensive markdown report",
          "duration": 8.472012999999947,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803971590,
      "endTime": 1759803971600.472,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/security/__tests__/explanation-framework.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "JiraAdapter",
            "authenticate"
          ],
          "fullName": "JiraAdapter authenticate should authenticate successfully with valid credentials",
          "status": "passed",
          "title": "should authenticate successfully with valid credentials",
          "duration": 0.7299230000000136,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "JiraAdapter",
            "authenticate"
          ],
          "fullName": "JiraAdapter authenticate should throw error on authentication failure",
          "status": "passed",
          "title": "should throw error on authentication failure",
          "duration": 0.7306080000000179,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "JiraAdapter",
            "searchIssues"
          ],
          "fullName": "JiraAdapter searchIssues should search issues with autofix label",
          "status": "passed",
          "title": "should search issues with autofix label",
          "duration": 0.8769739999999899,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "JiraAdapter",
            "searchIssues"
          ],
          "fullName": "JiraAdapter searchIssues should handle empty search results",
          "status": "passed",
          "title": "should handle empty search results",
          "duration": 0.2682880000000125,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "JiraAdapter",
            "createComment"
          ],
          "fullName": "JiraAdapter createComment should add comment to issue",
          "status": "passed",
          "title": "should add comment to issue",
          "duration": 0.4096330000000137,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "JiraAdapter",
            "addLink"
          ],
          "fullName": "JiraAdapter addLink should create remote link to GitHub PR",
          "status": "passed",
          "title": "should create remote link to GitHub PR",
          "duration": 0.3871220000000051,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "JiraAdapter",
            "updateIssueStatus"
          ],
          "fullName": "JiraAdapter updateIssueStatus should update issue status",
          "status": "passed",
          "title": "should update issue status",
          "duration": 0.3984800000000064,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803971424,
      "endTime": 1759803971428.3984,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/tests/platforms/jira/jira-adapter.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "GitBasedClaudeCodeAdapter Prompt Effectiveness",
            "RED Phase - Current Prompt Failures"
          ],
          "fullName": "GitBasedClaudeCodeAdapter Prompt Effectiveness RED Phase - Current Prompt Failures should fail when Claude only provides JSON without editing files",
          "status": "failed",
          "title": "should fail when Claude only provides JSON without editing files",
          "duration": 0.7711439999999925,
          "failureMessages": [
            "Error: generateSolution does not exist\n    at S (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/tinyspy/dist/index.js:4:11)\n    at Module.M (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/tinyspy/dist/index.js:121:3)\n    at Object.spyOn (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/spy/dist/index.js:21:24)\n    at /home/dylan/dev/rsolv/RSOLV-action/src/ai/adapters/__tests__/claude-code-git-prompt.test.ts:107:10\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "GitBasedClaudeCodeAdapter Prompt Effectiveness",
            "RED Phase - Current Prompt Failures"
          ],
          "fullName": "GitBasedClaudeCodeAdapter Prompt Effectiveness RED Phase - Current Prompt Failures should fail to create PR when files are not actually modified",
          "status": "passed",
          "title": "should fail to create PR when files are not actually modified",
          "duration": 3.599578000000008,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "GitBasedClaudeCodeAdapter Prompt Effectiveness",
            "GREEN Phase - Prompt Improvements"
          ],
          "fullName": "GitBasedClaudeCodeAdapter Prompt Effectiveness GREEN Phase - Prompt Improvements should successfully edit files when prompt explicitly requires Edit tool usage",
          "status": "failed",
          "title": "should successfully edit files when prompt explicitly requires Edit tool usage",
          "duration": 0.2740739999999846,
          "failureMessages": [
            "Error: generateSolution does not exist\n    at S (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/tinyspy/dist/index.js:4:11)\n    at Module.M (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/tinyspy/dist/index.js:121:3)\n    at Object.spyOn (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/spy/dist/index.js:21:24)\n    at /home/dylan/dev/rsolv/RSOLV-action/src/ai/adapters/__tests__/claude-code-git-prompt.test.ts:141:10\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "GitBasedClaudeCodeAdapter Prompt Effectiveness",
            "GREEN Phase - Prompt Improvements"
          ],
          "fullName": "GitBasedClaudeCodeAdapter Prompt Effectiveness GREEN Phase - Prompt Improvements should validate that both Edit tools AND JSON are used",
          "status": "failed",
          "title": "should validate that both Edit tools AND JSON are used",
          "duration": 0.2764890000000264,
          "failureMessages": [
            "Error: generateSolution does not exist\n    at S (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/tinyspy/dist/index.js:4:11)\n    at Module.M (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/tinyspy/dist/index.js:121:3)\n    at Object.spyOn (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/spy/dist/index.js:21:24)\n    at /home/dylan/dev/rsolv/RSOLV-action/src/ai/adapters/__tests__/claude-code-git-prompt.test.ts:173:10\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "GitBasedClaudeCodeAdapter Prompt Effectiveness",
            "REFACTOR Phase - Optimized Prompt"
          ],
          "fullName": "GitBasedClaudeCodeAdapter Prompt Effectiveness REFACTOR Phase - Optimized Prompt should use concise but effective prompt structure",
          "status": "failed",
          "title": "should use concise but effective prompt structure",
          "duration": 4.828957000000003,
          "failureMessages": [
            "AssertionError: expected 'object' to be 'string' // Object.is equality\n    at /home/dylan/dev/rsolv/RSOLV-action/src/ai/adapters/__tests__/claude-code-git-prompt.test.ts:217:29\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n    at runSuite (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "GitBasedClaudeCodeAdapter Prompt Effectiveness",
            "REFACTOR Phase - Optimized Prompt"
          ],
          "fullName": "GitBasedClaudeCodeAdapter Prompt Effectiveness REFACTOR Phase - Optimized Prompt should maintain backward compatibility with existing adapters",
          "status": "failed",
          "title": "should maintain backward compatibility with existing adapters",
          "duration": 0.5172599999999647,
          "failureMessages": [
            "AssertionError: expected GitBasedClaudeCodeAdapter{ …(5) } to have property \"generateSolution\"\n    at /home/dylan/dev/rsolv/RSOLV-action/src/ai/adapters/__tests__/claude-code-git-prompt.test.ts:228:23\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n    at runSuite (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)"
          ],
          "meta": {}
        }
      ],
      "startTime": 1759803971530,
      "endTime": 1759803971539.8289,
      "status": "failed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/adapters/__tests__/claude-code-git-prompt.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Git-based Issue Processor"
          ],
          "fullName": "Git-based Issue Processor should process issue successfully with git-based approach",
          "status": "passed",
          "title": "should process issue successfully with git-based approach",
          "duration": 1.7130980000001728,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Git-based Issue Processor"
          ],
          "fullName": "Git-based Issue Processor should fail if repository has uncommitted changes",
          "status": "passed",
          "title": "should fail if repository has uncommitted changes",
          "duration": 0.46089499999993677,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Git-based Issue Processor"
          ],
          "fullName": "Git-based Issue Processor should fail if issue cannot be fixed",
          "status": "passed",
          "title": "should fail if issue cannot be fixed",
          "duration": 0.23311100000000806,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Git-based Issue Processor"
          ],
          "fullName": "Git-based Issue Processor should use vended credentials when configured",
          "status": "passed",
          "title": "should use vended credentials when configured",
          "duration": 0.6598460000000159,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803972550,
      "endTime": 1759803972552.66,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/adapters/__tests__/git-based-processor.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "PhaseDataClient",
            "storePhaseResults"
          ],
          "fullName": "PhaseDataClient storePhaseResults should store phase results successfully",
          "status": "passed",
          "title": "should store phase results successfully",
          "duration": 4.866101999999984,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PhaseDataClient",
            "storePhaseResults"
          ],
          "fullName": "PhaseDataClient storePhaseResults should include API key in headers",
          "status": "passed",
          "title": "should include API key in headers",
          "duration": 0.7137850000000014,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PhaseDataClient",
            "storePhaseResults"
          ],
          "fullName": "PhaseDataClient storePhaseResults should fall back to local storage on API failure",
          "status": "passed",
          "title": "should fall back to local storage on API failure",
          "duration": 6.058312999999998,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PhaseDataClient",
            "retrievePhaseResults"
          ],
          "fullName": "PhaseDataClient retrievePhaseResults should retrieve phase results successfully",
          "status": "passed",
          "title": "should retrieve phase results successfully",
          "duration": 1.2382929999999988,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PhaseDataClient",
            "retrievePhaseResults"
          ],
          "fullName": "PhaseDataClient retrievePhaseResults should return null for 404 responses",
          "status": "passed",
          "title": "should return null for 404 responses",
          "duration": 0.42773800000000506,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PhaseDataClient",
            "retrievePhaseResults"
          ],
          "fullName": "PhaseDataClient retrievePhaseResults should fall back to local storage on API error",
          "status": "passed",
          "title": "should fall back to local storage on API error",
          "duration": 0.7307440000000156,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PhaseDataClient",
            "validatePhaseTransition"
          ],
          "fullName": "PhaseDataClient validatePhaseTransition should validate allowed phase transitions",
          "status": "passed",
          "title": "should validate allowed phase transitions",
          "duration": 0.37084600000000023,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PhaseDataClient",
            "validatePhaseTransition"
          ],
          "fullName": "PhaseDataClient validatePhaseTransition should reject transition if commit has changed",
          "status": "passed",
          "title": "should reject transition if commit has changed",
          "duration": 0.15101400000000353,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PhaseDataClient",
            "validatePhaseTransition"
          ],
          "fullName": "PhaseDataClient validatePhaseTransition should use GITHUB_SHA when git is not available (act/Docker scenario)",
          "status": "passed",
          "title": "should use GITHUB_SHA when git is not available (act/Docker scenario)",
          "duration": 0.14440000000001874,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PhaseDataClient",
            "validatePhaseTransition"
          ],
          "fullName": "PhaseDataClient validatePhaseTransition should fallback to dummy SHA when neither git nor GITHUB_SHA available",
          "status": "passed",
          "title": "should fallback to dummy SHA when neither git nor GITHUB_SHA available",
          "duration": 0.22462300000000823,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803971391,
      "endTime": 1759803971406.2246,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/modes/phase-data-client/__tests__/client.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "FileSelector",
            "selectFiles"
          ],
          "fullName": "FileSelector selectFiles should respect maxFiles limit",
          "status": "passed",
          "title": "should respect maxFiles limit",
          "duration": 3.411707999999976,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FileSelector",
            "selectFiles"
          ],
          "fullName": "FileSelector selectFiles should exclude default patterns",
          "status": "passed",
          "title": "should exclude default patterns",
          "duration": 0.9165659999999889,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FileSelector",
            "selectFiles"
          ],
          "fullName": "FileSelector selectFiles should filter by language when specified",
          "status": "passed",
          "title": "should filter by language when specified",
          "duration": 0.6578119999999785,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FileSelector",
            "selectFiles"
          ],
          "fullName": "FileSelector selectFiles should respect maxFileSize",
          "status": "passed",
          "title": "should respect maxFileSize",
          "duration": 0.4764369999999758,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FileSelector",
            "selectFiles"
          ],
          "fullName": "FileSelector selectFiles should prioritize changed files",
          "status": "passed",
          "title": "should prioritize changed files",
          "duration": 0.44740200000001096,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FileSelector",
            "selectFiles"
          ],
          "fullName": "FileSelector selectFiles should prioritize security-relevant files",
          "status": "passed",
          "title": "should prioritize security-relevant files",
          "duration": 0.3892120000000432,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FileSelector",
            "selectFiles"
          ],
          "fullName": "FileSelector selectFiles should deprioritize test files",
          "status": "passed",
          "title": "should deprioritize test files",
          "duration": 0.3737859999999955,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FileSelector",
            "selectFiles"
          ],
          "fullName": "FileSelector selectFiles should include all file metadata",
          "status": "passed",
          "title": "should include all file metadata",
          "duration": 0.32976500000000897,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FileSelector",
            "selectFiles"
          ],
          "fullName": "FileSelector selectFiles should handle custom exclude patterns",
          "status": "passed",
          "title": "should handle custom exclude patterns",
          "duration": 0.4214370000000258,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FileSelector",
            "selectFiles"
          ],
          "fullName": "FileSelector selectFiles should detect Elixir files",
          "status": "passed",
          "title": "should detect Elixir files",
          "duration": 0.23366400000003296,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FileSelector",
            "selectDiverseFiles"
          ],
          "fullName": "FileSelector selectDiverseFiles should select files from multiple languages",
          "status": "passed",
          "title": "should select files from multiple languages",
          "duration": 0.4793849999999793,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FileSelector",
            "selectDiverseFiles"
          ],
          "fullName": "FileSelector selectDiverseFiles should distribute slots evenly across languages",
          "status": "passed",
          "title": "should distribute slots evenly across languages",
          "duration": 0.3100780000000327,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803971463,
      "endTime": 1759803971471.4795,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/security/analyzers/__tests__/file-selector.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Server-Side AST Unit Tests - RED Phase",
            "Current Implementation Check"
          ],
          "fullName": "Server-Side AST Unit Tests - RED Phase Current Implementation Check should show that detector uses ASTPatternInterpreter (not ElixirASTAnalyzer)",
          "status": "passed",
          "title": "should show that detector uses ASTPatternInterpreter (not ElixirASTAnalyzer)",
          "duration": 0.41761399999995774,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Server-Side AST Unit Tests - RED Phase",
            "Current Implementation Check"
          ],
          "fullName": "Server-Side AST Unit Tests - RED Phase Current Implementation Check should show that ASTPatternInterpreter only supports JS/TS",
          "status": "passed",
          "title": "should show that ASTPatternInterpreter only supports JS/TS",
          "duration": 0.17162499999994907,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Server-Side AST Unit Tests - RED Phase",
            "Desired State - These should guide GREEN phase"
          ],
          "fullName": "Server-Side AST Unit Tests - RED Phase Desired State - These should guide GREEN phase detector should use ElixirASTAnalyzer for multi-language support",
          "status": "passed",
          "title": "detector should use ElixirASTAnalyzer for multi-language support",
          "duration": 0.09209000000009837,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Server-Side AST Unit Tests - RED Phase",
            "Memory Safety Check"
          ],
          "fullName": "Server-Side AST Unit Tests - RED Phase Memory Safety Check should not create detector in a way that causes memory issues",
          "status": "passed",
          "title": "should not create detector in a way that causes memory issues",
          "duration": 0.23934300000018993,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803979370,
      "endTime": 1759803979371.2393,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/test/server-ast-unit.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "PatternAPIClient - Tier Removal (TDD)",
            "Tier-less Pattern Access"
          ],
          "fullName": "PatternAPIClient - Tier Removal (TDD) Tier-less Pattern Access fetchPatterns should not include tier parameter in request",
          "status": "passed",
          "title": "fetchPatterns should not include tier parameter in request",
          "duration": 2.6218200000000706,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PatternAPIClient - Tier Removal (TDD)",
            "Tier-less Pattern Access"
          ],
          "fullName": "PatternAPIClient - Tier Removal (TDD) Tier-less Pattern Access fetchPatterns response should not contain tier fields",
          "status": "passed",
          "title": "fetchPatterns response should not contain tier fields",
          "duration": 2.39980300000002,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PatternAPIClient - Tier Removal (TDD)",
            "Tier-less Pattern Access"
          ],
          "fullName": "PatternAPIClient - Tier Removal (TDD) Tier-less Pattern Access fetchPatterns should return all patterns with valid API key",
          "status": "passed",
          "title": "fetchPatterns should return all patterns with valid API key",
          "duration": 1.229180999999926,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PatternAPIClient - Tier Removal (TDD)",
            "Tier-less Pattern Access"
          ],
          "fullName": "PatternAPIClient - Tier Removal (TDD) Tier-less Pattern Access fetchPatterns without API key should return demo patterns only",
          "status": "passed",
          "title": "fetchPatterns without API key should return demo patterns only",
          "duration": 1.840505000000121,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PatternAPIClient - Tier Removal (TDD)",
            "Tier-less Pattern Access"
          ],
          "fullName": "PatternAPIClient - Tier Removal (TDD) Tier-less Pattern Access deprecated fetchPatternsByTier should still work for backward compatibility",
          "status": "passed",
          "title": "deprecated fetchPatternsByTier should still work for backward compatibility",
          "duration": 1.2273740000000544,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PatternAPIClient - Tier Removal (TDD)",
            "Tier-less Pattern Access"
          ],
          "fullName": "PatternAPIClient - Tier Removal (TDD) Tier-less Pattern Access PatternResponse type should not require tier fields",
          "status": "passed",
          "title": "PatternResponse type should not require tier fields",
          "duration": 0.9629530000001978,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PatternAPIClient - Tier Removal (TDD)",
            "Tier-less Pattern Access"
          ],
          "fullName": "PatternAPIClient - Tier Removal (TDD) Tier-less Pattern Access error messages should not mention tiers",
          "status": "passed",
          "title": "error messages should not mention tiers",
          "duration": 3.5775120000000697,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PatternAPIClient - Tier Removal (TDD)",
            "Pattern counting without tiers"
          ],
          "fullName": "PatternAPIClient - Tier Removal (TDD) Pattern counting without tiers should return total pattern count across all languages",
          "status": "passed",
          "title": "should return total pattern count across all languages",
          "duration": 2.3130989999999656,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803978478,
      "endTime": 1759803978494.313,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/security/pattern-api-client-tier-removal.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Vended Credentials Environment Variable"
          ],
          "fullName": "Vended Credentials Environment Variable should verify environment variable is set when using vended credentials",
          "status": "passed",
          "title": "should verify environment variable is set when using vended credentials",
          "duration": 0.3703640000003361,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Vended Credentials Environment Variable"
          ],
          "fullName": "Vended Credentials Environment Variable should not set RSOLV_API_KEY when not using vended credentials",
          "status": "passed",
          "title": "should not set RSOLV_API_KEY when not using vended credentials",
          "duration": 0.2171889999999621,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Vended Credentials Environment Variable"
          ],
          "fullName": "Vended Credentials Environment Variable should not set RSOLV_API_KEY when rsolvApiKey is missing",
          "status": "passed",
          "title": "should not set RSOLV_API_KEY when rsolvApiKey is missing",
          "duration": 0.16798700000026656,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803979376,
      "endTime": 1759803979377.2173,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/test/ai/vended-credentials-env.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "API Endpoint Integration Tests",
            "Pattern API"
          ],
          "fullName": "API Endpoint Integration Tests Pattern API should fetch patterns from real API",
          "status": "skipped",
          "title": "should fetch patterns from real API",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "API Endpoint Integration Tests",
            "Pattern API"
          ],
          "fullName": "API Endpoint Integration Tests Pattern API should handle language-specific pattern requests",
          "status": "skipped",
          "title": "should handle language-specific pattern requests",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "API Endpoint Integration Tests",
            "Validation API"
          ],
          "fullName": "API Endpoint Integration Tests Validation API should validate vulnerabilities through real API",
          "status": "skipped",
          "title": "should validate vulnerabilities through real API",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "API Endpoint Integration Tests",
            "Credential Exchange API"
          ],
          "fullName": "API Endpoint Integration Tests Credential Exchange API should exchange credentials with real API",
          "status": "skipped",
          "title": "should exchange credentials with real API",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "API Endpoint Integration Tests",
            "Credential Exchange API"
          ],
          "fullName": "API Endpoint Integration Tests Credential Exchange API should handle credential refresh",
          "status": "skipped",
          "title": "should handle credential refresh",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "API Endpoint Integration Tests",
            "Fix Tracking API"
          ],
          "fullName": "API Endpoint Integration Tests Fix Tracking API should record fix attempts",
          "status": "skipped",
          "title": "should record fix attempts",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "API Error Handling"
          ],
          "fullName": "API Error Handling should handle rate limiting gracefully",
          "status": "skipped",
          "title": "should handle rate limiting gracefully",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "API Error Handling"
          ],
          "fullName": "API Error Handling should handle network errors with retry",
          "status": "skipped",
          "title": "should handle network errors with retry",
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803977042,
      "endTime": 1759803977042,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/test/integration/api-endpoints.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "GitHub Multi-Label Search"
          ],
          "fullName": "GitHub Multi-Label Search should search for both configured label and rsolv label",
          "status": "passed",
          "title": "should search for both configured label and rsolv label",
          "duration": 0.3416619999998147,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "GitHub Multi-Label Search"
          ],
          "fullName": "GitHub Multi-Label Search should deduplicate issues when they have multiple matching labels",
          "status": "passed",
          "title": "should deduplicate issues when they have multiple matching labels",
          "duration": 0.29749600000013743,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803979381,
      "endTime": 1759803979382.2976,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/tests/github/multi-label.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "XSS Pattern Detection"
          ],
          "fullName": "XSS Pattern Detection should detect XSS via document.write with string concatenation",
          "status": "passed",
          "title": "should detect XSS via document.write with string concatenation",
          "duration": 4.258404000000155,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "XSS Pattern Detection"
          ],
          "fullName": "XSS Pattern Detection should detect various XSS patterns",
          "status": "passed",
          "title": "should detect various XSS patterns",
          "duration": 0.608064000000013,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803979248,
      "endTime": 1759803979253.6082,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/tests/regression/xss-pattern-detection.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "SecurityAwareAnalyzer Integration"
          ],
          "fullName": "SecurityAwareAnalyzer Integration should return analysis with security vulnerabilities",
          "status": "passed",
          "title": "should return analysis with security vulnerabilities",
          "duration": 2.9857969999998204,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "SecurityAwareAnalyzer Integration"
          ],
          "fullName": "SecurityAwareAnalyzer Integration should handle case with no security issues",
          "status": "passed",
          "title": "should handle case with no security issues",
          "duration": 1.571740000000318,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "SecurityAwareAnalyzer Integration"
          ],
          "fullName": "SecurityAwareAnalyzer Integration should work without codebase files",
          "status": "passed",
          "title": "should work without codebase files",
          "duration": 1.0331530000003113,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803979316,
      "endTime": 1759803979322.0332,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/tests/security/security-analyzer-integration.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "AdaptiveTestGenerator",
            "Framework-Specific Test Generation"
          ],
          "fullName": "AdaptiveTestGenerator Framework-Specific Test Generation should generate Vitest tests with proper imports and syntax",
          "status": "passed",
          "title": "should generate Vitest tests with proper imports and syntax",
          "duration": 5.534446000000003,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AdaptiveTestGenerator",
            "Framework-Specific Test Generation"
          ],
          "fullName": "AdaptiveTestGenerator Framework-Specific Test Generation should generate Mocha + Chai tests with appropriate assertions",
          "status": "passed",
          "title": "should generate Mocha + Chai tests with appropriate assertions",
          "duration": 1.109123000000011,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AdaptiveTestGenerator",
            "Framework-Specific Test Generation"
          ],
          "fullName": "AdaptiveTestGenerator Framework-Specific Test Generation should generate pytest tests with Python conventions",
          "status": "passed",
          "title": "should generate pytest tests with Python conventions",
          "duration": 1.0424249999999802,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AdaptiveTestGenerator",
            "Framework-Specific Test Generation"
          ],
          "fullName": "AdaptiveTestGenerator Framework-Specific Test Generation should generate Minitest tests for Ruby with spec syntax",
          "status": "passed",
          "title": "should generate Minitest tests for Ruby with spec syntax",
          "duration": 0.7216300000000047,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AdaptiveTestGenerator",
            "Framework-Specific Test Generation"
          ],
          "fullName": "AdaptiveTestGenerator Framework-Specific Test Generation should generate ExUnit tests for Elixir with pattern matching",
          "status": "passed",
          "title": "should generate ExUnit tests for Elixir with pattern matching",
          "duration": 0.5171959999999558,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AdaptiveTestGenerator",
            "Framework-Specific Test Generation"
          ],
          "fullName": "AdaptiveTestGenerator Framework-Specific Test Generation should generate PHPUnit tests with proper annotations",
          "status": "passed",
          "title": "should generate PHPUnit tests with proper annotations",
          "duration": 0.7266129999999862,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AdaptiveTestGenerator",
            "Convention Detection and Matching"
          ],
          "fullName": "AdaptiveTestGenerator Convention Detection and Matching should detect BDD style (describe/it) vs TDD style (test)",
          "status": "passed",
          "title": "should detect BDD style (describe/it) vs TDD style (test)",
          "duration": 0.5751169999999775,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AdaptiveTestGenerator",
            "Convention Detection and Matching"
          ],
          "fullName": "AdaptiveTestGenerator Convention Detection and Matching should match assertion style (expect vs assert vs should)",
          "status": "passed",
          "title": "should match assertion style (expect vs assert vs should)",
          "duration": 0.48398599999995895,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AdaptiveTestGenerator",
            "Convention Detection and Matching"
          ],
          "fullName": "AdaptiveTestGenerator Convention Detection and Matching should follow file naming conventions",
          "status": "passed",
          "title": "should follow file naming conventions",
          "duration": 0.5491240000000062,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AdaptiveTestGenerator",
            "Convention Detection and Matching"
          ],
          "fullName": "AdaptiveTestGenerator Convention Detection and Matching should detect and use existing test utilities",
          "status": "passed",
          "title": "should detect and use existing test utilities",
          "duration": 0.4237370000000169,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AdaptiveTestGenerator",
            "Integration with Other Components"
          ],
          "fullName": "AdaptiveTestGenerator Integration with Other Components should use CoverageAnalyzer to avoid duplicate tests",
          "status": "passed",
          "title": "should use CoverageAnalyzer to avoid duplicate tests",
          "duration": 0.5528260000000387,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AdaptiveTestGenerator",
            "Integration with Other Components"
          ],
          "fullName": "AdaptiveTestGenerator Integration with Other Components should use IssueInterpreter to understand vulnerability context",
          "status": "passed",
          "title": "should use IssueInterpreter to understand vulnerability context",
          "duration": 3.1832579999999666,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AdaptiveTestGenerator",
            "Integration with Other Components"
          ],
          "fullName": "AdaptiveTestGenerator Integration with Other Components should integrate with existing VulnerabilityTestGenerator",
          "status": "passed",
          "title": "should integrate with existing VulnerabilityTestGenerator",
          "duration": 0.3699310000000082,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AdaptiveTestGenerator",
            "Edge Cases and Error Handling"
          ],
          "fullName": "AdaptiveTestGenerator Edge Cases and Error Handling should handle unknown test frameworks gracefully",
          "status": "passed",
          "title": "should handle unknown test frameworks gracefully",
          "duration": 0.3011900000000196,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AdaptiveTestGenerator",
            "Edge Cases and Error Handling"
          ],
          "fullName": "AdaptiveTestGenerator Edge Cases and Error Handling should handle missing coverage data",
          "status": "passed",
          "title": "should handle missing coverage data",
          "duration": 0.25021199999997634,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AdaptiveTestGenerator",
            "Edge Cases and Error Handling"
          ],
          "fullName": "AdaptiveTestGenerator Edge Cases and Error Handling should handle multi-language repositories",
          "status": "passed",
          "title": "should handle multi-language repositories",
          "duration": 0.31636899999995194,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803977346,
      "endTime": 1759803977362.3164,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/adaptive-test-generator.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Fix Iteration Core Functionality",
            "getMaxIterations configuration hierarchy"
          ],
          "fullName": "Fix Iteration Core Functionality getMaxIterations configuration hierarchy should use issue label override when present",
          "status": "passed",
          "title": "should use issue label override when present",
          "duration": 0.20922999999993408,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Fix Iteration Core Functionality",
            "getMaxIterations configuration hierarchy"
          ],
          "fullName": "Fix Iteration Core Functionality getMaxIterations configuration hierarchy should use vulnerability type specific config",
          "status": "passed",
          "title": "should use vulnerability type specific config",
          "duration": 0.09210600000005797,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Fix Iteration Core Functionality",
            "getMaxIterations configuration hierarchy"
          ],
          "fullName": "Fix Iteration Core Functionality getMaxIterations configuration hierarchy should use customer tier config when no specific override",
          "status": "passed",
          "title": "should use customer tier config when no specific override",
          "duration": 0.08686299999999392,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Fix Iteration Core Functionality",
            "getMaxIterations configuration hierarchy"
          ],
          "fullName": "Fix Iteration Core Functionality getMaxIterations configuration hierarchy should use default when no specific config matches",
          "status": "passed",
          "title": "should use default when no specific config matches",
          "duration": 0.06678699999997662,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Fix Iteration Core Functionality",
            "getMaxIterations configuration hierarchy"
          ],
          "fullName": "Fix Iteration Core Functionality getMaxIterations configuration hierarchy should handle missing maxIterations config",
          "status": "passed",
          "title": "should handle missing maxIterations config",
          "duration": 0.06928900000002614,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Fix Iteration Core Functionality",
            "Fix iteration flow simulation"
          ],
          "fullName": "Fix Iteration Core Functionality Fix iteration flow simulation should simulate successful fix after multiple attempts",
          "status": "passed",
          "title": "should simulate successful fix after multiple attempts",
          "duration": 0.11508500000013555,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Fix Iteration Core Functionality",
            "Fix iteration flow simulation"
          ],
          "fullName": "Fix Iteration Core Functionality Fix iteration flow simulation should fail after max attempts exceeded",
          "status": "passed",
          "title": "should fail after max attempts exceeded",
          "duration": 0.08720100000005004,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Fix Iteration Core Functionality",
            "Test validation feedback integration"
          ],
          "fullName": "Fix Iteration Core Functionality Test validation feedback integration should include test failure context in retry prompt",
          "status": "passed",
          "title": "should include test failure context in retry prompt",
          "duration": 0.11459500000000844,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Fix Iteration Core Functionality",
            "Language-specific fix patterns"
          ],
          "fullName": "Fix Iteration Core Functionality Language-specific fix patterns Java SQL injection fix patterns",
          "status": "passed",
          "title": "Java SQL injection fix patterns",
          "duration": 0.12634700000012344,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Fix Iteration Core Functionality",
            "Language-specific fix patterns"
          ],
          "fullName": "Fix Iteration Core Functionality Language-specific fix patterns PHP SQL injection fix patterns",
          "status": "passed",
          "title": "PHP SQL injection fix patterns",
          "duration": 0.10783500000002277,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Fix Iteration Core Functionality",
            "Language-specific fix patterns"
          ],
          "fullName": "Fix Iteration Core Functionality Language-specific fix patterns PDO fix patterns for PHP",
          "status": "passed",
          "title": "PDO fix patterns for PHP",
          "duration": 0.09688499999992928,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803978464,
      "endTime": 1759803978465.1265,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/fix-iteration-core.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "processIssueWithGit - Characterization Tests",
            "Phase 1: Git State Check"
          ],
          "fullName": "processIssueWithGit - Characterization Tests Phase 1: Git State Check should fail if repository has uncommitted changes",
          "status": "failed",
          "title": "should fail if repository has uncommitted changes",
          "duration": 4.899591999999984,
          "failureMessages": [
            "AssertionError: expected { issueId: 'github-123', …(3) } to deeply equal { issueId: 'github-123', …(3) }\n    at /home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/git-based-processor-characterization.test.ts:297:22\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "processIssueWithGit - Characterization Tests",
            "Phase 1: Git State Check"
          ],
          "fullName": "processIssueWithGit - Characterization Tests Phase 1: Git State Check should proceed with clean git state",
          "status": "passed",
          "title": "should proceed with clean git state",
          "duration": 0.1729349999999954,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "processIssueWithGit - Characterization Tests",
            "Phase 2: Issue Analysis"
          ],
          "fullName": "processIssueWithGit - Characterization Tests Phase 2: Issue Analysis should stop if issue cannot be fixed",
          "status": "passed",
          "title": "should stop if issue cannot be fixed",
          "duration": 0.30124000000000706,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "processIssueWithGit - Characterization Tests",
            "Phase 2: Issue Analysis"
          ],
          "fullName": "processIssueWithGit - Characterization Tests Phase 2: Issue Analysis should proceed to test generation if issue can be fixed",
          "status": "passed",
          "title": "should proceed to test generation if issue can be fixed",
          "duration": 4.148539999999969,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "processIssueWithGit - Characterization Tests",
            "Phase 3: Test Generation"
          ],
          "fullName": "processIssueWithGit - Characterization Tests Phase 3: Test Generation should generate tests when test generation is enabled",
          "status": "passed",
          "title": "should generate tests when test generation is enabled",
          "duration": 0.35553600000002916,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "processIssueWithGit - Characterization Tests",
            "Phase 3: Test Generation"
          ],
          "fullName": "processIssueWithGit - Characterization Tests Phase 3: Test Generation should skip test generation when disabled",
          "status": "passed",
          "title": "should skip test generation when disabled",
          "duration": 0.1348090000000184,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "processIssueWithGit - Characterization Tests",
            "Phase 4: Fix Validation Loop"
          ],
          "fullName": "processIssueWithGit - Characterization Tests Phase 4: Fix Validation Loop should validate fix when validation is enabled",
          "status": "passed",
          "title": "should validate fix when validation is enabled",
          "duration": 0.22070600000000695,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "processIssueWithGit - Characterization Tests",
            "Phase 4: Fix Validation Loop"
          ],
          "fullName": "processIssueWithGit - Characterization Tests Phase 4: Fix Validation Loop should retry fix when validation fails",
          "status": "passed",
          "title": "should retry fix when validation fails",
          "duration": 0.3505869999999618,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "processIssueWithGit - Characterization Tests",
            "Phase 4: Fix Validation Loop"
          ],
          "fullName": "processIssueWithGit - Characterization Tests Phase 4: Fix Validation Loop should fail after max iterations",
          "status": "passed",
          "title": "should fail after max iterations",
          "duration": 0.24079299999999648,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "processIssueWithGit - Characterization Tests",
            "Phase 5: PR Creation"
          ],
          "fullName": "processIssueWithGit - Characterization Tests Phase 5: PR Creation should create educational PR by default",
          "status": "passed",
          "title": "should create educational PR by default",
          "duration": 0.46556400000002895,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "processIssueWithGit - Characterization Tests",
            "Phase 5: PR Creation"
          ],
          "fullName": "processIssueWithGit - Characterization Tests Phase 5: PR Creation should use regular PR when educational is disabled",
          "status": "passed",
          "title": "should use regular PR when educational is disabled",
          "duration": 0.2859139999999911,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "processIssueWithGit - Characterization Tests",
            "Phase 5: PR Creation"
          ],
          "fullName": "processIssueWithGit - Characterization Tests Phase 5: PR Creation should rollback commit if PR creation fails",
          "status": "passed",
          "title": "should rollback commit if PR creation fails",
          "duration": 0.24356600000004391,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "processIssueWithGit - Characterization Tests",
            "Error Handling"
          ],
          "fullName": "processIssueWithGit - Characterization Tests Error Handling should handle and rollback on unexpected errors",
          "status": "passed",
          "title": "should handle and rollback on unexpected errors",
          "duration": 0.21849900000000844,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "processIssueWithGit - Characterization Tests",
            "Error Handling"
          ],
          "fullName": "processIssueWithGit - Characterization Tests Error Handling should handle git command failures gracefully",
          "status": "failed",
          "title": "should handle git command failures gracefully",
          "duration": 0.8945320000000265,
          "failureMessages": [
            "AssertionError: expected 'Repository has uncommitted changes th…' to be 'Repository has uncommitted changes' // Object.is equality\n    at /home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/git-based-processor-characterization.test.ts:577:30\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "processIssueWithGit - Characterization Tests",
            "getMaxIterations"
          ],
          "fullName": "processIssueWithGit - Characterization Tests getMaxIterations should use issue label override first",
          "status": "passed",
          "title": "should use issue label override first",
          "duration": 0.1188380000000393,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "processIssueWithGit - Characterization Tests",
            "getMaxIterations"
          ],
          "fullName": "processIssueWithGit - Characterization Tests getMaxIterations should use global config if no label override",
          "status": "passed",
          "title": "should use global config if no label override",
          "duration": 0.06359999999995125,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "processIssueWithGit - Characterization Tests",
            "getMaxIterations"
          ],
          "fullName": "processIssueWithGit - Characterization Tests getMaxIterations should use default if no config",
          "status": "passed",
          "title": "should use default if no config",
          "duration": 0.07064900000000307,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "processIssueWithGit - Characterization Tests",
            "getMaxIterations"
          ],
          "fullName": "processIssueWithGit - Characterization Tests getMaxIterations should handle vulnerability type specific config",
          "status": "passed",
          "title": "should handle vulnerability type specific config",
          "duration": 0.0850430000000415,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803977408,
      "endTime": 1759803977422.119,
      "status": "failed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/git-based-processor-characterization.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "processIssueWithGit - Simple Characterization"
          ],
          "fullName": "processIssueWithGit - Simple Characterization processIssueWithGit function exists and has correct signature",
          "status": "passed",
          "title": "processIssueWithGit function exists and has correct signature",
          "duration": 0.2909669999999096,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "processIssueWithGit - Simple Characterization"
          ],
          "fullName": "processIssueWithGit - Simple Characterization getMaxIterations function exists and returns expected defaults",
          "status": "passed",
          "title": "getMaxIterations function exists and returns expected defaults",
          "duration": 0.1610489999998208,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "processIssueWithGit - Simple Characterization"
          ],
          "fullName": "processIssueWithGit - Simple Characterization getMaxIterations respects label overrides",
          "status": "passed",
          "title": "getMaxIterations respects label overrides",
          "duration": 0.10017700000025798,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "processIssueWithGit - Simple Characterization"
          ],
          "fullName": "processIssueWithGit - Simple Characterization getMaxIterations uses config when no label override",
          "status": "passed",
          "title": "getMaxIterations uses config when no label override",
          "duration": 0.09734700000035446,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "processIssueWithGit - Simple Characterization"
          ],
          "fullName": "processIssueWithGit - Simple Characterization processIssueWithGit returns expected result shape",
          "status": "passed",
          "title": "processIssueWithGit returns expected result shape",
          "duration": 0.07219599999962156,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803979364,
      "endTime": 1759803979364.291,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/git-based-processor-simple-characterization.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Security Prompts",
            "buildSecuritySolutionPrompt"
          ],
          "fullName": "Security Prompts buildSecuritySolutionPrompt should include security analysis results",
          "status": "passed",
          "title": "should include security analysis results",
          "duration": 0.2512820000000602,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Security Prompts",
            "buildSecuritySolutionPrompt"
          ],
          "fullName": "Security Prompts buildSecuritySolutionPrompt should include vulnerability details",
          "status": "passed",
          "title": "should include vulnerability details",
          "duration": 0.10496100000000297,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Security Prompts",
            "buildSecuritySolutionPrompt"
          ],
          "fullName": "Security Prompts buildSecuritySolutionPrompt should include security recommendations",
          "status": "passed",
          "title": "should include security recommendations",
          "duration": 0.07417399999997087,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Security Prompts",
            "buildSecuritySolutionPrompt"
          ],
          "fullName": "Security Prompts buildSecuritySolutionPrompt should include security fix templates",
          "status": "passed",
          "title": "should include security fix templates",
          "duration": 0.17236100000002352,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Security Prompts",
            "buildSecuritySolutionPrompt"
          ],
          "fullName": "Security Prompts buildSecuritySolutionPrompt should mark affected files",
          "status": "passed",
          "title": "should mark affected files",
          "duration": 0.057080000000041764,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Security Prompts",
            "buildSecuritySolutionPrompt"
          ],
          "fullName": "Security Prompts buildSecuritySolutionPrompt should include security requirements",
          "status": "passed",
          "title": "should include security requirements",
          "duration": 0.0629950000000008,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Security Prompts",
            "buildSecurityExplanationPrompt"
          ],
          "fullName": "Security Prompts buildSecurityExplanationPrompt should include three-tier explanation structure",
          "status": "passed",
          "title": "should include three-tier explanation structure",
          "duration": 0.07864699999993263,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Security Prompts",
            "buildSecurityExplanationPrompt"
          ],
          "fullName": "Security Prompts buildSecurityExplanationPrompt should include vulnerability details",
          "status": "passed",
          "title": "should include vulnerability details",
          "duration": 0.052151999999978216,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Security Prompts",
            "buildSecurityExplanationPrompt"
          ],
          "fullName": "Security Prompts buildSecurityExplanationPrompt should include fixes implemented",
          "status": "passed",
          "title": "should include fixes implemented",
          "duration": 0.04649000000006254,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Security Prompts",
            "buildSecurityExplanationPrompt"
          ],
          "fullName": "Security Prompts buildSecurityExplanationPrompt should include specific tier requirements",
          "status": "passed",
          "title": "should include specific tier requirements",
          "duration": 0.05546800000001895,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Security Prompts",
            "buildSecurityPrDescriptionPrompt"
          ],
          "fullName": "Security Prompts buildSecurityPrDescriptionPrompt should include security impact summary",
          "status": "passed",
          "title": "should include security impact summary",
          "duration": 0.10122999999998683,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Security Prompts",
            "buildSecurityPrDescriptionPrompt"
          ],
          "fullName": "Security Prompts buildSecurityPrDescriptionPrompt should include vulnerability details",
          "status": "passed",
          "title": "should include vulnerability details",
          "duration": 0.05339600000002065,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Security Prompts",
            "buildSecurityPrDescriptionPrompt"
          ],
          "fullName": "Security Prompts buildSecurityPrDescriptionPrompt should include PR description structure",
          "status": "passed",
          "title": "should include PR description structure",
          "duration": 0.07196800000008352,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Security Prompts",
            "buildSecurityPrDescriptionPrompt"
          ],
          "fullName": "Security Prompts buildSecurityPrDescriptionPrompt should emphasize critical nature",
          "status": "passed",
          "title": "should emphasize critical nature",
          "duration": 0.05040499999995518,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Security Prompts",
            "Edge Cases"
          ],
          "fullName": "Security Prompts Edge Cases should handle empty vulnerabilities",
          "status": "passed",
          "title": "should handle empty vulnerabilities",
          "duration": 0.052920999999969354,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Security Prompts",
            "Edge Cases"
          ],
          "fullName": "Security Prompts Edge Cases should handle single vulnerability type",
          "status": "passed",
          "title": "should handle single vulnerability type",
          "duration": 0.058515999999940504,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803977568,
      "endTime": 1759803977569.1013,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/security-prompts.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "TestFrameworkDetector (TDD - Red Phase)",
            "JavaScript/TypeScript Framework Detection"
          ],
          "fullName": "TestFrameworkDetector (TDD - Red Phase) JavaScript/TypeScript Framework Detection should detect Jest from package.json",
          "status": "passed",
          "title": "should detect Jest from package.json",
          "duration": 0.8043210000000158,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TestFrameworkDetector (TDD - Red Phase)",
            "JavaScript/TypeScript Framework Detection"
          ],
          "fullName": "TestFrameworkDetector (TDD - Red Phase) JavaScript/TypeScript Framework Detection should detect Vitest from package.json",
          "status": "passed",
          "title": "should detect Vitest from package.json",
          "duration": 0.25408500000003187,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TestFrameworkDetector (TDD - Red Phase)",
            "JavaScript/TypeScript Framework Detection"
          ],
          "fullName": "TestFrameworkDetector (TDD - Red Phase) JavaScript/TypeScript Framework Detection should detect Mocha with Chai",
          "status": "passed",
          "title": "should detect Mocha with Chai",
          "duration": 0.23914300000001276,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TestFrameworkDetector (TDD - Red Phase)",
            "JavaScript/TypeScript Framework Detection"
          ],
          "fullName": "TestFrameworkDetector (TDD - Red Phase) JavaScript/TypeScript Framework Detection should detect Cypress for E2E testing",
          "status": "passed",
          "title": "should detect Cypress for E2E testing",
          "duration": 0.2265740000000278,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TestFrameworkDetector (TDD - Red Phase)",
            "JavaScript/TypeScript Framework Detection"
          ],
          "fullName": "TestFrameworkDetector (TDD - Red Phase) JavaScript/TypeScript Framework Detection should detect multiple frameworks in one project",
          "status": "passed",
          "title": "should detect multiple frameworks in one project",
          "duration": 0.7563910000000078,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TestFrameworkDetector (TDD - Red Phase)",
            "Python Framework Detection"
          ],
          "fullName": "TestFrameworkDetector (TDD - Red Phase) Python Framework Detection should detect pytest from requirements.txt",
          "status": "passed",
          "title": "should detect pytest from requirements.txt",
          "duration": 0.3459829999999897,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TestFrameworkDetector (TDD - Red Phase)",
            "Python Framework Detection"
          ],
          "fullName": "TestFrameworkDetector (TDD - Red Phase) Python Framework Detection should detect unittest from import statements",
          "status": "passed",
          "title": "should detect unittest from import statements",
          "duration": 0.19596200000000863,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TestFrameworkDetector (TDD - Red Phase)",
            "Ruby Framework Detection"
          ],
          "fullName": "TestFrameworkDetector (TDD - Red Phase) Ruby Framework Detection should detect RSpec from Gemfile",
          "status": "passed",
          "title": "should detect RSpec from Gemfile",
          "duration": 0.41441199999997025,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TestFrameworkDetector (TDD - Red Phase)",
            "Ruby Framework Detection"
          ],
          "fullName": "TestFrameworkDetector (TDD - Red Phase) Ruby Framework Detection should detect Minitest from Gemfile",
          "status": "passed",
          "title": "should detect Minitest from Gemfile",
          "duration": 0.24715699999995877,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TestFrameworkDetector (TDD - Red Phase)",
            "Test File Pattern Detection"
          ],
          "fullName": "TestFrameworkDetector (TDD - Red Phase) Test File Pattern Detection should detect Jest from test file patterns",
          "status": "passed",
          "title": "should detect Jest from test file patterns",
          "duration": 0.20430199999998422,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TestFrameworkDetector (TDD - Red Phase)",
            "Test File Pattern Detection"
          ],
          "fullName": "TestFrameworkDetector (TDD - Red Phase) Test File Pattern Detection should detect RSpec from spec directory structure",
          "status": "passed",
          "title": "should detect RSpec from spec directory structure",
          "duration": 0.1326869999999758,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TestFrameworkDetector (TDD - Red Phase)",
            "Configuration File Detection"
          ],
          "fullName": "TestFrameworkDetector (TDD - Red Phase) Configuration File Detection should detect from vi.config.js",
          "status": "passed",
          "title": "should detect from vi.config.js",
          "duration": 0.1594100000000367,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TestFrameworkDetector (TDD - Red Phase)",
            "Configuration File Detection"
          ],
          "fullName": "TestFrameworkDetector (TDD - Red Phase) Configuration File Detection should detect from vitest.config.ts",
          "status": "passed",
          "title": "should detect from vitest.config.ts",
          "duration": 0.10861199999999371,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TestFrameworkDetector (TDD - Red Phase)",
            "Comprehensive Detection"
          ],
          "fullName": "TestFrameworkDetector (TDD - Red Phase) Comprehensive Detection should detect frameworks from repository path",
          "status": "passed",
          "title": "should detect frameworks from repository path",
          "duration": 0.49512999999996055,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TestFrameworkDetector (TDD - Red Phase)",
            "Comprehensive Detection"
          ],
          "fullName": "TestFrameworkDetector (TDD - Red Phase) Comprehensive Detection should handle missing configuration files gracefully",
          "status": "passed",
          "title": "should handle missing configuration files gracefully",
          "duration": 0.17976300000003675,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TestFrameworkDetector (TDD - Red Phase)",
            "Comprehensive Detection"
          ],
          "fullName": "TestFrameworkDetector (TDD - Red Phase) Comprehensive Detection should assign confidence scores based on detection method",
          "status": "passed",
          "title": "should assign confidence scores based on detection method",
          "duration": 0.09167700000000423,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TestFrameworkDetector (TDD - Red Phase)",
            "Framework Version Detection"
          ],
          "fullName": "TestFrameworkDetector (TDD - Red Phase) Framework Version Detection should extract exact version from package.json",
          "status": "passed",
          "title": "should extract exact version from package.json",
          "duration": 0.09445100000004913,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TestFrameworkDetector (TDD - Red Phase)",
            "Framework Version Detection"
          ],
          "fullName": "TestFrameworkDetector (TDD - Red Phase) Framework Version Detection should handle version ranges",
          "status": "passed",
          "title": "should handle version ranges",
          "duration": 0.1593159999999898,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TestFrameworkDetector Integration"
          ],
          "fullName": "TestFrameworkDetector Integration should integrate with test generator",
          "status": "passed",
          "title": "should integrate with test generator",
          "duration": 0.21767299999999068,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803977432,
      "endTime": 1759803977438.2178,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/test-framework-detector.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Config Timeout Settings"
          ],
          "fullName": "Config Timeout Settings should have default timeout configurations",
          "status": "passed",
          "title": "should have default timeout configurations",
          "duration": 1.6222889999999097,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Config Timeout Settings"
          ],
          "fullName": "Config Timeout Settings should load timeout from environment variables",
          "status": "passed",
          "title": "should load timeout from environment variables",
          "duration": 0.5285930000000008,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Config Timeout Settings"
          ],
          "fullName": "Config Timeout Settings should load timeout from config file",
          "status": "passed",
          "title": "should load timeout from config file",
          "duration": 2.1561980000001313,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Config Timeout Settings"
          ],
          "fullName": "Config Timeout Settings should merge timeouts with priority: env > file > default",
          "status": "passed",
          "title": "should merge timeouts with priority: env > file > default",
          "duration": 0.5753580000000511,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Config Timeout Settings"
          ],
          "fullName": "Config Timeout Settings should validate timeout values are numbers",
          "status": "passed",
          "title": "should validate timeout values are numbers",
          "duration": 0.39129800000000614,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Config Timeout Settings"
          ],
          "fullName": "Config Timeout Settings should handle missing timeout properties gracefully",
          "status": "passed",
          "title": "should handle missing timeout properties gracefully",
          "duration": 0.5064560000000711,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Config Timeout Settings"
          ],
          "fullName": "Config Timeout Settings should ensure AI provider timeout is reasonable",
          "status": "passed",
          "title": "should ensure AI provider timeout is reasonable",
          "duration": 0.40401799999972354,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803979282,
      "endTime": 1759803979288.404,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/config/__tests__/timeout.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "ModeSelector",
            "getModeConfig"
          ],
          "fullName": "ModeSelector getModeConfig should require RSOLV_MODE environment variable",
          "status": "passed",
          "title": "should require RSOLV_MODE environment variable",
          "duration": 1.1451499999998305,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ModeSelector",
            "getModeConfig"
          ],
          "fullName": "ModeSelector getModeConfig should recognize scan mode from RSOLV_MODE",
          "status": "passed",
          "title": "should recognize scan mode from RSOLV_MODE",
          "duration": 0.43987700000002405,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ModeSelector",
            "getModeConfig"
          ],
          "fullName": "ModeSelector getModeConfig should recognize validate mode",
          "status": "passed",
          "title": "should recognize validate mode",
          "duration": 0.2353729999999814,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ModeSelector",
            "getModeConfig"
          ],
          "fullName": "ModeSelector getModeConfig should recognize mitigate mode",
          "status": "passed",
          "title": "should recognize mitigate mode",
          "duration": 0.2000869999999395,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ModeSelector",
            "getModeConfig"
          ],
          "fullName": "ModeSelector getModeConfig should recognize full mode",
          "status": "passed",
          "title": "should recognize full mode",
          "duration": 0.18636800000012954,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ModeSelector",
            "getModeConfig"
          ],
          "fullName": "ModeSelector getModeConfig should handle batch validation with multiple issue IDs",
          "status": "passed",
          "title": "should handle batch validation with multiple issue IDs",
          "duration": 0.23214299999995092,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ModeSelector",
            "getModeConfig"
          ],
          "fullName": "ModeSelector getModeConfig should respect max issues limit",
          "status": "passed",
          "title": "should respect max issues limit",
          "duration": 0.19982000000004518,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ModeSelector",
            "getModeConfig"
          ],
          "fullName": "ModeSelector getModeConfig should handle skip cache flag",
          "status": "passed",
          "title": "should handle skip cache flag",
          "duration": 0.19594499999993786,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ModeSelector",
            "getModeConfig"
          ],
          "fullName": "ModeSelector getModeConfig should throw error when validate mode lacks issue ID",
          "status": "passed",
          "title": "should throw error when validate mode lacks issue ID",
          "duration": 0.29207799999994677,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ModeSelector",
            "getModeConfig"
          ],
          "fullName": "ModeSelector getModeConfig should throw error when mitigate mode lacks issue ID",
          "status": "passed",
          "title": "should throw error when mitigate mode lacks issue ID",
          "duration": 0.2162270000001172,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ModeSelector",
            "getModeConfig"
          ],
          "fullName": "ModeSelector getModeConfig should throw error when both single and multiple issue IDs are provided",
          "status": "passed",
          "title": "should throw error when both single and multiple issue IDs are provided",
          "duration": 0.21670100000005732,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ModeSelector",
            "getModeConfig"
          ],
          "fullName": "ModeSelector getModeConfig should throw error when fix mode lacks issue ID",
          "status": "passed",
          "title": "should throw error when fix mode lacks issue ID",
          "duration": 0.2003509999999551,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ModeSelector",
            "normalizeMode"
          ],
          "fullName": "ModeSelector normalizeMode should normalize mode aliases",
          "status": "passed",
          "title": "should normalize mode aliases",
          "duration": 0.45373899999981404,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ModeSelector",
            "normalizeMode"
          ],
          "fullName": "ModeSelector normalizeMode should throw error for unknown modes",
          "status": "passed",
          "title": "should throw error for unknown modes",
          "duration": 0.24838299999987612,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ModeSelector",
            "getModeDescription"
          ],
          "fullName": "ModeSelector getModeDescription should return appropriate descriptions for each mode",
          "status": "passed",
          "title": "should return appropriate descriptions for each mode",
          "duration": 0.22246799999993527,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ModeSelector",
            "mode requirements"
          ],
          "fullName": "ModeSelector mode requirements should identify which modes require AI",
          "status": "passed",
          "title": "should identify which modes require AI",
          "duration": 0.19958100000008017,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ModeSelector",
            "mode requirements"
          ],
          "fullName": "ModeSelector mode requirements should identify which modes require test generation",
          "status": "passed",
          "title": "should identify which modes require test generation",
          "duration": 0.20928200000003017,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ModeSelector",
            "mode requirements"
          ],
          "fullName": "ModeSelector mode requirements should identify which modes require fix generation",
          "status": "passed",
          "title": "should identify which modes require fix generation",
          "duration": 0.19405799999981355,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803978380,
      "endTime": 1759803978386.2092,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/modes/__tests__/mode-selector.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "ValidationMode - Test Commit in Test Mode",
            "in test mode"
          ],
          "fullName": "ValidationMode - Test Commit in Test Mode in test mode should always attempt to commit tests even if branch creation initially fails",
          "status": "passed",
          "title": "should always attempt to commit tests even if branch creation initially fails",
          "duration": 1.348145999999815,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ValidationMode - Test Commit in Test Mode",
            "in test mode"
          ],
          "fullName": "ValidationMode - Test Commit in Test Mode in test mode should force commit tests in test mode even if tests are imperfect",
          "status": "passed",
          "title": "should force commit tests in test mode even if tests are imperfect",
          "duration": 0.6709230000001298,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ValidationMode - Test Commit in Test Mode",
            "in test mode"
          ],
          "fullName": "ValidationMode - Test Commit in Test Mode in test mode should handle test commit even when git push fails",
          "status": "passed",
          "title": "should handle test commit even when git push fails",
          "duration": 0.47891500000014275,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ValidationMode - Test Commit in Test Mode",
            "validateIssue in test mode"
          ],
          "fullName": "ValidationMode - Test Commit in Test Mode validateIssue in test mode should ensure test commits happen in test mode regardless of test quality",
          "status": "failed",
          "title": "should ensure test commits happen in test mode regardless of test quality",
          "duration": 0.5931569999997919,
          "failureMessages": [
            "Error: analyzeCodebase does not exist\n    at S (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/tinyspy/dist/index.js:4:11)\n    at Module.M (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/tinyspy/dist/index.js:121:3)\n    at Object.spyOn (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/spy/dist/index.js:21:24)\n    at /home/dylan/dev/rsolv/RSOLV-action/src/modes/__tests__/validation-test-commit.test.ts:143:10\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)"
          ],
          "meta": {}
        }
      ],
      "startTime": 1759803979338,
      "endTime": 1759803979340.5933,
      "status": "failed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/modes/__tests__/validation-test-commit.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Vendor Detection Regression Tests (RFC-047)"
          ],
          "fullName": "Vendor Detection Regression Tests (RFC-047) should handle vulnerabilities with singular \"file\" property",
          "status": "passed",
          "title": "should handle vulnerabilities with singular \"file\" property",
          "duration": 66.4941809999998,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Vendor Detection Regression Tests (RFC-047)"
          ],
          "fullName": "Vendor Detection Regression Tests (RFC-047) should handle vulnerabilities with plural \"files\" property",
          "status": "passed",
          "title": "should handle vulnerabilities with plural \"files\" property",
          "duration": 10.531704999999874,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Vendor Detection Regression Tests (RFC-047)"
          ],
          "fullName": "Vendor Detection Regression Tests (RFC-047) should handle mixed vulnerabilities with both file and files properties",
          "status": "passed",
          "title": "should handle mixed vulnerabilities with both file and files properties",
          "duration": 4.312762999999904,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803978283,
      "endTime": 1759803978364.3127,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/modes/__tests__/vendor-detection-regression.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "AST Validator with Mocked API",
            "False Positive Filtering"
          ],
          "fullName": "AST Validator with Mocked API False Positive Filtering should filter out vulnerabilities in comments",
          "status": "failed",
          "title": "should filter out vulnerabilities in comments",
          "duration": 2.6403210000000854,
          "failureMessages": [
            "AssertionError: expected \"spy\" to be called with arguments: [ { …(2) } ]\u001b[90m\n\nReceived: \n\n\u001b[1m  1st spy call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[2m    {\u001b[22m\n\u001b[2m      \"files\": {\u001b[22m\n\u001b[32m-       \"example.js\": \"// Security warning\u001b[90m\n\u001b[31m+       \"example.js\": {\u001b[90m\n\u001b[31m+         \"content\": \"// Security warning\u001b[90m\n\u001b[2m  // eval(userInput) - never do this!\u001b[22m\n\u001b[2m  console.log('safe code');\",\u001b[22m\n\u001b[2m        },\u001b[22m\n\u001b[31m+     },\u001b[90m\n\u001b[2m      \"vulnerabilities\": [\u001b[22m\n\u001b[2m        {\u001b[22m\n\u001b[2m          \"code\": \"// eval(userInput)\",\u001b[22m\n\u001b[2m          \"filePath\": \"example.js\",\u001b[22m\n\u001b[2m          \"id\": \"js-eval-injection-2-3\",\u001b[22m\n\u001b[2m          \"line\": 2,\u001b[22m\n\u001b[2m          \"patternId\": \"js-eval-injection\",\u001b[22m\n\u001b[2m          \"severity\": \"critical\",\u001b[22m\n\u001b[31m+         \"type\": \"js-eval-injection\",\u001b[90m\n\u001b[2m        },\u001b[22m\n\u001b[2m      ],\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[2m  ]\u001b[22m\n\u001b[39m\u001b[90m\n\nNumber of calls: \u001b[1m1\u001b[22m\n\u001b[39m\n    at Proxy.<anonymous> (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/expect/dist/index.js:1355:10)\n    at Proxy.<anonymous> (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/expect/dist/index.js:1029:14)\n    at Proxy.methodWrapper (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/chai/index.js:1686:25)\n    at /home/dylan/dev/rsolv/RSOLV-action/src/scanner/__tests__/ast-validator-mocked.test.ts:69:53\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AST Validator with Mocked API",
            "False Positive Filtering"
          ],
          "fullName": "AST Validator with Mocked API False Positive Filtering should keep real vulnerabilities",
          "status": "passed",
          "title": "should keep real vulnerabilities",
          "duration": 0.3103360000000066,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AST Validator with Mocked API",
            "False Positive Filtering"
          ],
          "fullName": "AST Validator with Mocked API False Positive Filtering should handle mixed results correctly",
          "status": "passed",
          "title": "should handle mixed results correctly",
          "duration": 0.2504359999998087,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AST Validator with Mocked API",
            "False Positive Filtering"
          ],
          "fullName": "AST Validator with Mocked API False Positive Filtering should handle API failures gracefully",
          "status": "passed",
          "title": "should handle API failures gracefully",
          "duration": 0.3616500000000542,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803978511,
      "endTime": 1759803978514.3616,
      "status": "failed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/scanner/__tests__/ast-validator-mocked.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "ScanOrchestrator - max_issues bug",
            "RED - Shows the bug existed before fix"
          ],
          "fullName": "ScanOrchestrator - max_issues bug RED - Shows the bug existed before fix BEFORE FIX: would pass all groups to createIssuesFromGroups ignoring max_issues",
          "status": "skipped",
          "title": "BEFORE FIX: would pass all groups to createIssuesFromGroups ignoring max_issues",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ScanOrchestrator - max_issues bug",
            "GREEN - After the fix"
          ],
          "fullName": "ScanOrchestrator - max_issues bug GREEN - After the fix should only pass limited groups to createIssuesFromGroups",
          "status": "passed",
          "title": "should only pass limited groups to createIssuesFromGroups",
          "duration": 160.45341099999996,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ScanOrchestrator - max_issues bug",
            "GREEN - After the fix"
          ],
          "fullName": "ScanOrchestrator - max_issues bug GREEN - After the fix should only create number of issues specified by max_issues",
          "status": "passed",
          "title": "should only create number of issues specified by max_issues",
          "duration": 140.09431500000005,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ScanOrchestrator - max_issues bug",
            "REFACTOR - Maintain functionality"
          ],
          "fullName": "ScanOrchestrator - max_issues bug REFACTOR - Maintain functionality should still create all issues when no max_issues limit",
          "status": "passed",
          "title": "should still create all issues when no max_issues limit",
          "duration": 137.34106900000006,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ScanOrchestrator - max_issues bug",
            "REFACTOR - Maintain functionality"
          ],
          "fullName": "ScanOrchestrator - max_issues bug REFACTOR - Maintain functionality should handle edge cases correctly",
          "status": "passed",
          "title": "should handle edge cases correctly",
          "duration": 138.65573800000004,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803977617,
      "endTime": 1759803978194.6558,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/scanner/__tests__/scan-orchestrator-max-issues.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "PhaseExecutor - Mitigate Phase Credential Handling"
          ],
          "fullName": "PhaseExecutor - Mitigate Phase Credential Handling should pass rsolvApiKey and useVendedCredentials to processIssues",
          "status": "passed",
          "title": "should pass rsolvApiKey and useVendedCredentials to processIssues",
          "duration": 392.20341499999995,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PhaseExecutor - Mitigate Phase Credential Handling"
          ],
          "fullName": "PhaseExecutor - Mitigate Phase Credential Handling should fail gracefully when rsolvApiKey is missing but vended credentials are enabled",
          "status": "passed",
          "title": "should fail gracefully when rsolvApiKey is missing but vended credentials are enabled",
          "duration": 289.2104949999998,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803978544,
      "endTime": 1759803979225.2104,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/modes/phase-executor/__tests__/mitigate-credentials.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "ElixirASTAnalyzer - Encryption",
            "encryption integration"
          ],
          "fullName": "ElixirASTAnalyzer - Encryption encryption integration should encrypt files before sending to API",
          "status": "passed",
          "title": "should encrypt files before sending to API",
          "duration": 1.3105999999997948,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ElixirASTAnalyzer - Encryption",
            "encryption integration"
          ],
          "fullName": "ElixirASTAnalyzer - Encryption encryption integration should use AES-256-GCM encryption",
          "status": "passed",
          "title": "should use AES-256-GCM encryption",
          "duration": 0.6611149999998815,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ElixirASTAnalyzer - Encryption",
            "decryption of responses"
          ],
          "fullName": "ElixirASTAnalyzer - Encryption decryption of responses should decrypt API responses when encryption is used",
          "status": "passed",
          "title": "should decrypt API responses when encryption is used",
          "duration": 0.6213600000000952,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803979299,
      "endTime": 1759803979301.6213,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/security/analyzers/__tests__/elixir-ast-analyzer-encryption.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Credential Lifecycle Issues",
            "Issue: Multiple credential managers created"
          ],
          "fullName": "Credential Lifecycle Issues Issue: Multiple credential managers created should demonstrate the current problem - multiple managers",
          "status": "passed",
          "title": "should demonstrate the current problem - multiple managers",
          "duration": 3.0296880000000783,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Credential Lifecycle Issues",
            "Solution 1: Singleton credential manager"
          ],
          "fullName": "Credential Lifecycle Issues Solution 1: Singleton credential manager should reuse the same credential manager instance",
          "status": "passed",
          "title": "should reuse the same credential manager instance",
          "duration": 1.2175520000000688,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Credential Lifecycle Issues",
            "Solution 2: Handle credential expiration gracefully"
          ],
          "fullName": "Credential Lifecycle Issues Solution 2: Handle credential expiration gracefully should refresh expired credentials automatically",
          "status": "passed",
          "title": "should refresh expired credentials automatically",
          "duration": 6003.898947000001,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Credential Lifecycle Issues",
            "Solution 3: Retry on exchange failure"
          ],
          "fullName": "Credential Lifecycle Issues Solution 3: Retry on exchange failure should retry credential exchange with exponential backoff",
          "status": "passed",
          "title": "should retry credential exchange with exponential backoff",
          "duration": 303.4323480000003,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Credential Lifecycle Issues",
            "Claude conversation logging"
          ],
          "fullName": "Credential Lifecycle Issues Claude conversation logging should log full Claude conversations when enabled",
          "status": "passed",
          "title": "should log full Claude conversations when enabled",
          "duration": 0.2763439999998809,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803981142,
      "endTime": 1759803987454.4324,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/test/credentials/credential-lifecycle.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Anthropic Client with Vended Credentials"
          ],
          "fullName": "Anthropic Client with Vended Credentials should NOT throw when creating Anthropic client with vended credentials and no API key",
          "status": "failed",
          "title": "should NOT throw when creating Anthropic client with vended credentials and no API key",
          "duration": 3002.6581060000008,
          "failureMessages": [
            "AssertionError: expected 'Failed to initialize credentials afte…' to contain 'Failed to exchange credentials'\n    at /home/dylan/dev/rsolv/RSOLV-action/src/__tests__/ai/anthropic-vending.test.ts:41:28\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Anthropic Client with Vended Credentials"
          ],
          "fullName": "Anthropic Client with Vended Credentials should throw when creating Anthropic client without vended credentials and no API key",
          "status": "passed",
          "title": "should throw when creating Anthropic client without vended credentials and no API key",
          "duration": 0.46302900000046066,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803987928,
      "endTime": 1759803990931.4631,
      "status": "failed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/__tests__/ai/anthropic-vending.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "AITestGenerator - maxTokens fix",
            "RED - Shows the original problem"
          ],
          "fullName": "AITestGenerator - maxTokens fix RED - Shows the original problem should have used low maxTokens before fix (4000)",
          "status": "passed",
          "title": "should have used low maxTokens before fix (4000)",
          "duration": 0.5416970000005676,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AITestGenerator - maxTokens fix",
            "GREEN - After the fix"
          ],
          "fullName": "AITestGenerator - maxTokens fix GREEN - After the fix should use at least 10000 maxTokens for test generation even with low config",
          "status": "failed",
          "title": "should use at least 10000 maxTokens for test generation even with low config",
          "duration": 2.4298619999999573,
          "failureMessages": [
            "AssertionError: expected \"spy\" to be called with arguments: [ ObjectContaining{…} ]\u001b[90m\n\nReceived: \n\n\u001b[1m  1st spy call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   ObjectContaining {\u001b[90m\n\u001b[32m-     \"maxTokens\": 10000,\u001b[90m\n\u001b[31m+   {\u001b[90m\n\u001b[31m+     \"apiKey\": \"test-key\",\u001b[90m\n\u001b[31m+     \"maxTokens\": 4000,\u001b[90m\n\u001b[31m+     \"model\": \"claude-3-sonnet\",\u001b[90m\n\u001b[31m+     \"provider\": \"anthropic\",\u001b[90m\n\u001b[31m+     \"temperature\": undefined,\u001b[90m\n\u001b[31m+     \"useVendedCredentials\": undefined,\u001b[90m\n\u001b[2m    },\u001b[22m\n\u001b[2m  ]\u001b[22m\n\u001b[39m\u001b[90m\n\nNumber of calls: \u001b[1m1\u001b[22m\n\u001b[39m\n    at Proxy.<anonymous> (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/expect/dist/index.js:1355:10)\n    at Proxy.<anonymous> (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/expect/dist/index.js:1029:14)\n    at Proxy.methodWrapper (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/chai/index.js:1686:25)\n    at /home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/ai-test-generator-maxtokens.test.ts:100:31\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AITestGenerator - maxTokens fix",
            "GREEN - After the fix"
          ],
          "fullName": "AITestGenerator - maxTokens fix GREEN - After the fix should preserve higher maxTokens if already configured",
          "status": "passed",
          "title": "should preserve higher maxTokens if already configured",
          "duration": 0.5363579999993817,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AITestGenerator - maxTokens fix",
            "GREEN - After the fix"
          ],
          "fullName": "AITestGenerator - maxTokens fix GREEN - After the fix should use 10000 maxTokens when no maxTokens is specified",
          "status": "failed",
          "title": "should use 10000 maxTokens when no maxTokens is specified",
          "duration": 0.7163629999995464,
          "failureMessages": [
            "AssertionError: expected \"spy\" to be called with arguments: [ ObjectContaining{…} ]\u001b[90m\n\nReceived: \n\n\u001b[1m  1st spy call:\n\n\u001b[22m\u001b[2m  [\u001b[22m\n\u001b[32m-   ObjectContaining {\u001b[90m\n\u001b[32m-     \"maxTokens\": 10000,\u001b[90m\n\u001b[31m+   {\u001b[90m\n\u001b[31m+     \"apiKey\": \"test-key\",\u001b[90m\n\u001b[31m+     \"maxTokens\": undefined,\u001b[90m\n\u001b[31m+     \"model\": \"claude-3-sonnet\",\u001b[90m\n\u001b[31m+     \"provider\": \"anthropic\",\u001b[90m\n\u001b[31m+     \"temperature\": undefined,\u001b[90m\n\u001b[31m+     \"useVendedCredentials\": undefined,\u001b[90m\n\u001b[2m    },\u001b[22m\n\u001b[2m  ]\u001b[22m\n\u001b[39m\u001b[90m\n\nNumber of calls: \u001b[1m1\u001b[22m\n\u001b[39m\n    at Proxy.<anonymous> (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/expect/dist/index.js:1355:10)\n    at Proxy.<anonymous> (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/expect/dist/index.js:1029:14)\n    at Proxy.methodWrapper (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/chai/index.js:1686:25)\n    at /home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/ai-test-generator-maxtokens.test.ts:157:31\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AITestGenerator - maxTokens fix",
            "REFACTOR - Ensure functionality is preserved"
          ],
          "fullName": "AITestGenerator - maxTokens fix REFACTOR - Ensure functionality is preserved should still generate valid test results with increased maxTokens",
          "status": "skipped",
          "title": "should still generate valid test results with increased maxTokens",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AITestGenerator - maxTokens fix",
            "REFACTOR - Ensure functionality is preserved"
          ],
          "fullName": "AITestGenerator - maxTokens fix REFACTOR - Ensure functionality is preserved should maintain other config properties unchanged",
          "status": "failed",
          "title": "should maintain other config properties unchanged",
          "duration": 0.7067069999993691,
          "failureMessages": [
            "AssertionError: expected \"spy\" to be called with arguments: [ ObjectContaining{…} ]\u001b[90m\n\nReceived: \n\n\u001b[1m  1st spy call:\n\n\u001b[22m\u001b[33m@@ -1,9 +1,9 @@\u001b[90m\n\u001b[2m  [\u001b[22m\n\u001b[32m-   ObjectContaining {\u001b[90m\n\u001b[31m+   {\u001b[90m\n\u001b[2m      \"apiKey\": \"test-key\",\u001b[22m\n\u001b[32m-     \"maxTokens\": 10000,\u001b[90m\n\u001b[31m+     \"maxTokens\": 4000,\u001b[90m\n\u001b[2m      \"model\": \"claude-3-sonnet\",\u001b[22m\n\u001b[2m      \"provider\": \"anthropic\",\u001b[22m\n\u001b[2m      \"temperature\": 0.5,\u001b[22m\n\u001b[2m      \"useVendedCredentials\": true,\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[39m\u001b[90m\n\nNumber of calls: \u001b[1m1\u001b[22m\n\u001b[39m\n    at Proxy.<anonymous> (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/expect/dist/index.js:1355:10)\n    at Proxy.<anonymous> (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/expect/dist/index.js:1029:14)\n    at Proxy.methodWrapper (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/chai/index.js:1686:25)\n    at /home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/ai-test-generator-maxtokens.test.ts:208:31\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"
          ],
          "meta": {}
        }
      ],
      "startTime": 1759803987818,
      "endTime": 1759803987822.7163,
      "status": "failed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/ai-test-generator-maxtokens.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Issue Analyzer"
          ],
          "fullName": "Issue Analyzer analyzeIssue should return analysis from AI client",
          "status": "passed",
          "title": "analyzeIssue should return analysis from AI client",
          "duration": 0.8382310000006328,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803987899,
      "endTime": 1759803987899.8381,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/analyzer.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Fix Iteration Validation - Java/PHP",
            "Java SQL Injection Fix Iteration"
          ],
          "fullName": "Fix Iteration Validation - Java/PHP Java SQL Injection Fix Iteration should validate fix iteration for Java SQL injection",
          "status": "skipped",
          "title": "should validate fix iteration for Java SQL injection",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Fix Iteration Validation - Java/PHP",
            "Java SQL Injection Fix Iteration"
          ],
          "fullName": "Fix Iteration Validation - Java/PHP Java SQL Injection Fix Iteration should handle fix iteration with max attempts",
          "status": "passed",
          "title": "should handle fix iteration with max attempts",
          "duration": 2.259284999999977,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Fix Iteration Validation - Java/PHP",
            "PHP SQL Injection Fix Iteration"
          ],
          "fullName": "Fix Iteration Validation - Java/PHP PHP SQL Injection Fix Iteration should validate fix iteration for PHP SQL injection",
          "status": "skipped",
          "title": "should validate fix iteration for PHP SQL injection",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Fix Iteration Validation - Java/PHP",
            "PHP SQL Injection Fix Iteration"
          ],
          "fullName": "Fix Iteration Validation - Java/PHP PHP SQL Injection Fix Iteration should handle PDO fix patterns",
          "status": "passed",
          "title": "should handle PDO fix patterns",
          "duration": 0.7866050000000087,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Fix Iteration Validation - Java/PHP",
            "Integration with Fix Validation"
          ],
          "fullName": "Fix Iteration Validation - Java/PHP Integration with Fix Validation should integrate with Claude Code fix validation loop",
          "status": "passed",
          "title": "should integrate with Claude Code fix validation loop",
          "duration": 4.529614000000038,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803980442,
      "endTime": 1759803980450.5295,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/fix-iteration-java-php.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Live LLM Adapter Tests",
            "Anthropic Live Tests"
          ],
          "fullName": "Live LLM Adapter Tests Anthropic Live Tests should make real API call to Anthropic",
          "status": "pending",
          "title": "should make real API call to Anthropic",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Live LLM Adapter Tests",
            "Anthropic Live Tests"
          ],
          "fullName": "Live LLM Adapter Tests Anthropic Live Tests should handle Anthropic with credential vending",
          "status": "pending",
          "title": "should handle Anthropic with credential vending",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Live LLM Adapter Tests",
            "OpenAI Live Tests"
          ],
          "fullName": "Live LLM Adapter Tests OpenAI Live Tests should make real API call to OpenAI",
          "status": "pending",
          "title": "should make real API call to OpenAI",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Live LLM Adapter Tests",
            "Ollama Live Tests"
          ],
          "fullName": "Live LLM Adapter Tests Ollama Live Tests should make real API call to local Ollama",
          "status": "pending",
          "title": "should make real API call to local Ollama",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Live LLM Adapter Tests",
            "Provider Comparison"
          ],
          "fullName": "Live LLM Adapter Tests Provider Comparison should compare responses across all available providers",
          "status": "pending",
          "title": "should compare responses across all available providers",
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803979768,
      "endTime": 1759803979768,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/llm-adapters-live.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Phase 6D: IaC/Terraform Validation",
            "Terraform Vulnerability Examples"
          ],
          "fullName": "Phase 6D: IaC/Terraform Validation Terraform Vulnerability Examples should handle public S3 bucket vulnerability",
          "status": "passed",
          "title": "should handle public S3 bucket vulnerability",
          "duration": 0.6065699999999197,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase 6D: IaC/Terraform Validation",
            "Terraform Vulnerability Examples"
          ],
          "fullName": "Phase 6D: IaC/Terraform Validation Terraform Vulnerability Examples should handle open security group vulnerability",
          "status": "passed",
          "title": "should handle open security group vulnerability",
          "duration": 0.2900919999999587,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase 6D: IaC/Terraform Validation",
            "IaC Test Framework Detection"
          ],
          "fullName": "Phase 6D: IaC/Terraform Validation IaC Test Framework Detection should detect Terratest framework",
          "status": "passed",
          "title": "should detect Terratest framework",
          "duration": 0.7146999999999935,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase 6D: IaC/Terraform Validation",
            "IaC Test Framework Detection"
          ],
          "fullName": "Phase 6D: IaC/Terraform Validation IaC Test Framework Detection should detect Kitchen-Terraform",
          "status": "passed",
          "title": "should detect Kitchen-Terraform",
          "duration": 0.5104280000000472,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase 6D: IaC/Terraform Validation",
            "IaC Pattern Limitations"
          ],
          "fullName": "Phase 6D: IaC/Terraform Validation IaC Pattern Limitations should demonstrate current IaC detection limitations",
          "status": "passed",
          "title": "should demonstrate current IaC detection limitations",
          "duration": 0.36518900000010035,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase 6D: IaC/Terraform Validation",
            "Test Generation for IaC"
          ],
          "fullName": "Phase 6D: IaC/Terraform Validation Test Generation for IaC should generate appropriate test structure for Terraform",
          "status": "passed",
          "title": "should generate appropriate test structure for Terraform",
          "duration": 0.26216299999987314,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase 6D: IaC/Terraform Validation",
            "Test Generation for IaC"
          ],
          "fullName": "Phase 6D: IaC/Terraform Validation Test Generation for IaC should identify IaC fix patterns",
          "status": "passed",
          "title": "should identify IaC fix patterns",
          "duration": 0.09883700000000317,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase 6D: IaC/Terraform Validation",
            "Expected IaC Test Frameworks"
          ],
          "fullName": "Phase 6D: IaC/Terraform Validation Expected IaC Test Frameworks should understand Terratest test structure",
          "status": "passed",
          "title": "should understand Terratest test structure",
          "duration": 0.07037999999988642,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase 6D: IaC/Terraform Validation",
            "Expected IaC Test Frameworks"
          ],
          "fullName": "Phase 6D: IaC/Terraform Validation Expected IaC Test Frameworks should understand Terraform Compliance structure",
          "status": "passed",
          "title": "should understand Terraform Compliance structure",
          "duration": 0.06921599999986938,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803981096,
      "endTime": 1759803981099.2622,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/phase-6d-iac-validation.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Phase 6E: Java/PHP Fix Validation",
            "Java SQL Injection Fix Iteration"
          ],
          "fullName": "Phase 6E: Java/PHP Fix Validation Java SQL Injection Fix Iteration should iterate until Java SQL injection is properly fixed",
          "status": "passed",
          "title": "should iterate until Java SQL injection is properly fixed",
          "duration": 0.532273000000032,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase 6E: Java/PHP Fix Validation",
            "Java SQL Injection Fix Iteration"
          ],
          "fullName": "Phase 6E: Java/PHP Fix Validation Java SQL Injection Fix Iteration should handle max iterations exceeded for Java",
          "status": "passed",
          "title": "should handle max iterations exceeded for Java",
          "duration": 0.256603000000041,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase 6E: Java/PHP Fix Validation",
            "PHP SQL Injection Fix Iteration"
          ],
          "fullName": "Phase 6E: Java/PHP Fix Validation PHP SQL Injection Fix Iteration should iterate until PHP SQL injection is properly fixed",
          "status": "passed",
          "title": "should iterate until PHP SQL injection is properly fixed",
          "duration": 0.2074000000000069,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase 6E: Java/PHP Fix Validation",
            "PHP SQL Injection Fix Iteration"
          ],
          "fullName": "Phase 6E: Java/PHP Fix Validation PHP SQL Injection Fix Iteration should generate proper test context for PHP",
          "status": "passed",
          "title": "should generate proper test context for PHP",
          "duration": 0.14605999999980668,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase 6E: Java/PHP Fix Validation",
            "Language-Specific Fix Patterns"
          ],
          "fullName": "Phase 6E: Java/PHP Fix Validation Language-Specific Fix Patterns should apply Java-specific secure patterns",
          "status": "passed",
          "title": "should apply Java-specific secure patterns",
          "duration": 0.17826599999989412,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase 6E: Java/PHP Fix Validation",
            "Language-Specific Fix Patterns"
          ],
          "fullName": "Phase 6E: Java/PHP Fix Validation Language-Specific Fix Patterns should apply PHP-specific secure patterns",
          "status": "passed",
          "title": "should apply PHP-specific secure patterns",
          "duration": 0.16937999999981912,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Phase 6E: Java/PHP Fix Validation",
            "Fix Validation Configuration"
          ],
          "fullName": "Phase 6E: Java/PHP Fix Validation Fix Validation Configuration should respect configuration hierarchy",
          "status": "passed",
          "title": "should respect configuration hierarchy",
          "duration": 0.2688310000000911,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803981073,
      "endTime": 1759803981075.2688,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/phase-6e-java-php-validation.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Solution Generator"
          ],
          "fullName": "Solution Generator generateSolution should return solution from AI client",
          "status": "passed",
          "title": "generateSolution should return solution from AI client",
          "duration": 203.01823200000035,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Solution Generator"
          ],
          "fullName": "Solution Generator generateSolution should use Claude Code adapter when provider is claude-code",
          "status": "passed",
          "title": "generateSolution should use Claude Code adapter when provider is claude-code",
          "duration": 0.9102199999997538,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Solution Generator"
          ],
          "fullName": "Solution Generator generateSolution should fallback to standard AI client for non-claude-code providers",
          "status": "passed",
          "title": "generateSolution should fallback to standard AI client for non-claude-code providers",
          "duration": 100.37406600000031,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803987468,
      "endTime": 1759803987772.374,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/solution.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Enhanced VulnerabilityTestGenerator (Phase 4)"
          ],
          "fullName": "Enhanced VulnerabilityTestGenerator (Phase 4) should generate command injection tests",
          "status": "passed",
          "title": "should generate command injection tests",
          "duration": 0.3885070000005726,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Enhanced VulnerabilityTestGenerator (Phase 4)"
          ],
          "fullName": "Enhanced VulnerabilityTestGenerator (Phase 4) should generate path traversal tests",
          "status": "passed",
          "title": "should generate path traversal tests",
          "duration": 0.2280350000000908,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Enhanced VulnerabilityTestGenerator (Phase 4)"
          ],
          "fullName": "Enhanced VulnerabilityTestGenerator (Phase 4) should generate Ruby tests",
          "status": "passed",
          "title": "should generate Ruby tests",
          "duration": 0.2698529999997845,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Enhanced VulnerabilityTestGenerator (Phase 4)"
          ],
          "fullName": "Enhanced VulnerabilityTestGenerator (Phase 4) should generate PHP tests",
          "status": "passed",
          "title": "should generate PHP tests",
          "duration": 0.3120010000002367,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Enhanced VulnerabilityTestGenerator (Phase 4)"
          ],
          "fullName": "Enhanced VulnerabilityTestGenerator (Phase 4) should generate comprehensive functional validation tests",
          "status": "passed",
          "title": "should generate comprehensive functional validation tests",
          "duration": 0.3954269999994722,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Enhanced VulnerabilityTestGenerator (Phase 4)"
          ],
          "fullName": "Enhanced VulnerabilityTestGenerator (Phase 4) should handle E2E test generation for new vulnerability types",
          "status": "passed",
          "title": "should handle E2E test generation for new vulnerability types",
          "duration": 0.24116500000036467,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803987799,
      "endTime": 1759803987801.3955,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/test-generator-enhanced.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "VulnerabilityTestGenerator (TDD - Green Phase)"
          ],
          "fullName": "VulnerabilityTestGenerator (TDD - Green Phase) should generate complete test suite for SQL injection vulnerability",
          "status": "passed",
          "title": "should generate complete test suite for SQL injection vulnerability",
          "duration": 2.248402999999996,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "VulnerabilityTestGenerator (TDD - Green Phase)"
          ],
          "fullName": "VulnerabilityTestGenerator (TDD - Green Phase) should generate red test that demonstrates vulnerability",
          "status": "passed",
          "title": "should generate red test that demonstrates vulnerability",
          "duration": 0.22785299999998188,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "VulnerabilityTestGenerator (TDD - Green Phase)"
          ],
          "fullName": "VulnerabilityTestGenerator (TDD - Green Phase) should generate green test that validates fix",
          "status": "passed",
          "title": "should generate green test that validates fix",
          "duration": 0.20358599999997296,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "VulnerabilityTestGenerator (TDD - Green Phase)"
          ],
          "fullName": "VulnerabilityTestGenerator (TDD - Green Phase) should generate refactor tests that ensure functionality",
          "status": "passed",
          "title": "should generate refactor tests that ensure functionality",
          "duration": 0.22739999999998872,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "VulnerabilityTestGenerator (TDD - Green Phase)"
          ],
          "fullName": "VulnerabilityTestGenerator (TDD - Green Phase) should handle different vulnerability types",
          "status": "passed",
          "title": "should handle different vulnerability types",
          "duration": 0.2294050000000425,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "VulnerabilityTestGenerator (TDD - Green Phase)"
          ],
          "fullName": "VulnerabilityTestGenerator (TDD - Green Phase) should handle different programming languages",
          "status": "passed",
          "title": "should handle different programming languages",
          "duration": 0.6584729999999581,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "VulnerabilityTestGenerator (TDD - Green Phase)"
          ],
          "fullName": "VulnerabilityTestGenerator (TDD - Green Phase) should generate E2E tests when requested",
          "status": "passed",
          "title": "should generate E2E tests when requested",
          "duration": 0.35056900000000724,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TestTemplateEngine (TDD - Green Phase)"
          ],
          "fullName": "TestTemplateEngine (TDD - Green Phase) should load SQL injection red test template",
          "status": "passed",
          "title": "should load SQL injection red test template",
          "duration": 0.09547700000001669,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TestTemplateEngine (TDD - Green Phase)"
          ],
          "fullName": "TestTemplateEngine (TDD - Green Phase) should render template with context variables",
          "status": "passed",
          "title": "should render template with context variables",
          "duration": 0.08821300000005294,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TestTemplateEngine (TDD - Green Phase)"
          ],
          "fullName": "TestTemplateEngine (TDD - Green Phase) should validate template syntax",
          "status": "passed",
          "title": "should validate template syntax",
          "duration": 0.09934199999997873,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "TestExecutor (TDD - Green Phase)"
          ],
          "fullName": "TestExecutor (TDD - Green Phase) should execute red-green-refactor test suite",
          "status": "passed",
          "title": "should execute red-green-refactor test suite",
          "duration": 0.10632800000001907,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Test Generation Framework Integration (TDD - Green Phase)"
          ],
          "fullName": "Test Generation Framework Integration (TDD - Green Phase) should integrate with existing security analyzer",
          "status": "passed",
          "title": "should integrate with existing security analyzer",
          "duration": 77.70656000000002,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Test Generation Framework Integration (TDD - Green Phase)"
          ],
          "fullName": "Test Generation Framework Integration (TDD - Green Phase) should integrate with git-based processor for validation",
          "status": "passed",
          "title": "should integrate with git-based processor for validation",
          "duration": 23.005300000000034,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803980175,
      "endTime": 1759803980280.0054,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/test-generator.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Unified Processor Timeout Behavior"
          ],
          "fullName": "Unified Processor Timeout Behavior should use default context gathering timeout of 30 seconds",
          "status": "passed",
          "title": "should use default context gathering timeout of 30 seconds",
          "duration": 1.3020020000000159,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Unified Processor Timeout Behavior"
          ],
          "fullName": "Unified Processor Timeout Behavior should use custom context gathering timeout when specified",
          "status": "passed",
          "title": "should use custom context gathering timeout when specified",
          "duration": 0.41506200000003446,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Unified Processor Timeout Behavior"
          ],
          "fullName": "Unified Processor Timeout Behavior should handle analysis failure gracefully",
          "status": "passed",
          "title": "should handle analysis failure gracefully",
          "duration": 0.2895169999999325,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Unified Processor Timeout Behavior"
          ],
          "fullName": "Unified Processor Timeout Behavior should handle solution generation failure",
          "status": "passed",
          "title": "should handle solution generation failure",
          "duration": 0.366551999999956,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Unified Processor Timeout Behavior"
          ],
          "fullName": "Unified Processor Timeout Behavior should set different configurations based on context depth",
          "status": "passed",
          "title": "should set different configurations based on context depth",
          "duration": 0.799129999999991,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Unified Processor Timeout Behavior"
          ],
          "fullName": "Unified Processor Timeout Behavior should process multiple issues with timeout handling",
          "status": "passed",
          "title": "should process multiple issues with timeout handling",
          "duration": 100.43297000000007,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Unified Processor Timeout Behavior"
          ],
          "fullName": "Unified Processor Timeout Behavior should handle errors with sanitized messages",
          "status": "passed",
          "title": "should handle errors with sanitized messages",
          "duration": 1.337116000000151,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Unified Processor Timeout Behavior"
          ],
          "fullName": "Unified Processor Timeout Behavior should include processing time in results",
          "status": "failed",
          "title": "should include processing time in results",
          "duration": 200.55204900000012,
          "failureMessages": [
            "AssertionError: expected 199 to be greater than or equal to 200\n    at /home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/unified-processor-timeout.test.ts:385:27\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"
          ],
          "meta": {}
        }
      ],
      "startTime": 1759803980750,
      "endTime": 1759803981055.552,
      "status": "failed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/unified-processor-timeout.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Config Loading with maxIssues"
          ],
          "fullName": "Config Loading with maxIssues should load default config without maxIssues",
          "status": "passed",
          "title": "should load default config without maxIssues",
          "duration": 0.45678899999984424,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Config Loading with maxIssues"
          ],
          "fullName": "Config Loading with maxIssues should load maxIssues from environment variable",
          "status": "passed",
          "title": "should load maxIssues from environment variable",
          "duration": 0.29321900000013557,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Config Loading with maxIssues"
          ],
          "fullName": "Config Loading with maxIssues should load maxIssues from config file",
          "status": "passed",
          "title": "should load maxIssues from config file",
          "duration": 1.8178240000006554,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Config Loading with maxIssues"
          ],
          "fullName": "Config Loading with maxIssues environment variable should override config file for maxIssues",
          "status": "passed",
          "title": "environment variable should override config file for maxIssues",
          "duration": 0.41944899999998597,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Config Loading with maxIssues"
          ],
          "fullName": "Config Loading with maxIssues should handle invalid maxIssues values",
          "status": "passed",
          "title": "should handle invalid maxIssues values",
          "duration": 0.2740690000000541,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Config Loading with maxIssues"
          ],
          "fullName": "Config Loading with maxIssues should handle zero maxIssues",
          "status": "passed",
          "title": "should handle zero maxIssues",
          "duration": 0.5954189999993105,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Config Loading with maxIssues"
          ],
          "fullName": "Config Loading with maxIssues should handle negative maxIssues",
          "status": "passed",
          "title": "should handle negative maxIssues",
          "duration": 0.3424409999997806,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803987888,
      "endTime": 1759803987892.3425,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/config/__tests__/index.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Model Configuration",
            "RED - Test should fail initially"
          ],
          "fullName": "Model Configuration RED - Test should fail initially should default to Claude 4 Sonnet model",
          "status": "passed",
          "title": "should default to Claude 4 Sonnet model",
          "duration": 1.5307010000005903,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Model Configuration",
            "RED - Test should fail initially"
          ],
          "fullName": "Model Configuration RED - Test should fail initially should use Claude 4 Sonnet even when provider is set via env",
          "status": "passed",
          "title": "should use Claude 4 Sonnet even when provider is set via env",
          "duration": 0.4689200000002529,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Model Configuration",
            "RED - Test should fail initially"
          ],
          "fullName": "Model Configuration RED - Test should fail initially should preserve useVendedCredentials when env vars are set",
          "status": "passed",
          "title": "should preserve useVendedCredentials when env vars are set",
          "duration": 0.37986300000011397,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Model Configuration",
            "RED - Test should fail initially"
          ],
          "fullName": "Model Configuration RED - Test should fail initially should respect explicit model override",
          "status": "failed",
          "title": "should respect explicit model override",
          "duration": 0.7198020000005272,
          "failureMessages": [
            "AssertionError: expected 'claude-sonnet-4-5-20250929' to be 'claude-3-opus-20240229' // Object.is equality\n    at /home/dylan/dev/rsolv/RSOLV-action/src/config/__tests__/model-config.test.ts:87:39\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Model Configuration",
            "Model metadata validation"
          ],
          "fullName": "Model Configuration Model metadata validation should have correct Claude 4 Sonnet capabilities",
          "status": "passed",
          "title": "should have correct Claude 4 Sonnet capabilities",
          "duration": 0.6323229999998148,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Model Configuration",
            "GREEN - Config merging"
          ],
          "fullName": "Model Configuration GREEN - Config merging should properly merge configs with env vars taking precedence",
          "status": "passed",
          "title": "should properly merge configs with env vars taking precedence",
          "duration": 0.3789090000000215,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803987874,
      "endTime": 1759803987878.6323,
      "status": "failed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/config/__tests__/model-config.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Educational PR Creation",
            "RED Phase - Educational Content Generation"
          ],
          "fullName": "Educational PR Creation RED Phase - Educational Content Generation should include educational vulnerability explanation",
          "status": "passed",
          "title": "should include educational vulnerability explanation",
          "duration": 0.7484810000005382,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Educational PR Creation",
            "RED Phase - Educational Content Generation"
          ],
          "fullName": "Educational PR Creation RED Phase - Educational Content Generation should include AI-specific vulnerability context for slopsquatting",
          "status": "passed",
          "title": "should include AI-specific vulnerability context for slopsquatting",
          "duration": 0.2818670000006023,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Educational PR Creation",
            "RED Phase - Educational Content Generation"
          ],
          "fullName": "Educational PR Creation RED Phase - Educational Content Generation should include RSOLV value proposition",
          "status": "passed",
          "title": "should include RSOLV value proposition",
          "duration": 0.2653810000001613,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Educational PR Creation",
            "GREEN Phase - Complete Flow"
          ],
          "fullName": "Educational PR Creation GREEN Phase - Complete Flow should create educational PR with all components",
          "status": "passed",
          "title": "should create educational PR with all components",
          "duration": 0.37616000000070926,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803987830,
      "endTime": 1759803987832.3762,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/github/__tests__/pr-git-educational.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "PhaseExecutor",
            "execute method"
          ],
          "fullName": "PhaseExecutor execute method should execute scan mode without prerequisites",
          "status": "passed",
          "title": "should execute scan mode without prerequisites",
          "duration": 93.15371100000004,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PhaseExecutor",
            "execute method"
          ],
          "fullName": "PhaseExecutor execute method should require issue or scan data for validate mode",
          "status": "failed",
          "title": "should require issue or scan data for validate mode",
          "duration": 73.28397200000006,
          "failureMessages": [
            "AssertionError: expected [Function] to throw error including 'Validation requires issues, --issue, …' but got 'No issues found with label \\'undefine…'\n    at _Assertion.<anonymous> (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/expect/dist/index.js:1420:16)\n    at _Assertion.<anonymous> (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/expect/dist/index.js:1029:14)\n    at _Assertion.methodWrapper (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/chai/index.js:1686:25)\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/expect/dist/index.js:1639:20\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at /home/dylan/dev/rsolv/RSOLV-action/src/modes/__tests__/phase-executor.test.ts:219:7\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PhaseExecutor",
            "execute method"
          ],
          "fullName": "PhaseExecutor execute method should require issue for mitigate mode",
          "status": "failed",
          "title": "should require issue for mitigate mode",
          "duration": 1.679081999999994,
          "failureMessages": [
            "AssertionError: expected 'No validated issues found with label …' to contain 'Mitigation requires'\n    at /home/dylan/dev/rsolv/RSOLV-action/src/modes/__tests__/phase-executor.test.ts:238:52\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PhaseExecutor",
            "execute method"
          ],
          "fullName": "PhaseExecutor execute method should execute full mode without prerequisites",
          "status": "failed",
          "title": "should execute full mode without prerequisites",
          "duration": 1.101350000000025,
          "failureMessages": [
            "AssertionError: expected 'No vulnerabilities found to process' to contain 'all phases'\n    at /home/dylan/dev/rsolv/RSOLV-action/src/modes/__tests__/phase-executor.test.ts:302:30\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PhaseExecutor",
            "execute method"
          ],
          "fullName": "PhaseExecutor execute method should throw error for invalid mode",
          "status": "passed",
          "title": "should throw error for invalid mode",
          "duration": 0.37019199999997454,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PhaseExecutor",
            "individual phase methods"
          ],
          "fullName": "PhaseExecutor individual phase methods executeScan should detect vulnerabilities",
          "status": "passed",
          "title": "executeScan should detect vulnerabilities",
          "duration": 0.43018099999994774,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PhaseExecutor",
            "individual phase methods"
          ],
          "fullName": "PhaseExecutor individual phase methods executeValidate should generate RED tests",
          "status": "failed",
          "title": "executeValidate should generate RED tests",
          "duration": 15.937423999999965,
          "failureMessages": [
            "AssertionError: expected undefined to be defined\n    at /home/dylan/dev/rsolv/RSOLV-action/src/modes/__tests__/phase-executor.test.ts:352:44\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PhaseExecutor",
            "individual phase methods"
          ],
          "fullName": "PhaseExecutor individual phase methods executeMitigate should fix vulnerability",
          "status": "passed",
          "title": "executeMitigate should fix vulnerability",
          "duration": 1.4394399999999905,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PhaseExecutor",
            "individual phase methods"
          ],
          "fullName": "PhaseExecutor individual phase methods executeAllPhases should run scan, validate, and mitigate",
          "status": "passed",
          "title": "executeAllPhases should run scan, validate, and mitigate",
          "duration": 0.3306680000000597,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PhaseExecutor",
            "phase data persistence"
          ],
          "fullName": "PhaseExecutor phase data persistence should store phase results using PhaseDataClient",
          "status": "passed",
          "title": "should store phase results using PhaseDataClient",
          "duration": 1.0203279999999495,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PhaseExecutor",
            "phase data persistence"
          ],
          "fullName": "PhaseExecutor phase data persistence should retrieve phase results using PhaseDataClient",
          "status": "passed",
          "title": "should retrieve phase results using PhaseDataClient",
          "duration": 0.23725500000000466,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803980475,
      "endTime": 1759803980664.2373,
      "status": "failed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/modes/__tests__/phase-executor.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Vendor File Filtering - Integration Tests",
            "VendorDetector functionality"
          ],
          "fullName": "Vendor File Filtering - Integration Tests VendorDetector functionality should correctly identify vendor files",
          "status": "passed",
          "title": "should correctly identify vendor files",
          "duration": 0.2415659999996933,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Vendor File Filtering - Integration Tests",
            "VendorDetector functionality"
          ],
          "fullName": "Vendor File Filtering - Integration Tests VendorDetector functionality should correctly identify application files",
          "status": "passed",
          "title": "should correctly identify application files",
          "duration": 0.3356679999997141,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Vendor File Filtering - Integration Tests",
            "Expected behavior in Validation Phase"
          ],
          "fullName": "Vendor File Filtering - Integration Tests Expected behavior in Validation Phase validation result should include vendoredFile flag",
          "status": "passed",
          "title": "validation result should include vendoredFile flag",
          "duration": 0.15428700000029494,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Vendor File Filtering - Integration Tests",
            "Expected behavior in Mitigation Phase"
          ],
          "fullName": "Vendor File Filtering - Integration Tests Expected behavior in Mitigation Phase should skip fix generation for vendor files",
          "status": "passed",
          "title": "should skip fix generation for vendor files",
          "duration": 0.08535200000005716,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Vendor File Filtering - Integration Tests",
            "File extraction from various formats"
          ],
          "fullName": "Vendor File Filtering - Integration Tests File extraction from various formats should extract files from different vulnerability structures",
          "status": "passed",
          "title": "should extract files from different vulnerability structures",
          "duration": 0.20284100000026228,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Vendor File Filtering - Integration Tests",
            "Current behavior vs Expected behavior"
          ],
          "fullName": "Vendor File Filtering - Integration Tests Current behavior vs Expected behavior CURRENT: vendor files are processed in all phases",
          "status": "passed",
          "title": "CURRENT: vendor files are processed in all phases",
          "duration": 0.09181199999966339,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803987839,
      "endTime": 1759803987840.203,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/security/__tests__/vendor-filtering-integration.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "RetryableClaudeCodeCLI - Vended Credentials",
            "Vended Credential Handling"
          ],
          "fullName": "RetryableClaudeCodeCLI - Vended Credentials Vended Credential Handling should set ANTHROPIC_API_KEY from vended credentials before executing CLI",
          "status": "passed",
          "title": "should set ANTHROPIC_API_KEY from vended credentials before executing CLI",
          "duration": 0.9663399999999456,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RetryableClaudeCodeCLI - Vended Credentials",
            "Vended Credential Handling"
          ],
          "fullName": "RetryableClaudeCodeCLI - Vended Credentials Vended Credential Handling should use vended credentials in production mode",
          "status": "passed",
          "title": "should use vended credentials in production mode",
          "duration": 0.5423149999996895,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RetryableClaudeCodeCLI - Vended Credentials",
            "Vended Credential Handling"
          ],
          "fullName": "RetryableClaudeCodeCLI - Vended Credentials Vended Credential Handling should prefer environment variable over vended credentials when available",
          "status": "failed",
          "title": "should prefer environment variable over vended credentials when available",
          "duration": 0.9431770000001052,
          "failureMessages": [
            "AssertionError: expected \"spy\" to not be called at all, but actually been called 1 times\u001b[90m\n\nReceived: \n\n\u001b[1m  1st spy call:\n\n\u001b[22m    Array [\n      \"anthropic\",\n    ]\n\u001b[39m\u001b[90m\n\nNumber of calls: \u001b[1m1\u001b[22m\n\u001b[39m\n    at Proxy.<anonymous> (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/expect/dist/index.js:1335:10)\n    at Proxy.<anonymous> (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/expect/dist/index.js:1029:14)\n    at Proxy.methodWrapper (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/chai/index.js:1686:25)\n    at /home/dylan/dev/rsolv/RSOLV-action/src/ai/adapters/__tests__/claude-code-cli-retry-vended.test.ts:172:55\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RetryableClaudeCodeCLI - Vended Credentials",
            "Error Handling"
          ],
          "fullName": "RetryableClaudeCodeCLI - Vended Credentials Error Handling should return error when no API key is available",
          "status": "passed",
          "title": "should return error when no API key is available",
          "duration": 0.2510519999996177,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RetryableClaudeCodeCLI - Vended Credentials",
            "Error Handling"
          ],
          "fullName": "RetryableClaudeCodeCLI - Vended Credentials Error Handling should handle credential manager errors gracefully",
          "status": "passed",
          "title": "should handle credential manager errors gracefully",
          "duration": 0.20255900000029214,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803987782,
      "endTime": 1759803987785.251,
      "status": "failed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/adapters/__tests__/claude-code-cli-retry-vended.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Claude Code CLI Credential Format Validation",
            "RED - Failing tests (TDD)"
          ],
          "fullName": "Claude Code CLI Credential Format Validation RED - Failing tests (TDD) should validate credential format before passing to Claude CLI",
          "status": "passed",
          "title": "should validate credential format before passing to Claude CLI",
          "duration": 2.418519999999944,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code CLI Credential Format Validation",
            "RED - Failing tests (TDD)"
          ],
          "fullName": "Claude Code CLI Credential Format Validation RED - Failing tests (TDD) should detect Anthropic API key format requirements",
          "status": "passed",
          "title": "should detect Anthropic API key format requirements",
          "duration": 1.7703480000000127,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code CLI Credential Format Validation",
            "RED - Failing tests (TDD)"
          ],
          "fullName": "Claude Code CLI Credential Format Validation RED - Failing tests (TDD) should log detailed debugging info when authentication fails",
          "status": "passed",
          "title": "should log detailed debugging info when authentication fails",
          "duration": 0.4063429999998789,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code CLI Credential Format Validation",
            "GREEN - Passing tests (after implementation)"
          ],
          "fullName": "Claude Code CLI Credential Format Validation GREEN - Passing tests (after implementation) should pass valid Anthropic credentials through successfully",
          "status": "passed",
          "title": "should pass valid Anthropic credentials through successfully",
          "duration": 0.2838979999999083,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code CLI Credential Format Validation",
            "Integration test - Real-world scenario"
          ],
          "fullName": "Claude Code CLI Credential Format Validation Integration test - Real-world scenario should handle the exact scenario from workflow 17873531908",
          "status": "passed",
          "title": "should handle the exact scenario from workflow 17873531908",
          "duration": 0.2900139999999283,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803981112,
      "endTime": 1759803981117.29,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/adapters/__tests__/claude-code-credential-format-validation.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "GitBasedClaudeCodeAdapter"
          ],
          "fullName": "GitBasedClaudeCodeAdapter should generate solution with git metadata",
          "status": "passed",
          "title": "should generate solution with git metadata",
          "duration": 0.788541000000123,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "GitBasedClaudeCodeAdapter"
          ],
          "fullName": "GitBasedClaudeCodeAdapter should handle git command failures gracefully",
          "status": "failed",
          "title": "should handle git command failures gracefully",
          "duration": 0.976173000000017,
          "failureMessages": [
            "AssertionError: expected 'Cannot read properties of undefined (…' to contain 'Claude Code did not make any file cha…'\n    at /home/dylan/dev/rsolv/RSOLV-action/src/ai/adapters/__tests__/claude-code-git.test.ts:272:26\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "GitBasedClaudeCodeAdapter"
          ],
          "fullName": "GitBasedClaudeCodeAdapter should use enhanced prompt for git-based workflow",
          "status": "failed",
          "title": "should use enhanced prompt for git-based workflow",
          "duration": 1.1545249999999214,
          "failureMessages": [
            "AssertionError: expected false to be true // Object.is equality\n    at /home/dylan/dev/rsolv/RSOLV-action/src/ai/adapters/__tests__/claude-code-git.test.ts:311:28\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "GitBasedClaudeCodeAdapter"
          ],
          "fullName": "GitBasedClaudeCodeAdapter should extract solution from various response formats",
          "status": "failed",
          "title": "should extract solution from various response formats",
          "duration": 0.2936050000000705,
          "failureMessages": [
            "TypeError: adapter2.extractSolutionFromText is not a function\n    at /home/dylan/dev/rsolv/RSOLV-action/src/ai/adapters/__tests__/claude-code-git.test.ts:326:39\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n    at runSuite (file:///home/dylan/dev/rsolv/RSOLV-action/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)"
          ],
          "meta": {}
        }
      ],
      "startTime": 1759803981128,
      "endTime": 1759803981131.2937,
      "status": "failed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/adapters/__tests__/claude-code-git.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "File Extraction from Vulnerabilities"
          ],
          "fullName": "File Extraction from Vulnerabilities should extract from file property",
          "status": "passed",
          "title": "should extract from file property",
          "duration": 1.1724249999997483,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "File Extraction from Vulnerabilities"
          ],
          "fullName": "File Extraction from Vulnerabilities should extract from files array",
          "status": "passed",
          "title": "should extract from files array",
          "duration": 0.36393300000054296,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "File Extraction from Vulnerabilities"
          ],
          "fullName": "File Extraction from Vulnerabilities should extract from path property",
          "status": "passed",
          "title": "should extract from path property",
          "duration": 0.3391719999999623,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "File Extraction from Vulnerabilities"
          ],
          "fullName": "File Extraction from Vulnerabilities should extract from nested location",
          "status": "passed",
          "title": "should extract from nested location",
          "duration": 0.3263830000005328,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "File Extraction from Vulnerabilities"
          ],
          "fullName": "File Extraction from Vulnerabilities should handle empty vulnerabilities",
          "status": "passed",
          "title": "should handle empty vulnerabilities",
          "duration": 0.24740199999996548,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "File Extraction from Vulnerabilities"
          ],
          "fullName": "File Extraction from Vulnerabilities should handle vulnerabilities with no file info",
          "status": "passed",
          "title": "should handle vulnerabilities with no file info",
          "duration": 0.4281889999992927,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "File Extraction from Vulnerabilities"
          ],
          "fullName": "File Extraction from Vulnerabilities should deduplicate files",
          "status": "passed",
          "title": "should deduplicate files",
          "duration": 0.3270700000002762,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "File Extraction from Vulnerabilities"
          ],
          "fullName": "File Extraction from Vulnerabilities should handle mixed structures",
          "status": "passed",
          "title": "should handle mixed structures",
          "duration": 0.45403500000065833,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759803987916,
      "endTime": 1759803987920.454,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/modes/phase-executor/__tests__/file-extraction.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Credential Lifecycle Issues - TDD",
            "Current Problem: Multiple credential exchanges"
          ],
          "fullName": "Credential Lifecycle Issues - TDD Current Problem: Multiple credential exchanges should demonstrate the problem - multiple managers create multiple exchanges",
          "status": "passed",
          "title": "should demonstrate the problem - multiple managers create multiple exchanges",
          "duration": 1.1654029999999693,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Credential Lifecycle Issues - TDD",
            "Testing the Singleton Solution"
          ],
          "fullName": "Credential Lifecycle Issues - TDD Testing the Singleton Solution should reuse the same credential manager instance",
          "status": "passed",
          "title": "should reuse the same credential manager instance",
          "duration": 0.47784999999998945,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Credential Lifecycle Issues - TDD",
            "Testing Error Handling"
          ],
          "fullName": "Credential Lifecycle Issues - TDD Testing Error Handling should throw on network errors without retry",
          "status": "passed",
          "title": "should throw on network errors without retry",
          "duration": 0.6463949999999841,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Credential Lifecycle Issues - TDD",
            "Testing Credential Expiration Handling"
          ],
          "fullName": "Credential Lifecycle Issues - TDD Testing Credential Expiration Handling should detect expired credentials",
          "status": "passed",
          "title": "should detect expired credentials",
          "duration": 150.98574800000006,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759804030927,
      "endTime": 1759804031080.9858,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/test/credentials/credential-lifecycle-proper.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Multi-Platform Issue Detection"
          ],
          "fullName": "Multi-Platform Issue Detection should detect issues from GitHub only when no other platforms configured",
          "status": "passed",
          "title": "should detect issues from GitHub only when no other platforms configured",
          "duration": 2.3399829999998474,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Multi-Platform Issue Detection"
          ],
          "fullName": "Multi-Platform Issue Detection should detect issues from both GitHub and Jira when configured",
          "status": "passed",
          "title": "should detect issues from both GitHub and Jira when configured",
          "duration": 2.4560849999998027,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Multi-Platform Issue Detection"
          ],
          "fullName": "Multi-Platform Issue Detection should handle errors gracefully and continue with other platforms",
          "status": "passed",
          "title": "should handle errors gracefully and continue with other platforms",
          "duration": 5.575047999999924,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Multi-Platform Issue Detection"
          ],
          "fullName": "Multi-Platform Issue Detection should extract repository info from Jira issue description",
          "status": "passed",
          "title": "should extract repository info from Jira issue description",
          "duration": 1.8768400000001293,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759804030356,
      "endTime": 1759804030368.877,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/tests/platforms/issue-detector.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "AdaptiveTestGenerator - PHP Framework Support",
            "Enhanced PHPUnit Support"
          ],
          "fullName": "AdaptiveTestGenerator - PHP Framework Support Enhanced PHPUnit Support should generate PHPUnit 9+ tests with modern assertions",
          "status": "passed",
          "title": "should generate PHPUnit 9+ tests with modern assertions",
          "duration": 3.1442839999999705,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AdaptiveTestGenerator - PHP Framework Support",
            "Enhanced PHPUnit Support"
          ],
          "fullName": "AdaptiveTestGenerator - PHP Framework Support Enhanced PHPUnit Support should generate PHPUnit tests with Laravel integration",
          "status": "passed",
          "title": "should generate PHPUnit tests with Laravel integration",
          "duration": 1.075317000000041,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AdaptiveTestGenerator - PHP Framework Support",
            "Pest Framework Support"
          ],
          "fullName": "AdaptiveTestGenerator - PHP Framework Support Pest Framework Support should generate Pest tests for file inclusion vulnerability",
          "status": "skipped",
          "title": "should generate Pest tests for file inclusion vulnerability",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AdaptiveTestGenerator - PHP Framework Support",
            "Pest Framework Support"
          ],
          "fullName": "AdaptiveTestGenerator - PHP Framework Support Pest Framework Support should generate Pest tests with dataset for multiple payloads",
          "status": "skipped",
          "title": "should generate Pest tests with dataset for multiple payloads",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AdaptiveTestGenerator - PHP Framework Support",
            "Pest Framework Support"
          ],
          "fullName": "AdaptiveTestGenerator - PHP Framework Support Pest Framework Support should generate Pest tests with Laravel helpers",
          "status": "passed",
          "title": "should generate Pest tests with Laravel helpers",
          "duration": 0.7697150000000192,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AdaptiveTestGenerator - PHP Framework Support",
            "Symfony Integration"
          ],
          "fullName": "AdaptiveTestGenerator - PHP Framework Support Symfony Integration should generate PHPUnit tests with Symfony WebTestCase",
          "status": "passed",
          "title": "should generate PHPUnit tests with Symfony WebTestCase",
          "duration": 0.9205729999999903,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759804030163,
      "endTime": 1759804030168.9207,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/adaptive-test-generator-php.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "AITestGenerator - JSON Extraction",
            "parseTestSuite"
          ],
          "fullName": "AITestGenerator - JSON Extraction parseTestSuite should extract JSON from markdown code blocks",
          "status": "passed",
          "title": "should extract JSON from markdown code blocks",
          "duration": 1.2112049999998362,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AITestGenerator - JSON Extraction",
            "parseTestSuite"
          ],
          "fullName": "AITestGenerator - JSON Extraction parseTestSuite should extract JSON with curly braces in string values",
          "status": "passed",
          "title": "should extract JSON with curly braces in string values",
          "duration": 0.7762900000000172,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AITestGenerator - JSON Extraction",
            "parseTestSuite"
          ],
          "fullName": "AITestGenerator - JSON Extraction parseTestSuite should handle JSON with escaped quotes in strings",
          "status": "passed",
          "title": "should handle JSON with escaped quotes in strings",
          "duration": 0.36739200000010896,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AITestGenerator - JSON Extraction",
            "parseTestSuite"
          ],
          "fullName": "AITestGenerator - JSON Extraction parseTestSuite should extract the largest valid JSON object when multiple exist",
          "status": "passed",
          "title": "should extract the largest valid JSON object when multiple exist",
          "duration": 0.339294000000109,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AITestGenerator - JSON Extraction",
            "parseTestSuite"
          ],
          "fullName": "AITestGenerator - JSON Extraction parseTestSuite should handle incomplete JSON by attempting recovery",
          "status": "passed",
          "title": "should handle incomplete JSON by attempting recovery",
          "duration": 1.0907620000000406,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AITestGenerator - JSON Extraction",
            "parseTestSuite"
          ],
          "fullName": "AITestGenerator - JSON Extraction parseTestSuite should correctly extract JSON that comes after explanatory text",
          "status": "passed",
          "title": "should correctly extract JSON that comes after explanatory text",
          "duration": 0.3235110000000532,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AITestGenerator - JSON Extraction",
            "extractJsonFromResponse - utility function"
          ],
          "fullName": "AITestGenerator - JSON Extraction extractJsonFromResponse - utility function should use a proper JSON extraction method",
          "status": "passed",
          "title": "should use a proper JSON extraction method",
          "duration": 0.42861500000003616,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759804030391,
      "endTime": 1759804030395.4287,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/ai-test-generator-json-extraction.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Claude Code Adapter"
          ],
          "fullName": "Claude Code Adapter constructor should initialize with provided values",
          "status": "passed",
          "title": "constructor should initialize with provided values",
          "duration": 0.4862679999998818,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code Adapter"
          ],
          "fullName": "Claude Code Adapter constructPrompt should prioritize enhanced prompt when provided",
          "status": "passed",
          "title": "constructPrompt should prioritize enhanced prompt when provided",
          "duration": 0.33276999999998225,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code Adapter"
          ],
          "fullName": "Claude Code Adapter constructPrompt should create default prompt when no enhanced prompt provided",
          "status": "passed",
          "title": "constructPrompt should create default prompt when no enhanced prompt provided",
          "duration": 0.14657099999999446,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759804031207,
      "endTime": 1759804031208.3328,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/claude-code.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Claude Code Prompts - Test Validation Context",
            "Base Prompt Updates"
          ],
          "fullName": "Claude Code Prompts - Test Validation Context Base Prompt Updates should include red-green-refactor validation in base prompt",
          "status": "passed",
          "title": "should include red-green-refactor validation in base prompt",
          "duration": 0.8613410000000385,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code Prompts - Test Validation Context",
            "Base Prompt Updates"
          ],
          "fullName": "Claude Code Prompts - Test Validation Context Base Prompt Updates should include test running instructions in base prompt",
          "status": "passed",
          "title": "should include test running instructions in base prompt",
          "duration": 0.4374399999999241,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code Prompts - Test Validation Context",
            "Test Context Integration"
          ],
          "fullName": "Claude Code Prompts - Test Validation Context Test Context Integration should include generated test code in prompt",
          "status": "passed",
          "title": "should include generated test code in prompt",
          "duration": 0.4497590000000855,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code Prompts - Test Validation Context",
            "Test Context Integration"
          ],
          "fullName": "Claude Code Prompts - Test Validation Context Test Context Integration should include test failure context on retry",
          "status": "passed",
          "title": "should include test failure context on retry",
          "duration": 0.3741989999998623,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code Prompts - Test Validation Context",
            "Test Context Integration"
          ],
          "fullName": "Claude Code Prompts - Test Validation Context Test Context Integration should include iteration context",
          "status": "passed",
          "title": "should include iteration context",
          "duration": 0.23438499999997475,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code Prompts - Test Validation Context",
            "Test Validation Instructions"
          ],
          "fullName": "Claude Code Prompts - Test Validation Context Test Validation Instructions should include test running instructions",
          "status": "passed",
          "title": "should include test running instructions",
          "duration": 0.24216599999999744,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code Prompts - Test Validation Context",
            "Test Validation Instructions"
          ],
          "fullName": "Claude Code Prompts - Test Validation Context Test Validation Instructions should emphasize security test validation",
          "status": "passed",
          "title": "should emphasize security test validation",
          "duration": 0.18611599999985629,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code Prompts - Test Validation Context",
            "Multiple Test Frameworks"
          ],
          "fullName": "Claude Code Prompts - Test Validation Context Multiple Test Frameworks should handle multiple test frameworks in prompt",
          "status": "passed",
          "title": "should handle multiple test frameworks in prompt",
          "duration": 0.22264800000016294,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759804030247,
      "endTime": 1759804030250.2227,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/claude-prompts-validation.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "AI Client with Credential Vending"
          ],
          "fullName": "AI Client with Credential Vending should use vended credentials for Anthropic API calls",
          "status": "passed",
          "title": "should use vended credentials for Anthropic API calls",
          "duration": 1.1900949999999284,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AI Client with Credential Vending"
          ],
          "fullName": "AI Client with Credential Vending should use vended credentials for OpenAI API calls",
          "status": "passed",
          "title": "should use vended credentials for OpenAI API calls",
          "duration": 0.6108110000000124,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AI Client with Credential Vending"
          ],
          "fullName": "AI Client with Credential Vending should handle credential refresh during long-running tasks",
          "status": "passed",
          "title": "should handle credential refresh during long-running tasks",
          "duration": 0.5173489999999674,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AI Client with Credential Vending"
          ],
          "fullName": "AI Client with Credential Vending should fallback to direct API key if vending is disabled",
          "status": "passed",
          "title": "should fallback to direct API key if vending is disabled",
          "duration": 0.470450000000028,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "AI Client with Credential Vending"
          ],
          "fullName": "AI Client with Credential Vending should handle vended credential errors gracefully",
          "status": "passed",
          "title": "should handle vended credential errors gracefully",
          "duration": 1.3463040000001456,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759804030404,
      "endTime": 1759804030408.3462,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/client-with-credentials.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "IssueInterpreter (TDD - Red Phase)",
            "Vulnerability Type Extraction"
          ],
          "fullName": "IssueInterpreter (TDD - Red Phase) Vulnerability Type Extraction should identify SQL injection from description",
          "status": "passed",
          "title": "should identify SQL injection from description",
          "duration": 4.296177999999998,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueInterpreter (TDD - Red Phase)",
            "Vulnerability Type Extraction"
          ],
          "fullName": "IssueInterpreter (TDD - Red Phase) Vulnerability Type Extraction should identify XSS from description",
          "status": "passed",
          "title": "should identify XSS from description",
          "duration": 1.5996100000000126,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueInterpreter (TDD - Red Phase)",
            "Vulnerability Type Extraction"
          ],
          "fullName": "IssueInterpreter (TDD - Red Phase) Vulnerability Type Extraction should identify multiple vulnerability types",
          "status": "passed",
          "title": "should identify multiple vulnerability types",
          "duration": 1.0506780000000049,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueInterpreter (TDD - Red Phase)",
            "Vulnerability Type Extraction"
          ],
          "fullName": "IssueInterpreter (TDD - Red Phase) Vulnerability Type Extraction should handle OWASP terminology",
          "status": "passed",
          "title": "should handle OWASP terminology",
          "duration": 1.2670750000000055,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueInterpreter (TDD - Red Phase)",
            "Affected File and Function Extraction"
          ],
          "fullName": "IssueInterpreter (TDD - Red Phase) Affected File and Function Extraction should extract file paths from various formats",
          "status": "passed",
          "title": "should extract file paths from various formats",
          "duration": 0.9067730000000154,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueInterpreter (TDD - Red Phase)",
            "Affected File and Function Extraction"
          ],
          "fullName": "IssueInterpreter (TDD - Red Phase) Affected File and Function Extraction should extract function names from code snippets",
          "status": "passed",
          "title": "should extract function names from code snippets",
          "duration": 0.7379060000000095,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueInterpreter (TDD - Red Phase)",
            "Affected File and Function Extraction"
          ],
          "fullName": "IssueInterpreter (TDD - Red Phase) Affected File and Function Extraction should handle relative and absolute paths",
          "status": "passed",
          "title": "should handle relative and absolute paths",
          "duration": 0.3430180000000007,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueInterpreter (TDD - Red Phase)",
            "Severity Level Detection"
          ],
          "fullName": "IssueInterpreter (TDD - Red Phase) Severity Level Detection should detect critical severity",
          "status": "passed",
          "title": "should detect critical severity",
          "duration": 0.2998879999999815,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueInterpreter (TDD - Red Phase)",
            "Severity Level Detection"
          ],
          "fullName": "IssueInterpreter (TDD - Red Phase) Severity Level Detection should detect severity from CVSS scores",
          "status": "passed",
          "title": "should detect severity from CVSS scores",
          "duration": 0.2822350000000142,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueInterpreter (TDD - Red Phase)",
            "Severity Level Detection"
          ],
          "fullName": "IssueInterpreter (TDD - Red Phase) Severity Level Detection should infer severity from language",
          "status": "passed",
          "title": "should infer severity from language",
          "duration": 0.3453130000000044,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueInterpreter (TDD - Red Phase)",
            "Test Framework Detection"
          ],
          "fullName": "IssueInterpreter (TDD - Red Phase) Test Framework Detection should detect mentioned test frameworks",
          "status": "passed",
          "title": "should detect mentioned test frameworks",
          "duration": 0.5005349999999851,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueInterpreter (TDD - Red Phase)",
            "Test Framework Detection"
          ],
          "fullName": "IssueInterpreter (TDD - Red Phase) Test Framework Detection should detect test file mentions",
          "status": "passed",
          "title": "should detect test file mentions",
          "duration": 0.24891500000001088,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueInterpreter (TDD - Red Phase)",
            "Natural Language to Pattern Mapping"
          ],
          "fullName": "IssueInterpreter (TDD - Red Phase) Natural Language to Pattern Mapping should map descriptions to AST patterns",
          "status": "passed",
          "title": "should map descriptions to AST patterns",
          "duration": 0.27404699999999593,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueInterpreter (TDD - Red Phase)",
            "Natural Language to Pattern Mapping"
          ],
          "fullName": "IssueInterpreter (TDD - Red Phase) Natural Language to Pattern Mapping should extract fix suggestions",
          "status": "passed",
          "title": "should extract fix suggestions",
          "duration": 0.37485399999999913,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueInterpreter (TDD - Red Phase)",
            "Context Enhancement"
          ],
          "fullName": "IssueInterpreter (TDD - Red Phase) Context Enhancement should extract additional context from issue metadata",
          "status": "passed",
          "title": "should extract additional context from issue metadata",
          "duration": 0.2688349999999957,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueInterpreter (TDD - Red Phase)",
            "Context Enhancement"
          ],
          "fullName": "IssueInterpreter (TDD - Red Phase) Context Enhancement should handle markdown formatting",
          "status": "passed",
          "title": "should handle markdown formatting",
          "duration": 0.34614500000000703,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueInterpreter (TDD - Red Phase)",
            "Context Enhancement"
          ],
          "fullName": "IssueInterpreter (TDD - Red Phase) Context Enhancement should extract referenced URLs and PRs",
          "status": "passed",
          "title": "should extract referenced URLs and PRs",
          "duration": 0.28632900000002337,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueInterpreter (TDD - Red Phase)",
            "Complex Real-World Examples"
          ],
          "fullName": "IssueInterpreter (TDD - Red Phase) Complex Real-World Examples should handle GitHub security advisory format",
          "status": "passed",
          "title": "should handle GitHub security advisory format",
          "duration": 0.9527630000000045,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueInterpreter (TDD - Red Phase)",
            "Complex Real-World Examples"
          ],
          "fullName": "IssueInterpreter (TDD - Red Phase) Complex Real-World Examples should handle detailed vulnerability report",
          "status": "passed",
          "title": "should handle detailed vulnerability report",
          "duration": 1.7424489999999935,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueInterpreter Error Handling"
          ],
          "fullName": "IssueInterpreter Error Handling should handle empty issue body",
          "status": "passed",
          "title": "should handle empty issue body",
          "duration": 0.11977500000000418,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueInterpreter Error Handling"
          ],
          "fullName": "IssueInterpreter Error Handling should handle non-security issues gracefully",
          "status": "passed",
          "title": "should handle non-security issues gracefully",
          "duration": 0.24452000000002272,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759804029353,
      "endTime": 1759804029370.2446,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/__tests__/issue-interpreter.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Credential Manager Timeout Behavior"
          ],
          "fullName": "Credential Manager Timeout Behavior should complete initialization with timeout",
          "status": "passed",
          "title": "should complete initialization with timeout",
          "duration": 0.8979109999997945,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Credential Manager Timeout Behavior"
          ],
          "fullName": "Credential Manager Timeout Behavior should handle timeout on initialization gracefully",
          "status": "passed",
          "title": "should handle timeout on initialization gracefully",
          "duration": 104.47836599999982,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Credential Manager Timeout Behavior"
          ],
          "fullName": "Credential Manager Timeout Behavior should handle timeout on usage reporting gracefully",
          "status": "passed",
          "title": "should handle timeout on usage reporting gracefully",
          "duration": 103.29393699999991,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Credential Manager Timeout Behavior"
          ],
          "fullName": "Credential Manager Timeout Behavior should handle credential auto-refresh on expiration",
          "status": "passed",
          "title": "should handle credential auto-refresh on expiration",
          "duration": 154.10011899999995,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Credential Manager Timeout Behavior"
          ],
          "fullName": "Credential Manager Timeout Behavior should not hang when API is slow",
          "status": "passed",
          "title": "should not hang when API is slow",
          "duration": 102.19055200000003,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Credential Manager Timeout Behavior"
          ],
          "fullName": "Credential Manager Timeout Behavior should clean up credentials on cleanup",
          "status": "passed",
          "title": "should clean up credentials on cleanup",
          "duration": 1.1259050000001025,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759804030453,
      "endTime": 1759804030919.126,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/credentials/__tests__/timeout.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "FeedbackStorage",
            "initialize"
          ],
          "fullName": "FeedbackStorage initialize should create empty feedback store if file does not exist",
          "status": "passed",
          "title": "should create empty feedback store if file does not exist",
          "duration": 1.239922000000007,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FeedbackStorage",
            "initialize"
          ],
          "fullName": "FeedbackStorage initialize should load existing data if file exists",
          "status": "passed",
          "title": "should load existing data if file exists",
          "duration": 0.4775579999999877,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FeedbackStorage",
            "CRUD operations"
          ],
          "fullName": "FeedbackStorage CRUD operations should create feedback with generated ID",
          "status": "passed",
          "title": "should create feedback with generated ID",
          "duration": 0.7906920000000071,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FeedbackStorage",
            "CRUD operations"
          ],
          "fullName": "FeedbackStorage CRUD operations should get feedback by ID",
          "status": "passed",
          "title": "should get feedback by ID",
          "duration": 0.3515999999999906,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FeedbackStorage",
            "CRUD operations"
          ],
          "fullName": "FeedbackStorage CRUD operations should return null when getting non-existent feedback",
          "status": "passed",
          "title": "should return null when getting non-existent feedback",
          "duration": 0.21250599999999054,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FeedbackStorage",
            "CRUD operations"
          ],
          "fullName": "FeedbackStorage CRUD operations should update feedback",
          "status": "passed",
          "title": "should update feedback",
          "duration": 0.5104449999999758,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FeedbackStorage",
            "CRUD operations"
          ],
          "fullName": "FeedbackStorage CRUD operations should return null when updating non-existent feedback",
          "status": "passed",
          "title": "should return null when updating non-existent feedback",
          "duration": 0.2391719999999964,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FeedbackStorage",
            "CRUD operations"
          ],
          "fullName": "FeedbackStorage CRUD operations should delete feedback",
          "status": "passed",
          "title": "should delete feedback",
          "duration": 0.5000500000000159,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FeedbackStorage",
            "CRUD operations"
          ],
          "fullName": "FeedbackStorage CRUD operations should return false when deleting non-existent feedback",
          "status": "passed",
          "title": "should return false when deleting non-existent feedback",
          "duration": 0.19634700000000294,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FeedbackStorage",
            "Query operations"
          ],
          "fullName": "FeedbackStorage Query operations should query feedback by issueId",
          "status": "passed",
          "title": "should query feedback by issueId",
          "duration": 0.4135040000000174,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FeedbackStorage",
            "Query operations"
          ],
          "fullName": "FeedbackStorage Query operations should query feedback by prId",
          "status": "passed",
          "title": "should query feedback by prId",
          "duration": 0.2994730000000061,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FeedbackStorage",
            "Query operations"
          ],
          "fullName": "FeedbackStorage Query operations should query feedback by reviewerId",
          "status": "passed",
          "title": "should query feedback by reviewerId",
          "duration": 0.3034529999999904,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FeedbackStorage",
            "Query operations"
          ],
          "fullName": "FeedbackStorage Query operations should query feedback by type",
          "status": "passed",
          "title": "should query feedback by type",
          "duration": 0.2913250000000005,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FeedbackStorage",
            "Query operations"
          ],
          "fullName": "FeedbackStorage Query operations should query feedback by sentiment",
          "status": "passed",
          "title": "should query feedback by sentiment",
          "duration": 0.28710000000000946,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FeedbackStorage",
            "Query operations"
          ],
          "fullName": "FeedbackStorage Query operations should query feedback by actionTaken",
          "status": "passed",
          "title": "should query feedback by actionTaken",
          "duration": 0.2661510000000078,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FeedbackStorage",
            "Query operations"
          ],
          "fullName": "FeedbackStorage Query operations should query feedback by date range",
          "status": "passed",
          "title": "should query feedback by date range",
          "duration": 0.2832160000000101,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FeedbackStorage",
            "Query operations"
          ],
          "fullName": "FeedbackStorage Query operations should limit query results",
          "status": "passed",
          "title": "should limit query results",
          "duration": 0.29876100000001315,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FeedbackStorage",
            "Query operations"
          ],
          "fullName": "FeedbackStorage Query operations should combine multiple query parameters",
          "status": "passed",
          "title": "should combine multiple query parameters",
          "duration": 0.27676200000001927,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FeedbackStorage",
            "Query operations"
          ],
          "fullName": "FeedbackStorage Query operations should get feedback for an issue",
          "status": "passed",
          "title": "should get feedback for an issue",
          "duration": 0.29533100000000445,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FeedbackStorage",
            "Query operations"
          ],
          "fullName": "FeedbackStorage Query operations should get feedback for a PR",
          "status": "passed",
          "title": "should get feedback for a PR",
          "duration": 0.35984600000000455,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "FeedbackStorage",
            "Stats"
          ],
          "fullName": "FeedbackStorage Stats should generate correct statistics",
          "status": "passed",
          "title": "should generate correct statistics",
          "duration": 4.480837000000008,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759804029391,
      "endTime": 1759804029403.481,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/feedback/__tests__/storage.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Label Manager"
          ],
          "fullName": "Label Manager should create missing labels",
          "status": "passed",
          "title": "should create missing labels",
          "duration": 1.8261780000000272,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Label Manager"
          ],
          "fullName": "Label Manager should handle API errors gracefully",
          "status": "passed",
          "title": "should handle API errors gracefully",
          "duration": 0.47231699999997545,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Label Manager"
          ],
          "fullName": "Label Manager should be case-insensitive when checking existing labels",
          "status": "passed",
          "title": "should be case-insensitive when checking existing labels",
          "duration": 0.68774099999996,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759804031141,
      "endTime": 1759804031143.6877,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/github/__tests__/label-manager.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "ValidationMode - RSOLV_TESTING_MODE",
            "Normal mode (RSOLV_TESTING_MODE not set)"
          ],
          "fullName": "ValidationMode - RSOLV_TESTING_MODE Normal mode (RSOLV_TESTING_MODE not set) should mark as false positive when tests pass",
          "status": "passed",
          "title": "should mark as false positive when tests pass",
          "duration": 4.3879779999999755,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ValidationMode - RSOLV_TESTING_MODE",
            "Normal mode (RSOLV_TESTING_MODE not set)"
          ],
          "fullName": "ValidationMode - RSOLV_TESTING_MODE Normal mode (RSOLV_TESTING_MODE not set) should mark as validated when tests fail",
          "status": "passed",
          "title": "should mark as validated when tests fail",
          "duration": 1.2598370000000614,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ValidationMode - RSOLV_TESTING_MODE",
            "Testing mode (RSOLV_TESTING_MODE=true)"
          ],
          "fullName": "ValidationMode - RSOLV_TESTING_MODE Testing mode (RSOLV_TESTING_MODE=true) should mark as validated even when tests pass",
          "status": "passed",
          "title": "should mark as validated even when tests pass",
          "duration": 0.9683519999999817,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ValidationMode - RSOLV_TESTING_MODE",
            "Testing mode (RSOLV_TESTING_MODE=true)"
          ],
          "fullName": "ValidationMode - RSOLV_TESTING_MODE Testing mode (RSOLV_TESTING_MODE=true) should still mark as validated when tests fail",
          "status": "passed",
          "title": "should still mark as validated when tests fail",
          "duration": 0.7619010000000799,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ValidationMode - RSOLV_TESTING_MODE",
            "Testing mode (RSOLV_TESTING_MODE=true)"
          ],
          "fullName": "ValidationMode - RSOLV_TESTING_MODE Testing mode (RSOLV_TESTING_MODE=true) should include testing mode info in validation branch operations",
          "status": "passed",
          "title": "should include testing mode info in validation branch operations",
          "duration": 1.381003000000078,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ValidationMode - RSOLV_TESTING_MODE",
            "Edge cases"
          ],
          "fullName": "ValidationMode - RSOLV_TESTING_MODE Edge cases should respect RSOLV_TESTING_MODE=false as normal mode",
          "status": "passed",
          "title": "should respect RSOLV_TESTING_MODE=false as normal mode",
          "duration": 0.8900409999999965,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ValidationMode - RSOLV_TESTING_MODE",
            "Edge cases"
          ],
          "fullName": "ValidationMode - RSOLV_TESTING_MODE Edge cases should handle testing mode with test generation failure",
          "status": "passed",
          "title": "should handle testing mode with test generation failure",
          "duration": 4.955435999999963,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ValidationMode - RSOLV_TESTING_MODE",
            "Edge cases"
          ],
          "fullName": "ValidationMode - RSOLV_TESTING_MODE Edge cases should handle testing mode with analysis failure",
          "status": "passed",
          "title": "should handle testing mode with analysis failure",
          "duration": 0.3954540000000861,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759804030138,
      "endTime": 1759804030153.3955,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/modes/__tests__/validation-mode-testing-flag.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "IssueCreator - Duplicate Detection",
            "findExistingIssue"
          ],
          "fullName": "IssueCreator - Duplicate Detection findExistingIssue should find existing issue with matching vulnerability type label",
          "status": "passed",
          "title": "should find existing issue with matching vulnerability type label",
          "duration": 0.6607830000000376,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueCreator - Duplicate Detection",
            "findExistingIssue"
          ],
          "fullName": "IssueCreator - Duplicate Detection findExistingIssue should return null when no existing issue found",
          "status": "passed",
          "title": "should return null when no existing issue found",
          "duration": 0.40998999999987973,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueCreator - Duplicate Detection",
            "updateExistingIssue"
          ],
          "fullName": "IssueCreator - Duplicate Detection updateExistingIssue should update existing issue with new scan results",
          "status": "passed",
          "title": "should update existing issue with new scan results",
          "duration": 0.6421490000000176,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueCreator - Duplicate Detection",
            "createIssuesFromGroups with duplicate detection"
          ],
          "fullName": "IssueCreator - Duplicate Detection createIssuesFromGroups with duplicate detection should update existing issue instead of creating new one",
          "status": "passed",
          "title": "should update existing issue instead of creating new one",
          "duration": 0.505563999999822,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "IssueCreator - Duplicate Detection",
            "createIssuesFromGroups with duplicate detection"
          ],
          "fullName": "IssueCreator - Duplicate Detection createIssuesFromGroups with duplicate detection should create new issue when no duplicate exists",
          "status": "passed",
          "title": "should create new issue when no duplicate exists",
          "duration": 0.37787500000013097,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759804030442,
      "endTime": 1759804030444.5056,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/scanner/__tests__/issue-creator-duplicates.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "PatternAPIClient Authentication",
            "x-api-key header usage"
          ],
          "fullName": "PatternAPIClient Authentication x-api-key header usage should use x-api-key header for pattern fetching",
          "status": "passed",
          "title": "should use x-api-key header for pattern fetching",
          "duration": 0.7713439999999991,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PatternAPIClient Authentication",
            "x-api-key header usage"
          ],
          "fullName": "PatternAPIClient Authentication x-api-key header usage should NOT use Authorization Bearer header",
          "status": "passed",
          "title": "should NOT use Authorization Bearer header",
          "duration": 0.5591390000001866,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PatternAPIClient Authentication",
            "x-api-key header usage"
          ],
          "fullName": "PatternAPIClient Authentication x-api-key header usage should use query parameter for language",
          "status": "passed",
          "title": "should use query parameter for language",
          "duration": 0.4471240000000307,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PatternAPIClient Authentication",
            "x-api-key header usage"
          ],
          "fullName": "PatternAPIClient Authentication x-api-key header usage should handle API key from environment variable",
          "status": "passed",
          "title": "should handle API key from environment variable",
          "duration": 0.39744500000006155,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PatternAPIClient Authentication",
            "x-api-key header usage"
          ],
          "fullName": "PatternAPIClient Authentication x-api-key header usage should handle missing API key gracefully",
          "status": "passed",
          "title": "should handle missing API key gracefully",
          "duration": 0.36650600000007216,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PatternAPIClient Authentication",
            "x-api-key header usage"
          ],
          "fullName": "PatternAPIClient Authentication x-api-key header usage should handle 401 unauthorized response",
          "status": "passed",
          "title": "should handle 401 unauthorized response",
          "duration": 2.100351000000046,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PatternAPIClient Authentication",
            "x-api-key header usage"
          ],
          "fullName": "PatternAPIClient Authentication x-api-key header usage should use consistent authentication across all endpoints",
          "status": "passed",
          "title": "should use consistent authentication across all endpoints",
          "duration": 0.6898759999999129,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PatternAPIClient Authentication",
            "Regression prevention for ADR-027"
          ],
          "fullName": "PatternAPIClient Authentication Regression prevention for ADR-027 should never use Bearer token for RSOLV API",
          "status": "passed",
          "title": "should never use Bearer token for RSOLV API",
          "duration": 0.981314999999995,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "PatternAPIClient Authentication",
            "Regression prevention for ADR-027"
          ],
          "fullName": "PatternAPIClient Authentication Regression prevention for ADR-027 should use correct endpoint format with query parameters",
          "status": "passed",
          "title": "should use correct endpoint format with query parameters",
          "duration": 0.562003999999888,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759804030309,
      "endTime": 1759804030316.562,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/security/__tests__/pattern-api-auth.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "RFC-045: Validation Confidence Scoring",
            "Confidence Level Calculation"
          ],
          "fullName": "RFC-045: Validation Confidence Scoring Confidence Level Calculation should calculate HIGH confidence for scores >= 0.8",
          "status": "passed",
          "title": "should calculate HIGH confidence for scores >= 0.8",
          "duration": 0.45318299999985356,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-045: Validation Confidence Scoring",
            "Confidence Level Calculation"
          ],
          "fullName": "RFC-045: Validation Confidence Scoring Confidence Level Calculation should calculate MEDIUM confidence for scores 0.5-0.79",
          "status": "passed",
          "title": "should calculate MEDIUM confidence for scores 0.5-0.79",
          "duration": 0.2493179999999029,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-045: Validation Confidence Scoring",
            "Confidence Level Calculation"
          ],
          "fullName": "RFC-045: Validation Confidence Scoring Confidence Level Calculation should calculate LOW confidence for scores 0.2-0.49",
          "status": "passed",
          "title": "should calculate LOW confidence for scores 0.2-0.49",
          "duration": 0.16493900000000394,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-045: Validation Confidence Scoring",
            "Confidence Level Calculation"
          ],
          "fullName": "RFC-045: Validation Confidence Scoring Confidence Level Calculation should calculate REVIEW confidence for scores < 0.2",
          "status": "passed",
          "title": "should calculate REVIEW confidence for scores < 0.2",
          "duration": 0.13975399999981164,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-045: Validation Confidence Scoring",
            "Validation Strategy Selection"
          ],
          "fullName": "RFC-045: Validation Confidence Scoring Validation Strategy Selection should return correct strategy for COMMAND_INJECTION",
          "status": "passed",
          "title": "should return correct strategy for COMMAND_INJECTION",
          "duration": 0.19144299999993564,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-045: Validation Confidence Scoring",
            "Validation Strategy Selection"
          ],
          "fullName": "RFC-045: Validation Confidence Scoring Validation Strategy Selection should return correct strategy for XSS variants",
          "status": "passed",
          "title": "should return correct strategy for XSS variants",
          "duration": 0.16663900000003196,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-045: Validation Confidence Scoring",
            "Validation Strategy Selection"
          ],
          "fullName": "RFC-045: Validation Confidence Scoring Validation Strategy Selection should return DEFAULT strategy for unknown types",
          "status": "passed",
          "title": "should return DEFAULT strategy for unknown types",
          "duration": 0.14134699999999611,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-045: Validation Confidence Scoring",
            "EnhancedValidationEnricher (failing tests)"
          ],
          "fullName": "RFC-045: Validation Confidence Scoring EnhancedValidationEnricher (failing tests) should return confidence scores instead of binary validation",
          "status": "passed",
          "title": "should return confidence scores instead of binary validation",
          "duration": 16.057313000000022,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-045: Validation Confidence Scoring",
            "EnhancedValidationEnricher (failing tests)"
          ],
          "fullName": "RFC-045: Validation Confidence Scoring EnhancedValidationEnricher (failing tests) should never return 0 vulnerabilities if scan found any",
          "status": "passed",
          "title": "should never return 0 vulnerabilities if scan found any",
          "duration": 1.3692829999999958,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "RFC-045: Validation Confidence Scoring",
            "EnhancedValidationEnricher (failing tests)"
          ],
          "fullName": "RFC-045: Validation Confidence Scoring EnhancedValidationEnricher (failing tests) should process command injection without synthetic data workaround",
          "status": "passed",
          "title": "should process command injection without synthetic data workaround",
          "duration": 0.8932780000000093,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759804031106,
      "endTime": 1759804031126.8933,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/validation/__tests__/confidence-scoring.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Claude Code CLI Retry Mechanism",
            "successful execution"
          ],
          "fullName": "Claude Code CLI Retry Mechanism successful execution should succeed on first attempt without retry",
          "status": "passed",
          "title": "should succeed on first attempt without retry",
          "duration": 10.34883400000001,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code CLI Retry Mechanism",
            "retry on transient failures"
          ],
          "fullName": "Claude Code CLI Retry Mechanism retry on transient failures should retry on rate limit error and succeed",
          "status": "passed",
          "title": "should retry on rate limit error and succeed",
          "duration": 31.215330999999992,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code CLI Retry Mechanism",
            "retry on transient failures"
          ],
          "fullName": "Claude Code CLI Retry Mechanism retry on transient failures should retry on overloaded error",
          "status": "passed",
          "title": "should retry on overloaded error",
          "duration": 61.73128300000002,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code CLI Retry Mechanism",
            "retry on transient failures"
          ],
          "fullName": "Claude Code CLI Retry Mechanism retry on transient failures should retry on network errors",
          "status": "passed",
          "title": "should retry on network errors",
          "duration": 31.12456100000003,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code CLI Retry Mechanism",
            "non-retryable errors"
          ],
          "fullName": "Claude Code CLI Retry Mechanism non-retryable errors should not retry on invalid API key error",
          "status": "passed",
          "title": "should not retry on invalid API key error",
          "duration": 10.397080000000017,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code CLI Retry Mechanism",
            "non-retryable errors"
          ],
          "fullName": "Claude Code CLI Retry Mechanism non-retryable errors should not retry on permission denied",
          "status": "passed",
          "title": "should not retry on permission denied",
          "duration": 10.612950000000012,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code CLI Retry Mechanism",
            "max attempts"
          ],
          "fullName": "Claude Code CLI Retry Mechanism max attempts should respect max attempts configuration",
          "status": "passed",
          "title": "should respect max attempts configuration",
          "duration": 30.611444000000006,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code CLI Retry Mechanism",
            "max attempts"
          ],
          "fullName": "Claude Code CLI Retry Mechanism max attempts should fail after all retries exhausted",
          "status": "passed",
          "title": "should fail after all retries exhausted",
          "duration": 60.182308999999975,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code CLI Retry Mechanism",
            "exponential backoff"
          ],
          "fullName": "Claude Code CLI Retry Mechanism exponential backoff should apply exponential backoff between retries",
          "status": "passed",
          "title": "should apply exponential backoff between retries",
          "duration": 61.954046000000005,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code CLI Retry Mechanism",
            "exponential backoff"
          ],
          "fullName": "Claude Code CLI Retry Mechanism exponential backoff should cap delay at maxDelayMs",
          "status": "passed",
          "title": "should cap delay at maxDelayMs",
          "duration": 71.525938,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code CLI Retry Mechanism",
            "custom retryable errors"
          ],
          "fullName": "Claude Code CLI Retry Mechanism custom retryable errors should use custom retryable error list",
          "status": "passed",
          "title": "should use custom retryable error list",
          "duration": 31.186003000000028,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code CLI Retry Mechanism",
            "custom retryable errors"
          ],
          "fullName": "Claude Code CLI Retry Mechanism custom retryable errors should not retry errors not in custom list",
          "status": "passed",
          "title": "should not retry errors not in custom list",
          "duration": 10.778187000000003,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code Max Development Mode",
            "API key selection"
          ],
          "fullName": "Claude Code Max Development Mode API key selection should detect development mode via RSOLV_DEV_MODE",
          "status": "passed",
          "title": "should detect development mode via RSOLV_DEV_MODE",
          "duration": 0.33490599999993265,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code Max Development Mode",
            "API key selection"
          ],
          "fullName": "Claude Code Max Development Mode API key selection should detect development mode via USE_CLAUDE_CODE_MAX",
          "status": "passed",
          "title": "should detect development mode via USE_CLAUDE_CODE_MAX",
          "duration": 0.1835280000000239,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code Max Development Mode",
            "API key selection"
          ],
          "fullName": "Claude Code Max Development Mode API key selection should use Claude Code Max key in dev mode",
          "status": "passed",
          "title": "should use Claude Code Max key in dev mode",
          "duration": 0.19378599999993185,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code Max Development Mode",
            "API key selection"
          ],
          "fullName": "Claude Code Max Development Mode API key selection should fall back to regular key if Max key not set",
          "status": "passed",
          "title": "should fall back to regular key if Max key not set",
          "duration": 0.1489800000000514,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Claude Code Max Development Mode",
            "API key selection"
          ],
          "fullName": "Claude Code Max Development Mode API key selection should use regular key in production mode",
          "status": "passed",
          "title": "should use regular key in production mode",
          "duration": 0.13884700000005523,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759804029413,
      "endTime": 1759804029838.139,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/adapters/__tests__/claude-code-cli-retry.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "ClaudeCodeCLIAdapter",
            "generateSolution"
          ],
          "fullName": "ClaudeCodeCLIAdapter generateSolution should fail without ANTHROPIC_API_KEY",
          "status": "passed",
          "title": "should fail without ANTHROPIC_API_KEY",
          "duration": 0.347391000000016,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ClaudeCodeCLIAdapter",
            "constructPrompt"
          ],
          "fullName": "ClaudeCodeCLIAdapter constructPrompt should generate structured phased prompt when enabled",
          "status": "passed",
          "title": "should generate structured phased prompt when enabled",
          "duration": 0.18122300000004543,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ClaudeCodeCLIAdapter",
            "constructPrompt"
          ],
          "fullName": "ClaudeCodeCLIAdapter constructPrompt should generate regular prompt when structured phases disabled",
          "status": "passed",
          "title": "should generate regular prompt when structured phases disabled",
          "duration": 0.12306799999987561,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759804031212,
      "endTime": 1759804031212.3474,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/adapters/__tests__/claude-code-cli.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Prompt Generation Integration Tests",
            "End-to-end prompt generation with specificVulnerabilities"
          ],
          "fullName": "Prompt Generation Integration Tests End-to-end prompt generation with specificVulnerabilities should generate complete prompt with all vulnerability details",
          "status": "passed",
          "title": "should generate complete prompt with all vulnerability details",
          "duration": 10.085098000000016,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Prompt Generation Integration Tests",
            "End-to-end prompt generation with specificVulnerabilities"
          ],
          "fullName": "Prompt Generation Integration Tests End-to-end prompt generation with specificVulnerabilities should handle missing specificVulnerabilities gracefully",
          "status": "passed",
          "title": "should handle missing specificVulnerabilities gracefully",
          "duration": 1.9620500000000902,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Prompt Generation Integration Tests",
            "End-to-end prompt generation with specificVulnerabilities"
          ],
          "fullName": "Prompt Generation Integration Tests End-to-end prompt generation with specificVulnerabilities should preserve vulnerabilities through validation iterations",
          "status": "passed",
          "title": "should preserve vulnerabilities through validation iterations",
          "duration": 3.00984799999992,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Prompt Generation Integration Tests",
            "Prompt structure validation"
          ],
          "fullName": "Prompt Generation Integration Tests Prompt structure validation should order prompt sections correctly",
          "status": "passed",
          "title": "should order prompt sections correctly",
          "duration": 2.826942999999801,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759804030263,
      "endTime": 1759804030280.827,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/ai/adapters/__tests__/prompt-generation-integration.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "ElixirASTAnalyzer - Core Functionality",
            "initialization"
          ],
          "fullName": "ElixirASTAnalyzer - Core Functionality initialization should initialize with config",
          "status": "passed",
          "title": "should initialize with config",
          "duration": 0.7807589999999891,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ElixirASTAnalyzer - Core Functionality",
            "initialization"
          ],
          "fullName": "ElixirASTAnalyzer - Core Functionality initialization should use environment variables as fallback",
          "status": "passed",
          "title": "should use environment variables as fallback",
          "duration": 0.47333800000001247,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ElixirASTAnalyzer - Core Functionality",
            "file analysis"
          ],
          "fullName": "ElixirASTAnalyzer - Core Functionality file analysis should analyze single file",
          "status": "passed",
          "title": "should analyze single file",
          "duration": 1.1514779999999973,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ElixirASTAnalyzer - Core Functionality",
            "file analysis"
          ],
          "fullName": "ElixirASTAnalyzer - Core Functionality file analysis should handle empty file content",
          "status": "passed",
          "title": "should handle empty file content",
          "duration": 0.5418119999999362,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ElixirASTAnalyzer - Core Functionality",
            "file analysis"
          ],
          "fullName": "ElixirASTAnalyzer - Core Functionality file analysis should handle API errors gracefully",
          "status": "passed",
          "title": "should handle API errors gracefully",
          "duration": 0.9345519999999397,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ElixirASTAnalyzer - Core Functionality",
            "batch file analysis"
          ],
          "fullName": "ElixirASTAnalyzer - Core Functionality batch file analysis should analyze multiple files using analyze method",
          "status": "passed",
          "title": "should analyze multiple files using analyze method",
          "duration": 0.6113010000001395,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ElixirASTAnalyzer - Core Functionality",
            "batch file analysis"
          ],
          "fullName": "ElixirASTAnalyzer - Core Functionality batch file analysis should handle empty file list",
          "status": "passed",
          "title": "should handle empty file list",
          "duration": 0.3387400000001435,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ElixirASTAnalyzer - Core Functionality",
            "batch file analysis"
          ],
          "fullName": "ElixirASTAnalyzer - Core Functionality batch file analysis should respect file count limits",
          "status": "passed",
          "title": "should respect file count limits",
          "duration": 0.38317800000004354,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ElixirASTAnalyzer - Core Functionality",
            "session management"
          ],
          "fullName": "ElixirASTAnalyzer - Core Functionality session management should reuse sessions within timeout",
          "status": "passed",
          "title": "should reuse sessions within timeout",
          "duration": 0.5456979999999021,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ElixirASTAnalyzer - Core Functionality",
            "session management"
          ],
          "fullName": "ElixirASTAnalyzer - Core Functionality session management should create new session when expired",
          "status": "passed",
          "title": "should create new session when expired",
          "duration": 0.5302070000000185,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "ElixirASTAnalyzer - Core Functionality",
            "cleanup"
          ],
          "fullName": "ElixirASTAnalyzer - Core Functionality cleanup should cleanup sessions on cleanup call",
          "status": "passed",
          "title": "should cleanup sessions on cleanup call",
          "duration": 0.6421639999998661,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1759804030295,
      "endTime": 1759804030302.642,
      "status": "passed",
      "message": "",
      "name": "/home/dylan/dev/rsolv/RSOLV-action/src/security/analyzers/__tests__/elixir-ast-analyzer-core.test.ts"
    }
  ],
  "passRate": "88.93%"
}