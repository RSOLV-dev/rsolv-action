/**
 * AI provider types and interfaces
 */

/**
 * Supported AI providers
 */
export type AIProvider = 'anthropic' | 'openrouter' | 'openai' | 'mistral' | 'ollama';

/**
 * Common issue analysis result
 */
export interface IssueAnalysis {
  summary: string;
  complexity: 'low' | 'medium' | 'high';
  estimatedTime: number; // minutes
  potentialFixes: string[];
  recommendedApproach: string;
  relatedFiles?: string[];
  requiredChanges?: string[];
}

/**
 * PR solution generated by AI
 */
export interface PullRequestSolution {
  title: string;
  description: string;
  files: Array<{
    path: string;
    changes: string;
  }>;
  tests?: string[];
}

/**
 * Common AI client interface
 */
export interface AIClient {
  /**
   * Analyze an issue to determine complexity and approaches
   */
  analyzeIssue(
    issueTitle: string,
    issueBody: string,
    repoContext?: any
  ): Promise<IssueAnalysis>;
  
  /**
   * Generate a solution for an issue
   */
  generateSolution(
    issueTitle: string,
    issueBody: string,
    issueAnalysis: IssueAnalysis,
    repoContext?: any
  ): Promise<PullRequestSolution>;
}

/**
 * AI configuration
 */
export interface AIConfig {
  provider: AIProvider;
  apiKey: string;
  modelName?: string;
  temperature?: number;
  maxTokens?: number;
}