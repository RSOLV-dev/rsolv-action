--- a/src/ai/adapters/claude-code.ts
+++ b/src/ai/adapters/claude-code.ts
@@ -1,6 +1,7 @@
 import { ClaudeCodeAdapter as BaseAdapter, ClaudeCodeConfig } from '@anthropic-ai/claude-code';
 import { query, SDKMessage } from '@anthropic-ai/claude-code/node-sdk';
 import { CredentialManager } from '../../credentials/manager';
+import { ConversationLogger } from '../conversation-logger';
 import { IssueContext, IssueAnalysis, Solution, PullRequestSolution } from '../../types';
 import { Logger } from '../../utils/logger';
 import * as path from 'path';
@@ -20,6 +21,7 @@ export class ClaudeCodeAdapter extends BaseAdapter {
   private credentialManager: CredentialManager | null = null;
   private claudeConfig: ClaudeCodeConfig;
   private repoPath: string;
+  private conversationLogger: ConversationLogger;
   
   // Track usage data for retry statistics
   private usageData: UsageData[] = [];
@@ -30,6 +32,8 @@ export class ClaudeCodeAdapter extends BaseAdapter {
     this.credentialManager = credentialManager;
     this.claudeConfig = config;
     this.repoPath = repoPath || process.cwd();
+    this.conversationLogger = ConversationLogger.getInstance();
+    this.conversationLogger.initialize(); // Async but non-blocking
   }
   
   /**
@@ -165,6 +169,7 @@ export class ClaudeCodeAdapter extends BaseAdapter {
         const messages: SDKMessage[] = [];
         let solution: PullRequestSolution | null = null;
         let explorationPhase = true;
+        const conversationStartTime = Date.now();
         
         if (this.claudeConfig.verboseLogging) {
           logger.info(`Starting Claude Code exploration for issue: ${issueContext.title}`);
@@ -246,6 +251,35 @@ export class ClaudeCodeAdapter extends BaseAdapter {
         
         clearTimeout(timeoutId);
         
+        // Log the conversation if enabled
+        if (this.conversationLogger.isEnabled()) {
+          const conversationDuration = Date.now() - conversationStartTime;
+          await this.conversationLogger.logConversation({
+            issueId: issueContext.id,
+            timestamp: new Date().toISOString(),
+            provider: 'anthropic',
+            model: 'claude-code',
+            messages: messages,
+            metadata: {
+              workflowRun: process.env.GITHUB_RUN_ID,
+              workflowJob: process.env.GITHUB_JOB,
+              repository: issueContext.repository.fullName,
+              issueNumber: issueContext.number,
+              duration: conversationDuration,
+              messageCount: messages.length
+            },
+            result: {
+              success: !!solution,
+              solutionGenerated: !!solution,
+              error: !solution ? 'No solution found in response' : undefined
+            }
+          });
+          
+          await this.conversationLogger.logSummary(
+            issueContext.id,
+            `Claude Code: ${messages.length} messages, ${conversationDuration}ms, solution: ${!!solution}`
+          );
+        }
+        
         // Track usage
         const duration = Date.now() - usageEntry.startTime;
         const usage = {