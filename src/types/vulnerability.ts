/**
 * Type definitions for vulnerability data structures
 * These types ensure compile-time safety and prevent runtime errors
 */

/**
 * Vulnerability as it comes from the scanner
 */
export interface ScannedVulnerability {
  type: string;
  severity: 'low' | 'medium' | 'high' | 'critical';
  line: number;
  message: string;
  description: string;
  confidence: number;
  cweId: string;
  owaspCategory: string;
  remediation: string;
  file: string; // Scanner provides singular 'file'
}

/**
 * Vulnerability as stored in validation data
 * This is what comes from validationAny.vulnerabilities
 */
export interface ValidatedVulnerability {
  type: string;
  severity: string;
  confidence: number;
  // TODO: Determine actual structure from logs
  // Might have different properties than ScannedVulnerability
  [key: string]: unknown; // Temporary until we know the structure
}

/**
 * Validation data structure from the platform
 */
export interface ValidationData {
  confidence: 'high' | 'medium' | 'low' | 'review';
  enriched: boolean;
  hasSpecificVulnerabilities: boolean;
  issueNumber: number;
  timestamp: string;
  validated: boolean;
  vulnerabilities: ValidatedVulnerability[];
  overallConfidence?: string;
}

/**
 * File information with vendor status
 */
export interface FileVendorInfo {
  file: string;
  isVendor: boolean;
}

/**
 * Enhanced issue with validation data
 */
export interface EnhancedIssue {
  title: string;
  body: string;
  labels?: string[];
  validationData: ValidationData;
  specificVulnerabilities: ValidatedVulnerability[];
}